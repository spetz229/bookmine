---
layout: page
title: "Unknown"
prev: x20655.htm
next: x20856.htm
book_path: books/o-reilly-practical-postgresql_oeb/
---
{% include JB/setup %}
{% raw %}
<div>
<div class="NAVHEADER"><table summary="Header navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><th colspan="3" class="calibre2">Practical PostgreSQL</th></tr><tr class="calibre1"><td width="10%" valign="bottom" class="calibre3"><a href="x20655.htm" accesskey="P">Prev</a></td><td width="80%" valign="bottom" class="calibre4"/><td width="10%" valign="bottom" class="calibre5"><a href="x20856.htm" accesskey="N">Next</a></td></tr></table><hr width="100%" class="calibre6"/></div><div class="NAVHEADER"><div class="calibre18"></div><h1 id="calibre_toc_13" class="calibre7"><a name="JDBC" class="calibre8">Chapter 12. JDBC</a></h1><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><b class="calibre10">Table of Contents</b></dt><dt class="NAVHEADER"><a href="c20820.htm#AEN20836">Building the PostgreSQL JDBC Driver</a></dt><dt class="NAVHEADER"><a href="x20856.htm">Using the PostgreSQL Driver</a></dt><dt class="NAVHEADER"><a href="x20921.htm">Using JDBC</a></dt><dt class="NAVHEADER"><a href="x21115.htm">Issues Specific to PostgreSQL and JDBC</a></dt></dl></div><p class="calibre9">This chapter covers <span><i class="EMPHASIS">JDBC</i></span> (â€‰Java DataBase Connectivity), which is a set of classes and methods
  available for the Java programming language. The use of JDBC with Java is a simple, generic, and portable way of interacting
  with different types of databases. For this chapter, some existing knowledge of how to program in Java is assumed.</p><p class="calibre9">The JDBC interfaces, defined by Sun, cover all of the interactions you can have with a standard SQL database. The vendor
  (in this case, PostgreSQL) supplies concrete implementations that implement these interfaces. These concrete implementations
  handle the vendor-specific interactions with the database: connecting, logging in, using stored procedures, and so forth. These
  interfaces are designed this way so that a program using JDBC can connect to any JDBC-compliant database, without your having
  to rewrite the code. However, there are some caveats.</p><p class="calibre9">One issue is that JDBC does not do any client-side SQL parsing or syntax checking. SQL statements are passed off
  transparently to the database, whether or not they are valid. Therefore, if the SQL is valid on one vendor's database, but
  invalid on another vendor's database the implementation won't know until the actual connection is made and the SQL is sent
  across.  Sun is attempting to deal with this problem, and there may be some provisions made to correct this, either in later
  versions of JDBC or in a different standard.</p><p class="calibre9">Another issue is that each vendor has additional helper classes specific to that vendor. For instance, PostgreSQL has
  extensions for geometric data types. Other vendors won't support these extensions; they are specific to PostgreSQL. If you use
  such vendor-specific classes, your program will not work with another JDBC database, despite using the JDBC "standard."</p><p class="calibre9">One advantage of the PostgreSQL JDBC driver is that it is a "Type 4" driver. This means that it is written in Pure Java,
  so it can be taken anywhere, and used anywhere as long as the platform it is used on has TCP/IP capabilities, because the
  driver only connects via TCP/IP.</p><div class="NAVHEADER"><h1 class="calibre7"><a name="AEN20836" class="calibre8">Building the PostgreSQL JDBC Driver</a></h1><p class="calibre9">This section assumes that you already have a PostgreSQL database set up and ready to go. Make sure that you have it set
    to accept incoming TCP/IP connections. This can be configured when running the <span><i class="EMPHASIS">postmaster</i></span> command. For
    more information on database start-up options, see <a href="c16573.htm">Chapter 9</a>.</p><p class="calibre9">Before you can use JDBC, you must build the PostgreSQL JDBC drivers. To do this, you must have the Java source code
    that is used to build the driver. This source is included both in the complete PostgreSQL package, and in the
    <span><i class="EMPHASIS">opt</i></span> package. These can be downloaded from the PostgreSQL site; for more information about downloading
    and installing these, see <a href="c360.htm">Chapter 2</a>.</p><p class="calibre9">You also need Ant. Ant is a standard build system for Java products, somewhat similar to <span><i class="EMPHASIS">gmake</i></span>,
    and is created by Apache's Jakarta project. It is required to build the PostgreSQL JDBC driver.  For more information on Ant,
    see: <span><i class="EMPHASIS">http://jakarta.apache.org/ant/index.html</i></span>. Make sure that Ant's <span><i class="EMPHASIS">bin</i></span> directory
    is in your path.</p><p class="calibre9">First you need to configure the makefile system to recognize that you are using Java. If you did not originally build
    PostgreSQL with Java support, move into the top level of the PostgreSQL source tree, and type 
    <span><i class="EMPHASIS">./configure with-java</i></span>, along with any other configure options you originally used. This will regenerate makefiles and,
    if necessary, will add support for Java.</p><p class="calibre9">Next you must actually build the driver and implementations. Change to the <span><i class="EMPHASIS">src/interfaces/jdbc</i></span>
    directory and issue the <span><i class="EMPHASIS">gmake</i></span> command. This will build two jar files:
    <span><i class="EMPHASIS">postgresql.jar</i></span>, containing the <tt class="REPLACEABLE">Driver</tt> class and other concrete
    implementations, and <span><i class="EMPHASIS">postgresql-examples.jar</i></span>, containing compiled example classes.</p></div></div><div class="NAVHEADER"><hr width="100%" class="calibre6"/><table summary="Footer navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><td width="33%" valign="top" class="calibre3"><a href="x20655.htm" accesskey="P">Prev</a></td><td width="34%" valign="top" class="calibre4"><a href="book1.htm" accesskey="H">Home</a></td><td width="33%" valign="top" class="calibre5"><a href="x20856.htm" accesskey="N">Next</a></td></tr><tr class="calibre1"><td width="33%" valign="top" class="calibre3">PL/pgSQL and Triggers</td><td width="34%" valign="top" class="calibre4"><a href="p19608.htm" accesskey="U">Up</a></td><td width="33%" valign="top" class="calibre5">Using the PostgreSQL Driver</td></tr></table></div></div>

{% endraw %}

