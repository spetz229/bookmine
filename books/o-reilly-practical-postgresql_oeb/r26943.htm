---
layout: page
title: "Unknown"
prev: r26898.htm
next: r27008.htm
book_path: books/o-reilly-practical-postgresql_oeb/
---
{% include JB/setup %}
{% raw %}
<div>
<div class="NAVHEADER"><table summary="Header navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><th colspan="3" class="calibre2">Practical PostgreSQL</th></tr><tr class="calibre1"><td width="10%" valign="bottom" class="calibre3"><a href="r26898.htm" accesskey="P">Prev</a></td><td width="80%" valign="bottom" class="calibre4"/><td width="10%" valign="bottom" class="calibre5"><a href="r27008.htm" accesskey="N">Next</a></td></tr></table><hr width="100%" class="calibre6"/></div><h1 class="calibre7"><a name="SQL-EXPLAIN" class="calibre8">EXPLAIN</a></h1><div class="NAVHEADER"><a name="AEN26947"></a><h2 class="SECT">Name</h2>EXPLAIN -- Shows the statement execution plan for a supplied query.</div><div class="NAVHEADER"><a name="AEN26950"></a><h2 class="SECT">Synopsis</h2><pre class="SCREEN">EXPLAIN [ VERBOSE ] <tt class="REPLACEABLE"><i class="EMPHASIS">query</i></tt></pre><div class="NAVHEADER"><a name="R2-SQL-EXPLAIN-1"></a><h3 class="AUTHOR">Parameters</h3><p class="calibre9"> </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE">VERBOSE</tt></dt><dd class="calibre16"><p class="calibre9">The optional verbose output keyword, which results in extra information being returned about a query plan.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">query</i></tt></dt><dd class="calibre16"><p class="calibre9">The query you intend to have explained.</p></dd></dl></div>
</div><div class="NAVHEADER"><a name="R2-SQL-EXPLAIN-2"></a><h3 class="AUTHOR">Results</h3><p class="calibre9"> </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE">NOTICE:  QUERY PLAN: plan</tt></dt><dd class="calibre16"><p class="calibre9">The notice which will be followed by an explicit query plan sent from the backend.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">EXPLAIN</tt></dt><dd class="calibre16"><p class="calibre9">The message returned below the query plan, signifying that execution of the command is complete.</p></dd></dl></div>
</div></div><div class="NAVHEADER"><a name="R1-SQL-EXPLAIN-1"></a><h2 class="SECT">Description</h2><p class="calibre9">Use the <tt class="REPLACEABLE">EXPLAIN</tt> command to view the execution plan for a query, generated by PostgreSQL's <span><i class="EMPHASIS">planner</i></span> component. The planner component is the part of PostgreSQL that attempts to determine the most efficient manner in which to execute a SQL query. The execution plan details how tables referenced within your query will be scanned by the database server. Depending on the circumstances, tables might be scanned sequentially, or through the use of an index. The plan will list output for each table involved in the execution plan.</p><p class="calibre9">The <tt class="REPLACEABLE">EXPLAIN</tt> command is useful for determining the relative <span><i class="EMPHASIS">cost</i></span> of query execution plans. This cost is measured literally in disk page fetches. The more pages needed, the longer it takes a query to run.</p><p class="calibre9">PostgreSQL does not attempt to equate this number of fetches into a meaningful unit of time, as this will vary widely from machine to machine based on the hardware requirements and load of the operating system. The cost of a query execution plan is therefore only meaningful to the relative cost of an alternative query.</p><p class="calibre9">Two numbers are associated with the cost, separated by two periods. The first number is the estimated cost of startup (the time spent before the first tuple can be returned). The second number is the estimated <span><i class="EMPHASIS">total</i></span> cost that the query will incur to completely execute.</p><p class="calibre9">If you pass the <tt class="REPLACEABLE">VERBOSE</tt> keyword, <tt class="REPLACEABLE">EXPLAIN</tt> will display the internal representation of the plan tree.  This is fairly indecipherable to the average user, and should only be used by developers familiar with the internal workings of PostgreSQL.</p></div><div class="NAVHEADER"><a name="R1-SQL-EXPLAIN-2"></a><h2 class="SECT">Example</h2><p class="calibre9">The following example shows the results received when executing <tt class="REPLACEABLE">EXPLAIN</tt> for a query on the <tt class="REPLACEABLE">books</tt> table, in the <tt class="REPLACEABLE">booktown</tt> database:</p><pre class="SCREEN">booktown=# <tt class="REPLACEABLE"><b class="calibre10">EXPLAIN SELECT * FROM books AS b (book_id)</b></tt>
booktown-# <tt class="REPLACEABLE"><b class="calibre10">        NATURAL INNER JOIN editions;</b></tt>
NOTICE:  QUERY PLAN:

Merge Join  (cost=71.27..83.96 rows=150 width=64)
  -&gt;  Sort  (cost=1.44..1.44 rows=15 width=24)
        -&gt;  Seq Scan on books b  (cost=0.00..1.15 rows=15 width=24)
  -&gt;  Sort  (cost=69.83..69.83 rows=1000 width=40)
        -&gt;  Seq Scan on editions  (cost=0.00..20.00 rows=1000 width=40)

EXPLAIN</pre><p class="calibre9">The next example shows a verbose explanation of a simpler query, with the <tt class="REPLACEABLE">VERBOSE</tt> keyword:</p><pre class="SCREEN">booktown=# <tt class="REPLACEABLE"><b class="calibre10">EXPLAIN VERBOSE SELECT * FROM books;</b></tt>
NOTICE:  QUERY DUMP:

{ SEQSCAN :startup_cost 0.00 :total_cost 1.15 :rows 15 :width 24 :qptargetlist
({ TARGETENTRY :resdom { RESDOM :resno 1 :restype 23 :restypmod -1 :resname id
:reskey 0 :reskeyop 0 :ressortgroupref 0 :resjunk false } :expr { VAR :varno 1
:varattno 1 :vartype 23 :vartypmod -1  :varlevelsup 0 :varnoold 1 :varoattno 1}}
{ TARGETENTRY :resdom { RESDOM :resno 2 :restype 25 :restypmod -1 :resname title
:reskey 0 :reskeyop 0 :ressortgroupref 0 :resjunk false } :expr { VAR :varno 1
:varattno 2 :vartype 25 :vartypmod -1  :varlevelsup 0 :varnoold 1 :varoattno 2}}
{ TARGETENTRY :resdom { RESDOM :resno 3 :restype 23 :restypmod -1 :resname
author_id :reskey 0 :reskeyop 0 :ressortgroupref 0 :resjunk false } :expr
{ VAR :varno 1 :varattno 3 :vartype 23 :vartypmod -1  :varlevelsup 0 :varnoold
1 :varoattno 3}} { TARGETENTRY :resdom { RESDOM :resno 4 :restype 23 :restypmod
-1 :resname subject_id :reskey 0 :reskeyop 0 :ressortgroupref 0 :resjunk false }
:expr { VAR :varno 1 :varattno 4 :vartype 23 :vartypmod -1  :varlevelsup 0
:varnoold 1 :varoattno 4}}) :qpqual &lt;&gt; :lefttree &lt;&gt; :righttree &lt;&gt; :extprm ()
:locprm () :initplan &lt;&gt; :nprm 0  :scanrelid 1 }
NOTICE:  QUERY PLAN:

Seq Scan on books  (cost=0.00..1.15 rows=15 width=24)

EXPLAIN</pre></div><div class="NAVHEADER"><hr width="100%" class="calibre6"/><table summary="Footer navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><td width="33%" valign="top" class="calibre3"><a href="r26898.htm" accesskey="P">Prev</a></td><td width="34%" valign="top" class="calibre4"><a href="book1.htm" accesskey="H">Home</a></td><td width="33%" valign="top" class="calibre5"><a href="r27008.htm" accesskey="N">Next</a></td></tr><tr class="calibre1"><td width="33%" valign="top" class="calibre3">END</td><td width="34%" valign="top" class="calibre4"><a href="c22759.htm" accesskey="U">Up</a></td><td width="33%" valign="top" class="calibre5">FETCH</td></tr></table></div></div>

{% endraw %}

