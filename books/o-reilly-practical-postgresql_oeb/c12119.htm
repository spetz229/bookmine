---
layout: page
title: "Unknown"
prev: x8973.htm
next: x13128.htm
book_path: books/o-reilly-practical-postgresql_oeb/
---
{% include JB/setup %}
{% raw %}
<div>
<div class="NAVHEADER"><table summary="Header navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><th colspan="3" class="calibre2">Practical PostgreSQL</th></tr><tr class="calibre1"><td width="10%" valign="bottom" class="calibre3"><a href="x8973.htm" accesskey="P">Prev</a></td><td width="80%" valign="bottom" class="calibre4"/><td width="10%" valign="bottom" class="calibre5"><a href="x13128.htm" accesskey="N">Next</a></td></tr></table><hr width="100%" class="calibre6"/></div><div class="NAVHEADER"><div class="calibre18"></div><h1 id="calibre_toc_8" class="calibre7"><a name="INCLUDEDCLIENTS" class="calibre8">Chapter 6. PostgreSQL Clients</a></h1><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><b class="calibre10">Table of Contents</b></dt><dt class="NAVHEADER"><a href="c12119.htm#ADVANCEDPSQL">The psql Client: Advanced Topics</a></dt><dt class="NAVHEADER"><a href="x13128.htm">PgAccess: A Graphical Client</a></dt></dl></div><p class="calibre9">This chapter elaborates on the available clients for PostgreSQL. Clients exist in order to provide a user interface to
  the PostgreSQL server (also called the backend).</p><p class="calibre9">The two most accessible clients for PostgreSQL are the command-line driven <span><i class="EMPHASIS">psql</i></span> and a graphical
  alternative, <span><i class="EMPHASIS">PgAccess</i></span>. The <span><i class="EMPHASIS">psql</i></span> client is installed by default, while
  <span><i class="EMPHASIS">PgAccess</i></span> requires specification of the <span><i class="EMPHASIS">--with-tcl</i></span> option during
  compilation of the PostgreSQL source code (as mentioned in <a href="c360.htm">Chapter 2</a>).</p><div class="NAVHEADER"><h1 class="calibre7"><a name="ADVANCEDPSQL" class="calibre8">The psql Client: Advanced Topics</a></h1><p class="calibre9">Basic information about the <span><i class="EMPHASIS">psql</i></span> client is included in <a href="c4890.htm">Chapter 4</a>; this section
    documents more advanced information about the <span><i class="EMPHASIS">psql</i></span> client. The topics covered include a complete list of
    command line options, and an explanation of each <span><i class="EMPHASIS">psql</i></span> slash command. This section also contains
    information on how to load SQL input from external files, use the <span><i class="EMPHASIS">psql</i></span> history, and substitute variables
    dynamically into SQL statements within <span><i class="EMPHASIS">psql</i></span>.</p><div class="NAVHEADER"><h2 class="SECT"><a name="AEN12138" class="calibre8">Command Line Options</a></h2><p class="calibre9">Here is the complete syntax to start <span><i class="EMPHASIS">psql</i></span>:</p><pre class="SCREEN">psql [ <tt class="REPLACEABLE"><i class="EMPHASIS">options</i></tt> ] [ <tt class="REPLACEABLE"><i class="EMPHASIS">dbname</i></tt> [ <tt class="REPLACEABLE"><i class="EMPHASIS">username</i></tt> ] ] </pre><p class="calibre9">The optional <tt class="REPLACEABLE"><i class="EMPHASIS">dbname</i></tt> value specifies the database to initially connect to.  The optional
      <tt class="REPLACEABLE"><i class="EMPHASIS">username</i></tt> specifies the PostgreSQL user to connect as. If either value is unspecified,
      <span><i class="EMPHASIS">psql</i></span> will default to a database and username with the same name as the operating system user starting the
      program.</p><p class="calibre9">Additionally, several run-time <tt class="REPLACEABLE"><i class="EMPHASIS">options</i></tt> can be set by command-line flags. By default,
      <span><i class="EMPHASIS">psql</i></span> understands both standard UNIX short options (e.g., <span><i class="EMPHASIS">-c</i></span>, and GNU-style long
      options (e.g., <span><i class="EMPHASIS">-â€‰-command</i></span>). The latter are not available on all systems.  In the following list, the UNIX
      short options (which are always one letter) are shown first, followed by the equivalent long option.
      
        </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER">-a, --echo-all</dt><dd class="calibre16"><p class="calibre9">Turns on the 'echo all' option, which displays all lines as they are read by <span><i class="EMPHASIS">psql</i></span>.  This
              option can be useful for scripting, and is equivalent to issuing the command: <tt class="REPLACEABLE">\set ECHO all</tt> from
              within <span><i class="EMPHASIS">psql</i></span>.</p></dd><dt class="NAVHEADER">-A, --no-align</dt><dd class="calibre16"><p class="calibre9">Starts <span><i class="EMPHASIS">psql</i></span> in unaligned output formatting mode.  If this is not specified, the output
              formatting mode will be set to aligned.</p></dd><dt class="NAVHEADER">-c <tt class="REPLACEABLE"><i class="EMPHASIS">statement</i></tt>, --command <tt class="REPLACEABLE"><i class="EMPHASIS">statement</i></tt></dt><dd class="calibre16"><p class="calibre9">Instead of running <span><i class="EMPHASIS">psql</i></span> interactively, this option executes the
              <tt class="REPLACEABLE"><i class="EMPHASIS">statement</i></tt> that you specify.  This must be a syntactically correct SQL statement, and must
              be devoid of any <span><i class="EMPHASIS">psql</i></span>-specific commands.</p></dd><dt class="NAVHEADER">-d <tt class="REPLACEABLE"><i class="EMPHASIS">database</i></tt>, --dbname <tt class="REPLACEABLE"><i class="EMPHASIS">database</i></tt></dt><dd class="calibre16"><p class="calibre9">Explicitly specifies the <tt class="REPLACEABLE"><i class="EMPHASIS">database</i></tt> you wish <span><i class="EMPHASIS">psql</i></span> to initially connect to.</p></dd><dt class="NAVHEADER">-e, --echo-queries</dt><dd class="calibre16"><p class="calibre9">Specifies that all queries are echoed to the screen.</p></dd><dt class="NAVHEADER">-E, --echo-hidden</dt><dd class="calibre16"><p class="calibre9">Displays the hidden queries generated by slash commands.  You can also issue the following command from within
              <span><i class="EMPHASIS">psql</i></span> to accomplish the same effect: <tt class="REPLACEABLE">\set ECHO_HIDDEN</tt>.</p></dd><dt class="NAVHEADER">-f <tt class="REPLACEABLE"><i class="EMPHASIS">filename</i></tt>, --file <tt class="REPLACEABLE"><i class="EMPHASIS">filename</i></tt></dt><dd class="calibre16"><p class="calibre9">Specifies that rather than start in interactive mode, <span><i class="EMPHASIS">psql</i></span> should read and execute  SQL
              from the specified <tt class="REPLACEABLE"><i class="EMPHASIS">filename</i></tt>, and process its contents as it would if input directly. After
              processing the file, <span><i class="EMPHASIS">psql</i></span> exits.</p></dd><dt class="NAVHEADER">-F <tt class="REPLACEABLE"><i class="EMPHASIS">separator</i></tt>, --field-separator <tt class="REPLACEABLE"><i class="EMPHASIS">separator</i></tt></dt><dd class="calibre16"><p class="calibre9">Specifies that <span><i class="EMPHASIS">psql</i></span> should use the specified <tt class="REPLACEABLE"><i class="EMPHASIS">separator</i></tt> character as
              the field (column) delimiter. </p></dd><dt class="NAVHEADER">-h <tt class="REPLACEABLE"><i class="EMPHASIS">hostname</i></tt>, --host <tt class="REPLACEABLE"><i class="EMPHASIS">hostname</i></tt></dt><dd class="calibre16"><p class="calibre9">Specifies the hostname of the backend machine. This is usually not necessary when connecting to a local
              backend process, which uses UNIX domain sockets. However, if the <span><i class="EMPHASIS">postmaster</i></span> initializes its
              domain socket file somewhere other than the default path of <span><i class="EMPHASIS">/tmp</i></span>, specifying a
              <tt class="REPLACEABLE"><i class="EMPHASIS">hostname</i></tt> with a leading forward slash will cause <span><i class="EMPHASIS">psql</i></span> to interpret
              the <tt class="REPLACEABLE"><i class="EMPHASIS">hostname</i></tt> value as a local directory to check for the domain socket file (e.g.,
              <tt class="REPLACEABLE">-h /var/pgsql</tt> will cause <span><i class="EMPHASIS">psql</i></span> to look for a domain socket file within
              <span><i class="EMPHASIS">/var/pgsql</i></span>).</p></dd><dt class="NAVHEADER">-H, --html</dt><dd class="calibre16"><p class="calibre9">Starts <span><i class="EMPHASIS">psql</i></span> in HTML output mode.</p></dd><dt class="NAVHEADER">-l, --list</dt><dd class="calibre16"><p class="calibre9">Displays a list of available databases to connect to.</p></dd><dt class="NAVHEADER">-o <tt class="REPLACEABLE"><i class="EMPHASIS">filename</i></tt>, --output <tt class="REPLACEABLE"><i class="EMPHASIS">filename</i></tt></dt><dd class="calibre16"><p class="calibre9">Redirects <span><i class="EMPHASIS">psql</i></span> output to <tt class="REPLACEABLE"><i class="EMPHASIS">filename</i></tt>.</p></dd><dt class="NAVHEADER">-p <tt class="REPLACEABLE"><i class="EMPHASIS">port</i></tt>, --port <tt class="REPLACEABLE"><i class="EMPHASIS">port</i></tt></dt><dd class="calibre16"><p class="calibre9">Specifies TCP/IP <tt class="REPLACEABLE"><i class="EMPHASIS">port</i></tt> (or numbered UNIX domain socket) that
              <span><i class="EMPHASIS">postmaster</i></span>is currently listening on.  By default, this is whatever <tt class="REPLACEABLE">PGPORT</tt>
              is set to (or the default of 5432).</p></dd><dt class="NAVHEADER">-P <tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt>=<tt class="REPLACEABLE"><i class="EMPHASIS">value</i></tt>, --pset <tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt>=<tt class="REPLACEABLE"><i class="EMPHASIS">value</i></tt></dt><dd class="calibre16"><p class="calibre9">Specifies the output formatting options using the same syntax as used with the
              <tt class="REPLACEABLE">\pset</tt> command.  All option names are the same as for
              <tt class="REPLACEABLE">\pset</tt>, but with this command-line option you must use an an equal sign (<tt class="REPLACEABLE">=</tt>) instead
              of a space between each formatting option name and its value.</p></dd><dt class="NAVHEADER">-q, --quiet</dt><dd class="calibre16"><p class="calibre9">Instructs <span><i class="EMPHASIS">psql</i></span> to work in quiet mode.  No <span><i class="EMPHASIS">psql</i></span>-specific informative
              messages or informational text is displayed.</p></dd><dt class="NAVHEADER">-R <tt class="REPLACEABLE"><i class="EMPHASIS">separator</i></tt>, --record-separator <tt class="REPLACEABLE"><i class="EMPHASIS">separator</i></tt></dt><dd class="calibre16"><p class="calibre9">Specifies <tt class="REPLACEABLE"><i class="EMPHASIS">separator</i></tt> as the record (row) delimiter.</p></dd><dt class="NAVHEADER">-s, --single-step</dt><dd class="calibre16"><p class="calibre9">Specifies that <span><i class="EMPHASIS">psql</i></span> will run in "single-step" mode.  While in single-step mode, you
              will be prompted to either continue or cancel upon executing a SQL statement.</p></dd><dt class="NAVHEADER">-S, --single-line</dt><dd class="calibre16"><p class="calibre9">Specifies that <span><i class="EMPHASIS">psql</i></span> will run in "single-line" mode. When running in this mode, a new line
              acts as a semi-colon to execute a SQL statement.</p></dd><dt class="NAVHEADER">-t, --tuples-only</dt><dd class="calibre16"><p class="calibre9">Turns off the display of extraneous table information, such as column names and footers.  To accomplish this from
              within <span><i class="EMPHASIS">psql</i></span>, use the <tt class="REPLACEABLE">\t</tt> command.</p></dd><dt class="NAVHEADER">-T <tt class="REPLACEABLE"><i class="EMPHASIS">table_attribute</i></tt>, --table-attr <tt class="REPLACEABLE"><i class="EMPHASIS">table_attribute</i></tt></dt><dd class="calibre16"><p class="calibre9">Sets an HTML attribute that you wish to be placed within the &lt;table&gt; output while in HTML formatting
              mode (e.g., <tt class="REPLACEABLE">width=100%</tt>). If you pass more than one <tt class="REPLACEABLE"><i class="EMPHASIS">table_attribute</i></tt> to
              this flag, they must all be contained within double quotes. You can use <tt class="REPLACEABLE">\pset</tt> from within
              <span><i class="EMPHASIS">psql</i></span> to insert these attributes as well.</p></dd><dt class="NAVHEADER">-U <tt class="REPLACEABLE"><i class="EMPHASIS">username</i></tt>, --username <tt class="REPLACEABLE"><i class="EMPHASIS">username</i></tt></dt><dd class="calibre16"><p class="calibre9">Connects with the specified <tt class="REPLACEABLE"><i class="EMPHASIS">username</i></tt>.</p></dd><dt class="NAVHEADER">-v <tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt>=<tt class="REPLACEABLE"><i class="EMPHASIS">value</i></tt>, --variable <tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt>=<tt class="REPLACEABLE"><i class="EMPHASIS">value</i></tt></dt><dd class="calibre16"><p class="calibre9">Assigns a <tt class="REPLACEABLE"><i class="EMPHASIS">value</i></tt> to a variable <tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt>, as you would do
              using the <tt class="REPLACEABLE">\set</tt> command from within <span><i class="EMPHASIS">psql</i></span>.  When separating a value from a
              name, use an equal sign instead of a space.</p></dd><dt class="NAVHEADER">-V, --version</dt><dd class="calibre16"><p class="calibre9">Displays version information.</p></dd><dt class="NAVHEADER">-W, --password</dt><dd class="calibre16"><p class="calibre9">Prompts for a password before connecting to a database. This setting remains for the duration of the 
              <span><i class="EMPHASIS">psql</i></span> session.</p></dd><dt class="NAVHEADER">-x, --expanded</dt><dd class="calibre16"><p class="calibre9">Activate extended row format mode.  Accomplish this from within <span><i class="EMPHASIS">psql</i></span> by using the
              <tt class="REPLACEABLE">\x</tt> slash command.</p></dd><dt class="NAVHEADER">-X, --no-psqlrc</dt><dd class="calibre16"><p class="calibre9">Do not read or execute the startup file (<span><i class="EMPHASIS">~/.psqlrc</i></span>).</p></dd><dt class="NAVHEADER">-?, --help</dt><dd class="calibre16"><p class="calibre9">Displays brief <span><i class="EMPHASIS">psql</i></span> command line argument help.</p></dd></dl></div>
<div class="NAVHEADER"><p class="calibre9"></p><table class="calibre" border="1" width="100%"><tr class="calibre1"><td class="calibre23"><b class="calibre10">Warning</b></td></tr><tr class="calibre1"><td class="calibre15"><p class="calibre9">Unstable code was introduced into version 7.0 that causes <span><i class="EMPHASIS">psql</i></span> to obtain a password from the
        user when authentication is requested by the backend process; however, this code is not reliable and will sometimes fail,
        which will subsequently cause the connection attempt to fail.  It is advisable to use the <span><i class="EMPHASIS">-W</i></span> 
        (<span><i class="EMPHASIS">--password</i></span>) option to force a prompt if you know that such authentication will be
        necessary.</p></td></tr></table></div></div><div class="NAVHEADER"><h2 class="SECT"><a name="AEN12351" class="calibre8">Slash Commands</a></h2><p class="calibre9">Recall that within <span><i class="EMPHASIS">psql</i></span> you have several special commands, called slash commands. These commands
      are <span><i class="EMPHASIS">psql</i></span>-specific, and are not sent to the PostgreSQL backend. Explanations of the available
      <span><i class="EMPHASIS">psql</i></span> slash commands follow.</p><div class="NAVHEADER"><h3 class="AUTHOR"><a name="AEN12357" class="calibre8">Formatting commands</a></h3><p class="calibre9">There are several slash commands available to format output. These include <tt class="REPLACEABLE">\pset</tt>,
        <tt class="REPLACEABLE">\a</tt>, <tt class="REPLACEABLE">\C</tt>, <tt class="REPLACEABLE">\f</tt>, <tt class="REPLACEABLE">\H</tt>, <tt class="REPLACEABLE">\t</tt>,
        <tt class="REPLACEABLE">\T</tt>, and <tt class="REPLACEABLE">\x</tt>.  Except for <tt class="REPLACEABLE">\pset</tt>, each command controls a different
        formatting option. The <tt class="REPLACEABLE">\pset</tt> command, which is newer than the others, controls most of those same
        settings. The other commands exist for compatibility with older versions, and for convenience.</p><p class="calibre9">Most of these duplicate the effects of <tt class="REPLACEABLE">\pset</tt>. Each command is detailed within the description of
        that command and its options.  For compatibility with older versions, and convenience, some of these formatting options
        may still have a slash command devoted entirely to them; these commands have been listed as well.
        
        </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE">\pset </tt><tt class="REPLACEABLE"><i class="EMPHASIS">parameter</i></tt> [ <tt class="REPLACEABLE"><i class="EMPHASIS">value</i></tt> ]</dt><dd class="calibre16"><p class="calibre9">The general parameter setting command; this is the most important (and powerful) formatting command of the
              list.  It encapsulates a variety of display options, and it could easily be the only formatting slash command you
              ever use.  You may pass it various parameters to accomplish different formatting functions.</p><p class="calibre9">Within its syntax, <tt class="REPLACEABLE"><i class="EMPHASIS">parameter</i></tt> is one of the following valid parameters:
              
              </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre17"><dt class="NAVHEADER"><tt class="REPLACEABLE">format</tt></dt><dd class="calibre16"><p class="calibre9">This parameter lets you set the output format to <span><i class="EMPHASIS">aligned</i></span>,
                    <span><i class="EMPHASIS">unaligned</i></span>, <span><i class="EMPHASIS">html</i></span>, or <span><i class="EMPHASIS">latex</i></span>.  Aligned is the
                    default setting, for readability.  Unaligned will set output to be printed all on one line, separated by the
                    current character delimiter. The HTML and LaTeX modes output tables meant for inclusion in HTML and LaTeX 
                    documents, respectively.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">border</tt></dt><dd class="calibre16"><p class="calibre9">Depending on the formatting mode, this option will make various changes to the borders used within
                    displayed tables. For example, when outputting in HTML mode, this directly affects the
                    <tt class="REPLACEABLE">border</tt> attribute of the <tt class="REPLACEABLE">&lt;table&gt;</tt> tag.
                    This parameter takes a numeric value. Generally, the higher this number is, the larger (or more pronounced)
                    the borders will be.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">expanded</tt></dt><dd class="calibre16"><p class="calibre9">Setting this option will toggle between regular and extended format.  If you have problems with data
                    being displayed off the screen, or wrapping around in an illegible fashion, try using this option.  It will
                    tell <span><i class="EMPHASIS">psql</i></span> to format all output into two columns, with the column name on the left, and data on the
                    right.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">null</tt></dt><dd class="calibre16"><p class="calibre9">This parameter allows you to set the string that is displayed to you when a null field is displayed.
                    The string you wish to have displayed to represent a <tt class="REPLACEABLE">null</tt> should follow the word
                    <tt class="REPLACEABLE">null</tt>. Ordinarily, that string is set to nothing. To set it back to nothing, you may set
                    it with two apostrophes in a row (<tt class="REPLACEABLE">''</tt>).  To set it to some other value, enclose that
                    value in single-quotes. For example: <tt class="REPLACEABLE">\pset null ' ***null*** '</tt>.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">fieldsep</tt></dt><dd class="calibre16"><p class="calibre9">This parameter accepts the delimiter to separate column values when working in the unaligned
                    formatting mode. It is set to the pipe symbol (<tt class="REPLACEABLE">|</tt>) by default. You may
                    want to use this to set the delimiter to a more commonly used delimiter, such as the tab
                    (<tt class="REPLACEABLE">\t</tt>) character or comma (<tt class="REPLACEABLE">,</tt>).  This
                    has no effect outside of unaligned mode.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">recordsep</tt></dt><dd class="calibre16"><p class="calibre9">This parameter specifies the record delimiter (to separate rows) when working in unaligned
                    formatting mode.  By default this is the newline character (<tt class="REPLACEABLE">\n</tt>).</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">tuples_only</tt></dt><dd class="calibre16"><p class="calibre9">This parameter lets you specify whether you want to see table data only (row results),
                    or if you want to see additional characteristics about the table, such as headers and comments.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">title</tt></dt><dd class="calibre16"><p class="calibre9">This parameter is used to attach a title to any subsequently printed titles. It will be displayed just above
                   normal output. Use a pair of sequential apostrophes (<tt class="REPLACEABLE">''</tt>) to set to an empty string.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">tableattr</tt></dt><dd class="calibre16"><p class="calibre9">This parameter is for use with the HTML format mode; use it to define any table attributes you wish to
                   be included upon formatting table output within the &lt;table&gt; tag (e.g., <tt class="REPLACEABLE">width</tt>,
                   <tt class="REPLACEABLE">cellpadding</tt>, <tt class="REPLACEABLE">cellspacing</tt>). If you wish to define more than a single
                   attribute, be sure to enclose them within double-quotes in a single <tt class="REPLACEABLE"><i class="EMPHASIS">value</i></tt>.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">pager</tt></dt><dd class="calibre16"><p class="calibre9">This parameter toggles off and on the use of a pager for outputting table data.  You may set the
                   <tt class="REPLACEABLE">PAGER</tt> environment variable in your shell before starting <span><i class="EMPHASIS">psql</i></span> if you
                   wish to use a paging program other than <span><i class="EMPHASIS">more</i></span> (such as <span><i class="EMPHASIS">less</i></span>).</p></dd></dl></div>
</dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\a</tt></dt><dd class="calibre16"><p class="calibre9">The align command; this toggles <span><i class="EMPHASIS">psql</i></span> between aligned and unaligned mode. This is equivalent
              to successive uses of <tt class="REPLACEABLE">\pset format aligned</tt> and <tt class="REPLACEABLE">\pset format unaligned</tt>.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\C</tt></dt><dd class="calibre16"><p class="calibre9">The query title command; this allows you to set a title that will be displayed at the top of any displayed
              result set, and is equivalent to <tt class="REPLACEABLE">\pset title</tt>.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\f</tt></dt><dd class="calibre16"><p class="calibre9">The field delimiter command; this sets the field delimiter when using the unaligned formatting mode, and is equivalent to
              <tt class="REPLACEABLE">\pset fieldsep</tt>.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\H</tt></dt><dd class="calibre16"><p class="calibre9">The HTML output command; this toggles between HTML output formatting and the default aligned formatting, and is
              equivalent to successive uses of <tt class="REPLACEABLE">\pset format HTML</tt> and <tt class="REPLACEABLE">\pset format aligned</tt>.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\t</tt></dt><dd class="calibre16"><p class="calibre9">The table information command; this toggles the display of optional table information, and is equivalent to
              <tt class="REPLACEABLE">\pset tuples_only</tt>.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\T</tt></dt><dd class="calibre16"><p class="calibre9">The table attribute command; this defines extra table attributes you wish to be inserted into the table tags of table data
              displaying while in HTML formatting mode. It is equivalent to <tt class="REPLACEABLE">\pset tableattr</tt>.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\x</tt></dt><dd class="calibre16"><p class="calibre9">The toggle expanded command; this toggles expanded row formatting and off. It is equivalent to
              <tt class="REPLACEABLE">\pset expanded</tt>.</p></dd></dl></div>
</div><div class="NAVHEADER"><h3 class="AUTHOR"><a name="AEN12502" class="calibre8">Information display commands</a></h3><p class="calibre9">The <span><i class="EMPHASIS">psql</i></span> client has many commands to help you with
        gathering information about the database and various objects within it.
        Most of these commands are prefixed with <tt class="REPLACEABLE">\d</tt>,
        as this is an easy mnemonic device for <span><i class="EMPHASIS">display</i></span>.  Knowing how to use these commands
        can increase your productivity (or at least your awareness!) within the database.</p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE">\d [ </tt><tt class="REPLACEABLE"><i class="EMPHASIS">relation_name</i></tt> ]</dt><dd class="calibre16"><p class="calibre9">             The general display command; it is used to view various pieces of information about a specified relation. The
             relation you specify may be an index, sequence, table, or view.  When issued, the command will display all of the
             relation's columns, types, and special attributes or defaults. When executed without a specified relation, it
             displays each of the relations available within the currently connected database.
            </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\da [ </tt><tt class="REPLACEABLE"><i class="EMPHASIS">aggregate_name</i></tt> ]</dt><dd class="calibre16"><p class="calibre9">             The aggregate display command; with it, you may retrieve the list of the connected database's aggregate functions, and
             their accepted data types. If you specify a parameter following the slash command, it will display only the list of
             aggregate functions whose names begin with the <tt class="REPLACEABLE"><i class="EMPHASIS">aggregate_name</i></tt> pattern in a case-insensitive comparison.
            </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\dd [ </tt><tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt> ]</dt><dd class="calibre16"><p class="calibre9">             The general database object display command; it is used to display the descriptions of any specified database
             object. The object you specify may be any defined aggregate, function, operator, relation, rule, or trigger.  If
             you do not specify an object <tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt>, or a partial name, all objects in the database will be displayed.
            </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\df [ </tt><tt class="REPLACEABLE"><i class="EMPHASIS">function_name</i></tt> ]</dt><dd class="calibre16"><p class="calibre9">             The function display command; it is used to display information about a function defined within the database,
             including its arguments, and return types. You can either specify a function to display, or specify none, and list
             information about all functions. Like <tt class="REPLACEABLE">\da</tt> and <tt class="REPLACEABLE">\dd</tt>,
             a full or partial <tt class="REPLACEABLE"><i class="EMPHASIS">function_name</i></tt> may be supplied for a case-insensitive comparison against
             all functions from the beginning of each function name.
            </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\d[istvS] [ </tt><tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt> ]</dt><dd class="calibre16"><p class="calibre9">             A scoped version of the general display command; you may specify any of the options within the brackets:
             
             </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre17"><dt class="NAVHEADER"><tt class="REPLACEABLE">i</tt></dt><dd class="calibre16"><p class="calibre9">Displays indices.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">s</tt></dt><dd class="calibre16"><p class="calibre9">Displays sequences.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">t</tt></dt><dd class="calibre16"><p class="calibre9">Displays tables.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">v</tt></dt><dd class="calibre16"><p class="calibre9">Displays views.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">S</tt></dt><dd class="calibre16"><p class="calibre9">Displays system tables.</p></dd></dl></div>
</dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\dl</tt></dt><dd class="calibre16"><p class="calibre9">             The large object display command; this command is equivalent to the <tt class="REPLACEABLE">\lo_list</tt>
             command, which displays the list of large objects within the current database.
            </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\do [ </tt><tt class="REPLACEABLE"><i class="EMPHASIS">operator_name</i></tt> ]</dt><dd class="calibre16"><p class="calibre9">             The operator display command; this displays the list of defined operators within the current database, along with their
             operands (arguments), and return types.  You may specify a complete or partial <tt class="REPLACEABLE"><i class="EMPHASIS">operator_name</i></tt> to
             examine, or retrieve information about all available operators.
            </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\dp [ </tt><tt class="REPLACEABLE"><i class="EMPHASIS">object_name</i></tt> ]</dt><dd class="calibre16"><p class="calibre9">             The permissions display command; this retrieves the list of all database objects (or objects at least partially matching an
             <tt class="REPLACEABLE"><i class="EMPHASIS">object_name</i></tt>, if provided) currently defined within the database, along with all their
             associated access permissions (public, user, and group).
            </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\dT [ </tt><tt class="REPLACEABLE"><i class="EMPHASIS">type_name</i></tt> ]</dt><dd class="calibre16"><p class="calibre9">             The data type display command; this displays the list of all available data types.  You may again
             specify a <tt class="REPLACEABLE"><i class="EMPHASIS">type_name</i></tt>, or partial data type name, or view all available data types in the current database.
            </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\l</tt></dt><dd class="calibre16"><p class="calibre9">             The database display command; this lists all defined databases on the server, and their ownership information, and
             multibyte encoding type. Entering <tt class="REPLACEABLE">\l+</tt> will display any comments the databases may have (see <a href="x17549.htm#DOCUMENTINGADATABASE">the Section called <i class="EMPHASIS">Documenting a Database</i> in Chapter 9</a>" in <a href="c16573.htm">Chapter 9</a> for how to comment on a database).
            </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\lo_list</tt></dt><dd class="calibre16"><p class="calibre9">             The large object display command; this displays the list of all existing large objects within the current database,
             along with any comments that have been attached to them.
            </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\z [ </tt><tt class="REPLACEABLE"><i class="EMPHASIS">object_name</i></tt> ] </dt><dd class="calibre16"><p class="calibre9">              The permissions display command, equivalent to <tt class="REPLACEABLE">\dp</tt>.
            </p></dd></dl></div></div><div class="NAVHEADER"><h3 class="AUTHOR"><a name="AEN12617" class="calibre8">PostgreSQL and psql informative commands</a></h3><p class="calibre9">Within <span><i class="EMPHASIS">psql</i></span> there is a small set of informative commands
        that display information about PostgreSQL and <span><i class="EMPHASIS">psql</i></span> itself.  These are useful
        primarily for obtaining help with command-related questions you may have.</p><p class="calibre9"> </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE">\?</tt></dt><dd class="calibre16"><p class="calibre9">              The help command; this prints out the list of slash commands documented in this chapter.
              </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\copyright</tt></dt><dd class="calibre16"><p class="calibre9">              The copyright command; this displays copyright information about PostgreSQL.
              </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\encoding</tt></dt><dd class="calibre16"><p class="calibre9">              The encoding command; if multibyte encoding is enabled, this can set the client encoding.
              If you do not supply an argument, the current encoding will be displayed on the screen.
              </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\help</tt></dt><dd class="calibre16"><p class="calibre9">              The general help command; used without an argument, it will print a list
              of all commands for which greater help is available. Used with an argument,
              it will print more information (if there is data available) for the subject. Used with
              an asterisk (*) as the argument, it will retrieve syntax information for all documented SQL commands.
              </p></dd></dl></div>
</div><div class="NAVHEADER"><h3 class="AUTHOR"><a name="AEN12644" class="calibre8">Input and output commands</a></h3><p class="calibre9">The <span><i class="EMPHASIS">psql</i></span> client's various input and output slash commands
        allow you to transfer data to and from the database in different ways.  You may also
        specify exactly how <span><i class="EMPHASIS">psql</i></span> transfers data. The commands include:</p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE">\copy </tt><tt class="REPLACEABLE"><i class="EMPHASIS">table</i></tt> { FROM | TO } <tt class="REPLACEABLE"><i class="EMPHASIS">file</i></tt> | stdin | stdout</dt><dd class="calibre16"><p class="calibre9">            
            The copy command; this can be used to copy from the client application (and thus, use the permissions of the user who started
            the client) instead of using the SQL <tt class="REPLACEABLE">COPY</tt> command to copy from the server. This slash command can
            also accept any of the standard <tt class="REPLACEABLE">COPY</tt> clauses. For more information on the syntax of this command,
            refer to the <tt class="REPLACEABLE">COPY</tt> entry in the command reference section at the back of this book.</p><p class="calibre9">The difference between using <tt class="REPLACEABLE">\copy</tt> over <tt class="REPLACEABLE">COPY</tt> are important to understand
            and include:
              
              </p><p class="calibre9"></p><ul class="calibre26"><li class="calibre22"><p class="calibre9">Data you <tt class="REPLACEABLE">\copy</tt> transfers first through
                the client (via your connection), which may be quite a bit slower than if it were done directly through
                the server (i.e., the backend) process.</p></li><li class="calibre22"><p class="calibre9">You have access to files on the local filesystem under whatever permissions the user
                account you are using has, which means you may have more (or less) accessibility
                to needed files than the backend process.</p></li><li class="calibre22"><p class="calibre9">The terms <tt class="REPLACEABLE">stdin</tt> and <tt class="REPLACEABLE">stdout</tt>
                (standard input and output) have a different meaning; they refer to <span><i class="EMPHASIS">psql</i></span>â€‰'s
                input and output stream.  On the backend process they are used
                differently: <tt class="REPLACEABLE">stdin</tt> represents where the
                <tt class="REPLACEABLE">COPY</tt> was issued from, and <tt class="REPLACEABLE">stdout</tt>
                represents the query output stream.</p></li></ul>
</dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\echo </tt><tt class="REPLACEABLE"><i class="EMPHASIS">string</i></tt></dt><dd class="calibre16"><p class="calibre9">             The echo command; this sends a <tt class="REPLACEABLE"><i class="EMPHASIS">string</i></tt> to the standard output. This can be useful for scripting,
             because you can add non-databaseâ€“supplied information into script output (such as comments).
            </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\g [ </tt><tt class="REPLACEABLE"><i class="EMPHASIS">file</i></tt> ]</dt><dd class="calibre16"><p class="calibre9">             The buffer execution command; this is essentially the same as using the semicolon (<tt class="REPLACEABLE">;</tt>) in that it sends the current
             query buffer to the backend to be processed. Optionally, you can save the result set
             to a <tt class="REPLACEABLE"><i class="EMPHASIS">file</i></tt> of your choice, or have <span><i class="EMPHASIS">psql</i></span> pipe it to a separate shell command
             by following the <tt class="REPLACEABLE">\g</tt> with either a filename or piped command name.
            </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\i </tt><tt class="REPLACEABLE"><i class="EMPHASIS">file</i></tt></dt><dd class="calibre16"><p class="calibre9">             The file input command; this reads input from a <tt class="REPLACEABLE"><i class="EMPHASIS">file</i></tt> (the name of which you supply as an argument after
             the <tt class="REPLACEABLE">\i</tt>) and causes <span><i class="EMPHASIS">psql</i></span> to parse its content as if it were typed directly
             into the program's prompt.
            </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\lo_export </tt><tt class="REPLACEABLE"><i class="EMPHASIS">lo_oid</i></tt> <tt class="REPLACEABLE"><i class="EMPHASIS">filename</i></tt></dt><dd class="calibre16"><p class="calibre9">             The large object export command; this lets you export the large object with OID <tt class="REPLACEABLE"><i class="EMPHASIS">lo_oid</i></tt> to
             <tt class="REPLACEABLE"><i class="EMPHASIS">filename</i></tt> on your local filesystem.  This is different from the
             <tt class="REPLACEABLE">lo_export()</tt> server function in the same way the <tt class="REPLACEABLE">\copy</tt> and the SQL
             <tt class="REPLACEABLE">COPY</tt> commands are different.
            </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\lo_import </tt><tt class="REPLACEABLE"><i class="EMPHASIS">filename</i></tt> [ <tt class="REPLACEABLE"><i class="EMPHASIS">comment</i></tt> ]</dt><dd class="calibre16"><p class="calibre9">             The large object import command; this imports large objects into the database from files on your local filesystem.  Optionally, you can
             attach a comment to the object; this is recommended, as otherwise it will be identifiable only by an OID, which you
             will need to remember if you wish to access it again. If you attach a comment to the object, issuing the
             <tt class="REPLACEABLE">\lo_list</tt> command displays your comment with the OID of the object, thus making it easier to find
             once imported.
            </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\o [ </tt><tt class="REPLACEABLE"><i class="EMPHASIS">file</i></tt> | <tt class="REPLACEABLE"><i class="EMPHASIS">|command</i></tt> ]</dt><dd class="calibre16"><p class="calibre9">             The output command; this redirects future output (i.e., data retrieved after this command is issued)
             to either a <tt class="REPLACEABLE"><i class="EMPHASIS">file</i></tt> of your choice or a pipe to a system <tt class="REPLACEABLE"><i class="EMPHASIS">command</i></tt>.
             If not given any arguments, the output channel will reset to standard output; use no arguments
             when you wish to stop sending output elsewhere.  One of the most useful features of this command
             is the ability to pipe output to commands such as <span><i class="EMPHASIS">grep</i></span>, which
             can then search for a pattern of your choosing, allowing you to search against database and
             slash command output (which will, of course, only work if <span><i class="EMPHASIS">grep</i></span>
             is installed on your system).</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\p</tt></dt><dd class="calibre16"><p class="calibre9">             The buffer display command; this prints the <span><i class="EMPHASIS">psql</i></span> input currently buffered. If no SQL input has
             been entered since the last executed statement, the last executed statement is displayed.
            </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\qecho </tt><tt class="REPLACEABLE"><i class="EMPHASIS">string</i></tt></dt><dd class="calibre16"><p class="calibre9">             The query-output echo command; this sends a <tt class="REPLACEABLE"><i class="EMPHASIS">string</i></tt> to your chosen query output channel (which is set with the
             <tt class="REPLACEABLE">\o</tt> command), instead of <tt class="REPLACEABLE">stdout</tt>.
             This command can be useful when you need to send non-databaseâ€“related information into the <span><i class="EMPHASIS">psql</i></span> output.
            </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\w </tt><tt class="REPLACEABLE"><i class="EMPHASIS">file</i></tt> | <tt class="REPLACEABLE"><i class="EMPHASIS">|command</i></tt></dt><dd class="calibre16"><p class="calibre9">              The buffer output command; this outputs the current query buffer to a specified <tt class="REPLACEABLE"><i class="EMPHASIS">file</i></tt>, or piped system
              <tt class="REPLACEABLE"><i class="EMPHASIS">command</i></tt>.
            </p></dd></dl></div></div><div class="NAVHEADER"><h3 class="AUTHOR"><a name="AEN12759" class="calibre8">System commands</a></h3><p class="calibre9">The following commands pertain to the general, systematic functions of <span><i class="EMPHASIS">psql</i></span>. These include
        database re-connection, external editor invocation, setting and unsetting <span><i class="EMPHASIS">psql</i></span> variables, and
        quitting <span><i class="EMPHASIS">psql</i></span>.</p><p class="calibre9"> </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE">\connect [ </tt><tt class="REPLACEABLE"><i class="EMPHASIS">database</i></tt> [ <tt class="REPLACEABLE"><i class="EMPHASIS">username</i></tt> ] ]</dt><dd class="calibre16"><p class="calibre9">               The database re-connection command; this connects you to another database from within <span><i class="EMPHASIS">psql</i></span>.  You may specify the
               <tt class="REPLACEABLE"><i class="EMPHASIS">database</i></tt> to connect to and the <tt class="REPLACEABLE"><i class="EMPHASIS">username</i></tt> to use (if it is not
               the same as the current username) and omitting this parameter will cause the current username to be used.
             </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\edit [ </tt><tt class="REPLACEABLE"><i class="EMPHASIS">file</i></tt> ]</dt><dd class="calibre16"><p class="calibre9">The external editor command; with this, you can either edit a <tt class="REPLACEABLE"><i class="EMPHASIS">file</i></tt> of your choice or (if no
              file is specified) the current query buffer. After you are done editing, the new buffer is input to the query buffer,
              and executed if terminated with a semi-colon.</p><p class="calibre9">When opening a file for editing with this command, <span><i class="EMPHASIS">psql</i></span> searches your environment
              variables for the following fields (in this order) to find out what editor to use: <tt class="REPLACEABLE">PSQL_EDITOR</tt>,
              <tt class="REPLACEABLE">EDITOR</tt>, and <tt class="REPLACEABLE">VISUAL</tt>. If none of these are present, it will attempt to launch
              <span><i class="EMPHASIS">/bin/vi</i></span>.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\q</tt></dt><dd class="calibre16"><p class="calibre9">               The quit command; this exits the program. You may also use CTRL-D in most terminal applications to quit.
              </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\set [ </tt><tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt> [ <tt class="REPLACEABLE"><i class="EMPHASIS">value</i></tt> ] ]</dt><dd class="calibre16"><p class="calibre9">                The variable setting command; used without arguments, this displays all set variables within <span><i class="EMPHASIS">psql</i></span>. Otherwise, it
                sets the variable <tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt> to <tt class="REPLACEABLE"><i class="EMPHASIS">value</i></tt>. If no
                <tt class="REPLACEABLE"><i class="EMPHASIS">value</i></tt> is passed, <tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt> is set with an empty value. If
                multiple values are passed, <tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt> is assigned the concatenation of each
                <tt class="REPLACEABLE"><i class="EMPHASIS">value</i></tt>.
              </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\unset </tt><tt class="REPLACEABLE"><i class="EMPHASIS">variable</i></tt></dt><dd class="calibre16"><p class="calibre9">               The variable unsetting command; this unsets a specified <tt class="REPLACEABLE"><i class="EMPHASIS">variable</i></tt> from memory. This is different from assigning
               a variable with an empty value, which is still technically set.
              </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\! [ </tt><tt class="REPLACEABLE"><i class="EMPHASIS">command</i></tt> ]</dt><dd class="calibre16"><p class="calibre9">                The shell execution command; without arguments, this opens a shell which overrides the <span><i class="EMPHASIS">psql</i></span> prompt until it is
                exited.  Otherwise, it executes a specified shell <tt class="REPLACEABLE"><i class="EMPHASIS">command</i></tt> from within
                <span><i class="EMPHASIS">psql</i></span>, and displays its results to <tt class="REPLACEABLE">stdout</tt>.
              </p></dd></dl></div>
</div></div><div class="NAVHEADER"><h2 class="SECT"><a name="AEN12826" class="calibre8">Using External Files to Enter Queries</a></h2><p class="calibre9">As it is possible to use <span><i class="EMPHASIS">psql</i></span> to enter queries directly from the prompt, it is possible
       to create queries and statements within files and let <span><i class="EMPHASIS">psql</i></span> read the files and insert
       their content into the current buffer.  This can be useful to some users. </p><p class="calibre9">First, enter your query into a file on your filesystem; after it is complete,
       open <span><i class="EMPHASIS">psql</i></span>.  The command to insert files into the current query
       buffer is <tt class="REPLACEABLE">\i</tt>.  <a href="c12119.htm#INSERTINGAFILEINTOTHECURRENTBUFFER">Example 6-1</a> shows how to insert a
       simple file-based <tt class="REPLACEABLE">SELECT</tt> command into the current buffer.
       Text from the query is displayed on-screen in the example, but this may not happen on your
       system by default.  To see the lines of a file as it is being read, set the <tt class="REPLACEABLE">ECHO</tt> variable to
       <tt class="REPLACEABLE">all</tt> by typing <tt class="REPLACEABLE">\set ECHO all</tt>.
       </p><div class="NAVHEADER"><a name="INSERTINGAFILEINTOTHECURRENTBUFFER"></a><p class="calibre9"><b class="calibre10">Example 6-1. Inserting a file into the current buffer</b></p><pre class="SCREEN">testdb=# <tt class="REPLACEABLE"><b class="calibre10">\set ECHO all</b></tt>
testdb=# <tt class="REPLACEABLE"><b class="calibre10">\i /usr/local/pgsql/query</b></tt>
SELECT * FROM employees WHERE firstname='Andrew';
 firstname | lastname | id
-----------+----------+-----
 Andrew    | Brookins | 100
(1 row)</pre></div><p class="calibre9">If you find yourself doing this often for the sole purpose of using your favorite editor, using the <tt class="REPLACEABLE">\edit</tt> command would probably be more convenient.</p></div><div class="NAVHEADER"><h2 class="SECT"><a name="AEN12846" class="calibre8">The Readline and History Libraries</a></h2><p class="calibre9">The <span><i class="EMPHASIS">psql</i></span> client supports some of the same command-tracking features that the bash shell
         supports; namely, reverse-i-search, tab completion, and command history (command history is stored in
         <span><i class="EMPHASIS">/home/<tt class="REPLACEABLE"/></i><i class="EMPHASIS">[username]</i>/.psql_â€‰history</span>).  These features are all available because
         <span><i class="EMPHASIS">psql</i></span> support the readline library, which provide these functions to bash.</p><p class="calibre9">If the configure script finds the readline library, reverse-i-search, tab completion and command history should be automatically
         installed when you compile PostgreSQL. If <span><i class="EMPHASIS">psql</i></span> does not support tab-completion, history, or
         reverse-i-search (history search), it may be because you either have the library files and/or header files installed
         into a non-standard directory.  If this is the case, and you wish to reconfigure <span><i class="EMPHASIS">psql</i></span> to use the readline and history
         features, your first task is to locate the library header files. (The filenames are: <span><i class="EMPHASIS">libreadline.a</i></span>,
         <span><i class="EMPHASIS">readline.h</i></span>, and <span><i class="EMPHASIS">history.h</i></span>).</p><p class="calibre9">Once you know where the library and header files are stored on your filesystem, tell the PostgreSQL
         <span><i class="EMPHASIS">configure</i></span> script where they are by using the following flags: 
         <span><i class="EMPHASIS">--with-includes=<tt class="REPLACEABLE"/></i><i class="EMPHASIS">[.h file locations]</i></span>, and 
         <span><i class="EMPHASIS">--with-libs=[<tt class="REPLACEABLE"/></i><i class="EMPHASIS">lib file location</i>]</span>.
         After reconfiguration, remake the <span><i class="EMPHASIS">psql</i></span> binary, and the features should become available.
         See <a href="x486.htm#SECTCONFIGURINGSOURCETREE">the Section called <i class="EMPHASIS">Step 3: Configuring the Source Tree</i> in Chapter 2</a>" in <a href="c360.htm">Chapter 2</a> for more on the configuration 
         process of PostgreSQL.</p></div><div class="NAVHEADER"><h2 class="SECT"><a name="AEN12868" class="calibre8">Variable Substitution</a></h2><p class="calibre9">The <span><i class="EMPHASIS">psql</i></span> client allows you to modify and create variables using the
          <tt class="REPLACEABLE">\set</tt> slash command, and delete them with the <tt class="REPLACEABLE">\unset</tt>
          slash command. Variables within <span><i class="EMPHASIS">psql</i></span> work much
          the same way as variables within UNIX and Linux shell programs, such as bash.
          Though the overall implementation of variables within <span><i class="EMPHASIS">psql</i></span> is fairly
          simple, they are still useful, as you may easily insert or substitute the values of variables into slash commands and
          SQL commands.</p><div class="NAVHEADER"><blockquote class="NOTE"><p class="calibre9"><b class="calibre10">Note: </b>When setting and using variables, be aware that <span><i class="EMPHASIS">psql</i></span> uses a set of pre-defined internal
            variables. Setting these to non-intended values may cause unpredictable and undesirable effects within the program.
            For a list of these variables and their uses, see <a href="a29597.htm">Appendix D</a>.</p></blockquote></div><p class="calibre9">To set a variable, use the <tt class="REPLACEABLE">\set</tt> command, giving the command the name and the value
          of the variable you wish to set, in sequence, separated by space(s). This will either modify a previously existing variable or
          create a new variable if there is not one matching the variable name you supplied).  As <a href="c12119.htm#EXAMPLESETTINGAVARIABLE">Example 6-2</a> shows,
          the variable name can be any length, and you can use any combination of letters, underscores, or numbers, and the value of the variable
          may be set to a string of any length.</p><div class="NAVHEADER"><a name="EXAMPLESETTINGAVARIABLE"></a><p class="calibre9"><b class="calibre10">Example 6-2. Setting a variable</b></p><pre class="SCREEN">testdb=# <tt class="REPLACEABLE"><b class="calibre10">\set myvariable 'There are many like it, but this one is mine.'</b></tt></pre></div><p class="calibre9">Now, when you type <tt class="REPLACEABLE">\set</tt> without any arguments, the variable will appear in the
          list of variables.</p><div class="NAVHEADER"><a name="THEVARIABLELIST"></a><p class="calibre9"><b class="calibre10">Example 6-3. The variable list</b></p><pre class="SCREEN">testdb=# <tt class="REPLACEABLE"><b class="calibre10">\set</b></tt>
VERSION = 'PostgreSQL 7.1.3 on i586-pc-linux-gnu, compiled by GCC 2.96'
DBNAME = 'testdb'
USER = 'postgres'
PORT = '5432'
ENCODING = 'SQL_ASCII'
PROMPT1 = '%/%R%# '
PROMPT2 = '%/%R%# '
PROMPT3 = '&gt;&gt; '
HISTSIZE = '500'
myvariable = 'There are many like it, but this one is mine.'</pre></div><p class="calibre9">          
          Once you have defined a variable, you can use what is known as <span><i class="EMPHASIS">interpolation</i></span>
          to place it within both internal slash commands and <span>SQL</span> commands.  This makes
          it possible to do things like load files into variables, and then use the loaded contents during an
          <tt class="REPLACEABLE">INSERT</tt> or <tt class="REPLACEABLE">SELECT</tt>, as well as more basic substitutions.</p><p class="calibre9">To substitute a variable value in this way,
          prefix the variable name with a colon (<tt class="REPLACEABLE">:</tt>) when you reference it from within other statements.
          For example, <a href="c12119.htm#USINGINTERPOLATIONDURINGANINSERT">Example 6-4</a> demonstrates
          how to use a created variable during an <tt class="REPLACEABLE">INSERT</tt> or <tt class="REPLACEABLE">SELECT</tt>
          statement.</p><div class="NAVHEADER"><a name="USINGINTERPOLATIONDURINGANINSERT"></a><p class="calibre9"><b class="calibre10">Example 6-4. Using interpolation during an INSERT</b></p><pre class="SCREEN">testdb=# <tt class="REPLACEABLE"><b class="calibre10">\set manager_id 150</b></tt>
testdb=# <tt class="REPLACEABLE"><b class="calibre10">INSERT INTO employees VALUES (</b></tt>
testdb(# <tt class="REPLACEABLE"><b class="calibre10">   'Kevin',</b></tt>
testdb(# <tt class="REPLACEABLE"><b class="calibre10">   'Murphy',</b></tt>
testdb(# <tt class="REPLACEABLE"><b class="calibre10">   :manager_id</b></tt>
testdb(# <tt class="REPLACEABLE"><b class="calibre10">);</b></tt>
testdb=# <tt class="REPLACEABLE"><b class="calibre10">SELECT * FROM employees WHERE id = :manager_id;</b></tt>
 firstname | lastname | id
-----------+----------+-----
 Kevin     | Murphy   | 150
(1 row)</pre></div><p class="calibre9">As mentioned, it is possible to insert files into variables and then use interpolation to
         insert their content into other commands.  To read files, use backticks (<tt class="REPLACEABLE">`</tt>)
         to set a variable to the output of the <span><i class="EMPHASIS">cat</i></span> command (the UNIX command to display the contents
         of a file). <a href="c12119.htm#READINGFROMAFILEINTOAVARIABLE">Example 6-5</a> and <a href="c12119.htm#USINGAVARIABLEINANINSERT">Example 6-6</a>
         illustrate a basic way of doing this. In these examples, the <span><i class="EMPHASIS">tabledata</i></span> file is located in
         the user's home directory (<span><i class="EMPHASIS">~/</i></span>â€‰).</p><div class="NAVHEADER"><a name="READINGFROMAFILEINTOAVARIABLE"></a><p class="calibre9"><b class="calibre10">Example 6-5. Reading from a file into a variable</b></p><pre class="SCREEN">testdb=# <tt class="REPLACEABLE"><b class="calibre10">\set data `cat tabledata`</b></tt>
testdb=# <tt class="REPLACEABLE"><b class="calibre10">\echo :data</b></tt>
'Mike', 'Nelson', 151</pre></div><div class="NAVHEADER"><a name="USINGAVARIABLEINANINSERT"></a><p class="calibre9"><b class="calibre10">Example 6-6. Using a variable in an INSERT</b></p><pre class="SCREEN">testdb=# <tt class="REPLACEABLE"><b class="calibre10">INSERT INTO employees VALUES (:data);</b></tt></pre></div><p class="calibre9">After <a href="c12119.htm#USINGAVARIABLEINANINSERT">Example 6-6</a>, you would have a new row within the
         <tt class="REPLACEABLE">employees</tt> table with the values set in the <tt class="REPLACEABLE">data</tt> variable.</p></div><div class="NAVHEADER"><h2 class="SECT"><a name="AEN12940" class="calibre8">About the psql Prompt</a></h2><p class="calibre9">The <span><i class="EMPHASIS">psql</i></span> client supports the complete modification of its prompt.  This can be helpful for
          displaying various pieces of information in an obvious way (what could be more obvious than the prompt?).  Prompt
          information is stored in the <tt class="REPLACEABLE">PROMPT1</tt>, <tt class="REPLACEABLE">PROMPT2</tt>, and <tt class="REPLACEABLE">PROMPT3</tt>
          variables within <span><i class="EMPHASIS">psql</i></span>. The program displays each of these variables at different times.</p><p class="calibre9"><tt class="REPLACEABLE">PROMPT1</tt> contains the normal (default) prompt information while <tt class="REPLACEABLE">PROMPT2</tt>
          contains the prompt information that is displayed on a new line during a statement or query that you have not yet
          terminated (because you have not ended it with either a semicolon or issued the <tt class="REPLACEABLE">\g</tt> command)
          <tt class="REPLACEABLE">PROMPT3</tt> contains the prompt information displayed while entering data during an SQL
          <tt class="REPLACEABLE">COPY</tt> command.  To view how your prompts are currently configured, use the <tt class="REPLACEABLE">\set</tt>
          command without arguments to view a list of defined variables. Within this list you should see entries for
          <tt class="REPLACEABLE">PROMPT1</tt>, <tt class="REPLACEABLE">PROMPT2</tt>, and <tt class="REPLACEABLE">PROMPT3</tt>.  You'll see single quotes
          surrounding user-configurable display strings, which define how the <span><i class="EMPHASIS">psql</i></span> prompt appears. The
          <tt class="REPLACEABLE">%</tt>-prefixed characters (e.g., <tt class="REPLACEABLE">%m</tt>) are variables; all other characters are printed
          directly as shown.</p><p class="calibre9"><a href="c12119.htm#DEFAULTPROMPTSETTINGS">Table 6-1</a> displays the default prompt settings for each of the prompt variables.
          Notice that the display in the second row, <tt class="REPLACEABLE">PROMPT2</tt>, assumes that a query has been
          continued to the next line with an open parenthesis, resulting in the <tt class="REPLACEABLE">(</tt> symbol
          preceding the hash mark (<tt class="REPLACEABLE">#</tt>).</p><div class="NAVHEADER"><a name="DEFAULTPROMPTSETTINGS"></a><p class="calibre9"><b class="calibre10">Table 6-1. Default PROMPT settings</b></p><table border="1" class="calibre"><thead class="calibre11"><tr class="calibre12"><th valign="TOP" class="calibre25">Prompt</th><th valign="TOP" class="calibre25">Variable</th><th valign="TOP" class="calibre25">Display</th></tr></thead><tbody class="calibre14"><tr class="calibre12"><td valign="TOP" class="calibre15"><tt class="REPLACEABLE">PROMPT1</tt></td><td valign="TOP" class="calibre15"><tt class="REPLACEABLE">'%/%R%#' </tt></td><td valign="TOP" class="calibre15"><tt class="REPLACEABLE">testdb=# </tt></td></tr><tr class="calibre12"><td valign="TOP" class="calibre15"><tt class="REPLACEABLE">PROMPT2</tt></td><td valign="TOP" class="calibre15"><tt class="REPLACEABLE">'%/%R%# '</tt></td><td valign="TOP" class="calibre15"><tt class="REPLACEABLE">testdb(#</tt></td></tr><tr class="calibre12"><td valign="TOP" class="calibre15"><tt class="REPLACEABLE">PROMPT3</tt></td><td valign="TOP" class="calibre15"><tt class="REPLACEABLE">'&gt;&gt; '</tt></td><td valign="TOP" class="calibre15"><tt class="REPLACEABLE">&gt;&gt;</tt></td></tr></tbody></table></div><div class="NAVHEADER"><h3 class="AUTHOR"><a name="AEN12996" class="calibre8">Modifying the prompt</a></h3><p class="calibre9">To modify the <span><i class="EMPHASIS">psql</i></span> prompt, use <tt class="REPLACEABLE">\set</tt> to change the strings held
            by the three prompt variables.  When defining your prompt strings, use <tt class="REPLACEABLE">%</tt>
            to substitute a variable into the string (<a href="c12119.htm#SETTINGTHEPROMPT">Example 6-7</a> provides a list of defined
            substitutions you can make with the <tt class="REPLACEABLE">%</tt> sign).  You may use <tt class="REPLACEABLE">\n</tt>
            to display a new line character.  All other characters will be displayed normally.
            <a href="c12119.htm#SETTINGTHEPROMPT">Example 6-7</a> modifies the <tt class="REPLACEABLE">PROMPT1</tt> variable to contain an
            additional <tt class="REPLACEABLE">psql:</tt> prefix, trivially modifying the standard prompt display.</p><div class="NAVHEADER"><a name="SETTINGTHEPROMPT"></a><p class="calibre9"><b class="calibre10">Example 6-7. Setting the prompt variables</b></p><pre class="SCREEN">testdb=# <tt class="REPLACEABLE"><b class="calibre10">\set PROMPT1 'psql:%/%R%# '</b></tt>
psql:testdb=#</pre></div><div class="NAVHEADER"><a name="PROMPTSUBSTITUTIONSTRINGS"></a><p class="calibre9"><b class="calibre10">Table 6-2. Prompt substitution characters</b></p><table border="1" width="100%" class="calibre"><thead class="calibre11"><tr class="calibre12"><th width="3" valign="TOP" class="calibre13"><p class="calibre9">Substitution character</p></th><th width="25" valign="TOP" class="calibre13"><p class="calibre9">Description</p></th></tr></thead><tbody class="calibre14"><tr class="calibre12"><td width="3" valign="TOP" class="calibre15"><p class="calibre9"><tt class="REPLACEABLE">%~</tt></p></td><td width="25" valign="TOP" class="calibre15"><p class="calibre9">This inserts the name of the database you are currently working in. If you are currently working in the default database, a tilde (<tt class="REPLACEABLE">~</tt>) will be displayed.</p></td></tr><tr class="calibre12"><td width="3" valign="TOP" class="calibre15"><p class="calibre9"><tt class="REPLACEABLE">%#</tt></p></td><td width="25" valign="TOP" class="calibre15"><p class="calibre9">This will insert a number sign (<tt class="REPLACEABLE">#</tt>) if the current user is defined as a superuser within the database.  Otherwise, it will insert a greater-than sign (<tt class="REPLACEABLE">&gt;</tt>).</p></td></tr><tr class="calibre12"><td width="3" valign="TOP" class="calibre15"><p class="calibre9"><tt class="REPLACEABLE">%&gt;</tt></p></td><td width="25" valign="TOP" class="calibre15"><p class="calibre9">This will insert the port number the database server is currently accepting connections at.</p></td></tr><tr class="calibre12"><td width="3" valign="TOP" class="calibre15"><p class="calibre9"><tt class="REPLACEABLE">%/</tt></p></td><td width="25" valign="TOP" class="calibre15"><p class="calibre9">This will insert the name of the database you are currently working in.</p></td></tr><tr class="calibre12"><td width="3" valign="TOP" class="calibre15"><p class="calibre9"><tt class="REPLACEABLE">%m</tt></p></td><td width="25" valign="TOP" class="calibre15"><p class="calibre9">This will insert the hostname of the server the database is currently running on, truncated
                  down to the string before the first dot (i.e., "yourserver.com" would become "yourserver" when inserted).</p></td></tr><tr class="calibre12"><td width="3" valign="TOP" class="calibre15"><p class="calibre9"><tt class="REPLACEABLE">%M</tt></p></td><td width="25" valign="TOP" class="calibre15"><p class="calibre9">This will insert the full hostname of the server the database is currently running on.  If
                  no hostname information is available, the string "localhost" will be inserted.</p></td></tr><tr class="calibre12"><td width="3" valign="TOP" class="calibre15"><p class="calibre9"><tt class="REPLACEABLE">%n</tt></p></td><td width="25" valign="TOP" class="calibre15"><p class="calibre9">This will insert the database username you are currently connected as.</p></td></tr><tr class="calibre12"><td width="3" valign="TOP" class="calibre15"><p class="calibre9"><tt class="REPLACEABLE">%R</tt></p></td><td width="25" valign="TOP" class="calibre15"><p class="calibre9">When used with <tt class="REPLACEABLE">PROMPT1</tt>, this will insert an equal sign
                 (<tt class="REPLACEABLE">=</tt>) during normal operation; in single-line mode, it will insert a caret
                 (<tt class="REPLACEABLE">^</tt>); and if your session ever becomes disconnected from the backend process, an
                 exclamation point (<tt class="REPLACEABLE">!</tt>) is inserted.
                 </p><p class="calibre9">When used with <tt class="REPLACEABLE">PROMPT2</tt>, <tt class="REPLACEABLE">%R</tt> inserts a dash
                 (<tt class="REPLACEABLE">-</tt>) instead of an equal sign during normal operation, and whatever you entered as
                 the end-symbol if you started a new line during an unterminated statement (for example, if you leave a parenthesis
                 open while entering a multiline query, this variable will display a parenthesis in the prompt).
                 </p><p class="calibre9">Nothing is inserted if this is used with the <tt class="REPLACEABLE">PROMPT3</tt> variable.</p></td></tr><tr class="calibre12"><td width="3" valign="TOP" class="calibre15"><p class="calibre9"><tt class="REPLACEABLE">%</tt><tt class="REPLACEABLE"><i class="EMPHASIS">number</i></tt></p></td><td width="25" valign="TOP" class="calibre15"><p class="calibre9">You may enter specific characters in prompt variables using decimal, octal, or hexadecimal numbers.
                  To specify an octal <tt class="REPLACEABLE"><i class="EMPHASIS">number</i></tt>, prefix it with a 0; to specify the <tt class="REPLACEABLE"><i class="EMPHASIS">number</i></tt> as hexadecimal, prefix it with a 0x;
                  otherwise <tt class="REPLACEABLE"><i class="EMPHASIS">number</i></tt> is interpreted as a decimal number.</p></td></tr><tr class="calibre12"><td width="3" valign="TOP" class="calibre15"><p class="calibre9"><tt class="REPLACEABLE">%:</tt><tt class="REPLACEABLE"><i class="EMPHASIS">variable</i></tt></p></td><td width="25" valign="TOP" class="calibre15"><p class="calibre9">To insert the contents of a <span><i class="EMPHASIS">psql</i></span> <tt class="REPLACEABLE"><i class="EMPHASIS">variable</i></tt>, use the colon (<tt class="REPLACEABLE">:</tt>) and the variable's identifier. </p></td></tr><tr class="calibre12"><td width="3" valign="TOP" class="calibre15"><p class="calibre9"><tt class="REPLACEABLE">%`</tt><tt class="REPLACEABLE"><i class="EMPHASIS">command</i></tt>`</p></td><td width="25" valign="TOP" class="calibre15"><p class="calibre9">Inserts the output of whatever command is specified with the <tt class="REPLACEABLE"><i class="EMPHASIS">command</i></tt> parameter.</p></td></tr></tbody></table></div></div><div class="NAVHEADER"><h3 class="AUTHOR"><a name="AEN13113" class="calibre8">Prompt examples</a></h3><p class="calibre9">Using the <tt class="REPLACEABLE">\set</tt> command, you may combine the different substitution characters
            to form whatever prompt you would like. <a href="c12119.htm#CUSTOMIZEPROMPT1">Example 6-8</a> and <a href="c12119.htm#CUSTOMIZEPROMPT2">Example 6-9</a>
            demonstrate setting the <tt class="REPLACEABLE">PROMPT1</tt> variable to an arbitrary new sequence.</p><div class="NAVHEADER"><a name="CUSTOMIZEPROMPT1"></a><p class="calibre9"><b class="calibre10">Example 6-8. Customizing the prompt with database host, port, and username</b></p><pre class="SCREEN">testdb=# <tt class="REPLACEABLE"><b class="calibre10">\set PROMPT1 '[%m:%&gt;:%n](%/)= '</b></tt>
[host:5432:postgres](testdb)=</pre></div><div class="NAVHEADER"><a name="CUSTOMIZEPROMPT2"></a><p class="calibre9"><b class="calibre10">Example 6-9. Customizing the prompt with the date, database name, and username</b></p><pre class="SCREEN">testdb=# <tt class="REPLACEABLE"><b class="calibre10">\set PROMPT1 '\n[%`date`]\n%n:%/%=# '</b></tt>

[Fri Aug  3 21:44:30 PDT 2001]
postgres:testdb=#</pre></div></div></div></div></div><div class="NAVHEADER"><hr width="100%" class="calibre6"/><table summary="Footer navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><td width="33%" valign="top" class="calibre3"><a href="x8973.htm" accesskey="P">Prev</a></td><td width="34%" valign="top" class="calibre4"><a href="book1.htm" accesskey="H">Home</a></td><td width="33%" valign="top" class="calibre5"><a href="x13128.htm" accesskey="N">Next</a></td></tr><tr class="calibre1"><td width="33%" valign="top" class="calibre3">Functions</td><td width="34%" valign="top" class="calibre4"><a href="p1162.htm" accesskey="U">Up</a></td><td width="33%" valign="top" class="calibre5">PgAccess: A Graphical Client</td></tr></table></div></div>

{% endraw %}

