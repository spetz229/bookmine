---
layout: page
title: "Unknown"
prev: x17149.htm
next: x17860.htm
book_path: books/o-reilly-practical-postgresql_oeb/
---
{% include JB/setup %}
{% raw %}
<div>
<div class="NAVHEADER"><table summary="Header navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><th colspan="3" class="calibre2">Practical PostgreSQL</th></tr><tr class="calibre1"><td width="10%" valign="bottom" class="calibre3"><a href="x17149.htm" accesskey="P">Prev</a></td><td width="80%" valign="bottom" class="calibre4">Chapter 9. Database Management</td><td width="10%" valign="bottom" class="calibre5"><a href="x17860.htm" accesskey="N">Next</a></td></tr></table><hr width="100%" class="calibre6"/></div><div class="NAVHEADER"><h1 class="calibre7"><a name="MAINTAININGADATABASE" class="calibre8">Maintaining a Database</a></h1><p class="calibre9">Database maintenance is a broad subject. This section covers the physical maintenance of the system (pertaining to its
    disk usage), analytical maintenance (to increase performance), and database object documentation (to add to the
    maintainability and clarity of the schema).</p><p class="calibre9">The primary tool for physical and analytical database maintenance in PostgreSQL is the
    <tt class="REPLACEABLE">VACUUM</tt> SQL command, and its accompanying command-line script, <span><i class="EMPHASIS">vacuumdb</i></span>.
    They each perform the same two general functions:
    
    </p><p class="calibre9"></p><ul class="calibre21"><li class="calibre22"><p class="calibre9">Remove any leftover data from rollbacks and other processes that can leave temporary data</p></li><li class="calibre22"><p class="calibre9">Analyze activity in the database to assist PostgreSQL in designing efficient queries</p></li></ul>
<p class="calibre9">It is good practice to perform a <tt class="REPLACEABLE">VACUUM</tt> nightly on a production database. While it can
    be run at the same time data is accessed, doing so will decrease the response time of the server. As such, it is generally  preferable to
    schedule it at a time when you do not expect a great deal of database activity.</p><p class="calibre9">Any time an exceptionally large number of records are added or deleted, it is prudent to perform a
    <tt class="REPLACEABLE">VACUUM</tt> to analyze the database, which automatically updates the PostgreSQL query optimizer
    of major changes to the tables. By doing this you allow PostgreSQL to have a more up-to-date profile of the data
    within the database, providing a better set of information with which to plan the most efficient queries. All of these
    actions should result in a faster, more efficient response from the database.</p><div class="NAVHEADER"><p class="calibre9"></p><table class="calibre" border="1" width="100%"><tr class="calibre1"><td class="calibre23"><b class="calibre10">Warning</b></td></tr><tr class="calibre1"><td class="calibre15"><p class="calibre9">The <tt class="REPLACEABLE">VACUUM</tt> command locks tables in <span><i class="EMPHASIS">access exclusive mode</i></span>. This
      means that any query involving a table being vacuumed will pause and wait until the vacuum of the affected table is
      complete before continuing.</p></td></tr></table></div><div class="NAVHEADER"><h2 class="SECT"><a name="AEN17568" class="calibre8">Using VACUUM</a></h2><p class="calibre9">The syntax for the <tt class="REPLACEABLE">VACUUM</tt> SQL command is as follows:</p><pre class="SCREEN">  VACUUM [ VERBOSE ] [ ANALYZE ] [ <tt class="REPLACEABLE"><i class="EMPHASIS">table</i></tt> ]
  VACUUM [ VERBOSE ] ANALYZE [ <tt class="REPLACEABLE"><i class="EMPHASIS">table</i></tt> [ ( <tt class="REPLACEABLE"><i class="EMPHASIS">column</i></tt> [, ...] ) ] ]</pre><p class="calibre9">Used without any of the optional keywords or identifiers, a <tt class="REPLACEABLE">VACUUM</tt> statement will
      clean up each table in the presently connected database, one at a time, deleting temporary data and recovering disk space.
      This use of <tt class="REPLACEABLE">VACUUM</tt> is primarily to maximize free disk space.</p><p class="calibre9">An optional <tt class="REPLACEABLE"><i class="EMPHASIS">table</i></tt> identifier may be specified if you want the
      <tt class="REPLACEABLE">VACUUM</tt> to clean a single table in the connected database, rather than all tables.
      It will also update statistics in the system catalogs pertaining to the number of records and amount of data stored in each table.
      <a href="x17549.htm#USINGVACUUMONATABLE">Example 9-14</a> shows the use of a <tt class="REPLACEABLE">VACUUM</tt> statement in the
      <tt class="REPLACEABLE">booktown</tt> database, on the <tt class="REPLACEABLE">books</tt> table.</p><div class="NAVHEADER"><a name="USINGVACUUMONATABLE"></a><p class="calibre9"><b class="calibre10">Example 9-14. Using VACUUM on a table</b></p><pre class="SCREEN">booktown=# <tt class="REPLACEABLE"><b class="calibre10">VACUUM books;</b></tt>
VACUUM</pre></div><p class="calibre9">The <tt class="REPLACEABLE">VACUUM</tt> message returned in <a href="x17549.htm#USINGVACUUMONATABLE">Example 9-14</a> indicates that
      the process finished successfully. If a specified table cannot be found, you will instead receive the following
      notice:</p><pre class="SCREEN">NOTICE:  Vacuum: table not found</pre><p class="calibre9">With the use of the optional <tt class="REPLACEABLE">ANALYZE</tt> keyword, PostgreSQL examines the allocation of
      data in each column for each table (or the specified table, if provided), and uses the information to prepare the
      query optimizer for better planning. With the use of the <tt class="REPLACEABLE">ANALYZE</tt> keyword, you also have the
      option to analyze only specified columns. <a href="x17549.htm#USINGVACUUMANALYZEONADATABASE">Example 9-15</a> shows the use of the
      <tt class="REPLACEABLE">VACUUM ANALYZE</tt> command on the entire <tt class="REPLACEABLE">booktown</tt> database.</p><div class="NAVHEADER"><a name="USINGVACUUMANALYZEONADATABASE"></a><p class="calibre9"><b class="calibre10">Example 9-15. Using VACUUM ANALYZE on a database</b></p><pre class="SCREEN">booktown=# <tt class="REPLACEABLE"><b class="calibre10">VACUUM ANALYZE;</b></tt>
VACUUM</pre></div><p class="calibre9">Finally, the optional <tt class="REPLACEABLE">VERBOSE</tt> keyword may be applied if you are interested in seeing
      a detailed internal report of the findings of the <tt class="REPLACEABLE">VACUUM</tt> statement. This is most likely
      not of interest to anyone not actively developing the PostgreSQL engine, or related software.</p></div><div class="NAVHEADER"><h2 class="SECT"><a name="AEN17607" class="calibre8">Using vacuumdb</a></h2><p class="calibre9">As with many of the database management SQL commands, the <tt class="REPLACEABLE">VACUUM</tt> command has a
      command-line executable wrapper called <span><i class="EMPHASIS">vacuumdb</i></span>. The <span><i class="EMPHASIS">vacuumdb</i></span> script provides one
      significant added function to the normal use of the <tt class="REPLACEABLE">VACUUM</tt> SQL statement, in that you can
      instruct it to perform a <tt class="REPLACEABLE">VACUUM</tt> on each PostgreSQL database on your system.</p><p class="calibre9">Additionally, since it accepts connection parameters on how to connect to PostgreSQL, you may use
      <span><i class="EMPHASIS">vacuumdb</i></span> remotely (i.e., without having to first connect to the machine via a terminal client, and
      then executing <span><i class="EMPHASIS">vacuumdb</i></span> or <span><i class="EMPHASIS">psql</i></span> from the remote machine). This is provided that
      your authentication scheme in PostgreSQL's <span><i class="EMPHASIS">pg_hba.conf</i></span> file is configured for outside access (see
      <a href="c15679.htm">Chapter 8</a> for more information on this).</p><p class="calibre9">Here is the syntax for <span><i class="EMPHASIS">vacuumdb</i></span>:</p><pre class="SCREEN">  vacuumdb [ <tt class="REPLACEABLE"><i class="EMPHASIS">options</i></tt> ] [ <tt class="REPLACEABLE"><i class="EMPHASIS">dbname</i></tt> ]</pre><p class="calibre9">Like the <span><i class="EMPHASIS">createdb</i></span> and <span><i class="EMPHASIS">dropdb</i></span> scripts, <span><i class="EMPHASIS">vacuumdb</i></span> accepts
      both single-dashed and GNU-style double-dashed arguments from the command line. The only required option is the
      <tt class="REPLACEABLE"><i class="EMPHASIS">dbname</i></tt> (unless you specify <span><i class="EMPHASIS">- -all</i></span>), which describes the database to be cleaned and
      analyzed. The <tt class="REPLACEABLE"><i class="EMPHASIS">options</i></tt> parameters describe which mode the <tt class="REPLACEABLE">VACUUM</tt>
      command should be invoked in. The following are the available options for the <span><i class="EMPHASIS">vacuumdb</i></span> script:
      
      </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER">-h <tt class="REPLACEABLE"><i class="EMPHASIS">HOSTNAME</i></tt> , - -host=<tt class="REPLACEABLE"><i class="EMPHASIS">HOSTNAME</i></tt></dt><dd class="calibre16"><p class="calibre9">            Specifies that you are connected to <tt class="REPLACEABLE"><i class="EMPHASIS">HOSTNAME</i></tt>, rather than the localhost. Use this option when vacuuming a remote database.
          </p></dd><dt class="NAVHEADER">-p <tt class="REPLACEABLE"><i class="EMPHASIS">PORT</i></tt> , - -port=<tt class="REPLACEABLE"><i class="EMPHASIS">PORT</i></tt></dt><dd class="calibre16"><p class="calibre9">            Specifies that the database connection is made on port <tt class="REPLACEABLE"><i class="EMPHASIS">PORT</i></tt>, rather than the
            default port (usually 5432, though it may have been configured differently when PostgreSQL was
            compiled, by the <span><i class="EMPHASIS">- -with-pgport</i></span> flag).
          </p></dd><dt class="NAVHEADER">-U <tt class="REPLACEABLE"><i class="EMPHASIS">USERNAME</i></tt> , - -username=<tt class="REPLACEABLE"><i class="EMPHASIS">USERNAME</i></tt></dt><dd class="calibre16"><p class="calibre9">            Specifies that the username <tt class="REPLACEABLE"><i class="EMPHASIS">USERNAME</i></tt> is the user who connects to PostgreSQL
            (rather than the name of the system user executing <span><i class="EMPHASIS">vacuumdb</i></span>).
          </p></dd><dt class="NAVHEADER">-W, - -password</dt><dd class="calibre16"><p class="calibre9">            Accepts no parameters, and causes a password prompt, which occurs automatically if the
            <span><i class="EMPHASIS">pg_hba.conf</i></span> file on the target server is configured not to <span><i class="EMPHASIS">trust</i></span> the requesting host.
          </p></dd><dt class="NAVHEADER">-d <tt class="REPLACEABLE"><i class="EMPHASIS">DBNAME</i></tt> , - -dbname=<tt class="REPLACEABLE"><i class="EMPHASIS">DBNAME</i></tt></dt><dd class="calibre16"><p class="calibre9">Explicitly specifies the name of the database to perform the <tt class="REPLACEABLE">VACUUM</tt>
            statement on. This option is mutually exclusive to the <span><i class="EMPHASIS">- -all</i></span> option.</p></dd><dt class="NAVHEADER">-a, - -all</dt><dd class="calibre16"><p class="calibre9">Applies the <tt class="REPLACEABLE">VACUUM</tt> command, with specified options, to all databases
            in the system catalog.</p></dd><dt class="NAVHEADER">-z, - -analyze</dt><dd class="calibre16"><p class="calibre9">Equivalent to the <tt class="REPLACEABLE">ANALYZE</tt> keyword for the
            <tt class="REPLACEABLE">VACUUM</tt> SQL command. Updates stored statistics about the data allocation between
            columns, which are used by the query optimizer to help guide internal query planning.</p></dd><dt class="NAVHEADER">-t ' <tt class="REPLACEABLE"><i class="EMPHASIS">TABLE</i></tt> [ ( <tt class="REPLACEABLE"><i class="EMPHASIS">column</i></tt> [, ...] ) ]', - -table=' <tt class="REPLACEABLE"><i class="EMPHASIS">TABLE</i></tt> [ ( <tt class="REPLACEABLE"><i class="EMPHASIS">column</i></tt> [, ...] ) ]'</dt><dd class="calibre16"><p class="calibre9">Targets a specific table <tt class="REPLACEABLE"><i class="EMPHASIS">TABLE</i></tt> (or specific <tt class="REPLACEABLE"><i class="EMPHASIS">columns</i></tt> within that table) to be affected. The
            <span><i class="EMPHASIS">- -analyze</i></span> option is required to describe specific columns.</p></dd><dt class="NAVHEADER">-v, - -verbose</dt><dd class="calibre16"><p class="calibre9">Equivalent to the <tt class="REPLACEABLE">VERBOSE</tt> keyword for the <tt class="REPLACEABLE">VACUUM</tt>
            SQL command. Causes a detailed internal report of the processing performed to be displayed.</p></dd><dt class="NAVHEADER">-e, - -echo</dt><dd class="calibre16"><p class="calibre9">            Accepts no parameters, and causes the query sent to PostgreSQL to be displayed to the screen as it is
            executed by <span><i class="EMPHASIS">vacuumdb</i></span>.
          </p></dd><dt class="NAVHEADER">-q, - -quiet</dt><dd class="calibre16"><p class="calibre9">            Accepts no parameters, and causes no output to be sent to <span><i class="EMPHASIS">stdout</i></span> (though any errors will
            still be sent to <span><i class="EMPHASIS">stderr</i></span>).
          </p></dd></dl></div>
<p class="calibre9"><a href="x17549.htm#USINGVACUUMDBONALLDATABASES">Example 9-16</a> demonstrates the use of the <span><i class="EMPHASIS">vacuumdb</i></span> script from
      the Book Town server. The <span><i class="EMPHASIS">-U</i></span> flag specifies that the connection should use the
      <tt class="REPLACEABLE">manager</tt> user to connect, while the <span><i class="EMPHASIS">- -all</i></span> flag causes all databases in the system
      catalog to be affected in sequence.</p><div class="NAVHEADER"><a name="USINGVACUUMDBONALLDATABASES"></a><p class="calibre9"><b class="calibre10">Example 9-16. Using vacuumdb on all databases</b></p><pre class="SCREEN">[jworsley@booktown ~]$ <tt class="REPLACEABLE"><b class="calibre10">vacuumdb -U manager - -all</b></tt>
Vacuuming postgres
VACUUM
Vacuuming booktown
VACUUM
Vacuuming template1
VACUUM</pre></div><p class="calibre9">As mentioned, because of the connectivity options available to the <span><i class="EMPHASIS">vacuumdb</i></span> script, it can be
      easily executed from a remote server. <a href="x17549.htm#USINGVACUUMDBONAREMOTEDATABASE">Example 9-17</a> shows a similar process to the
      command used in <a href="x17549.htm#USINGVACUUMDBONALLDATABASES">Example 9-16</a>, but with the addition of the <span><i class="EMPHASIS">-h</i></span> flag to
      specify a remote server named <span><i class="EMPHASIS">booktown.commandprompt.com</i></span>. <a href="x17549.htm#USINGVACUUMDBONAREMOTEDATABASE">Example 9-17</a> also targets the <tt class="REPLACEABLE">booktown</tt> database specifically, rather than
      all databases.</p><div class="NAVHEADER"><a name="USINGVACUUMDBONAREMOTEDATABASE"></a><p class="calibre9"><b class="calibre10">Example 9-17. Using vacuumdb on a remote database</b></p><pre class="SCREEN">[jworsley@cmd ~]$ <tt class="REPLACEABLE"><b class="calibre10">vacuumdb -h booktown.commandprompt.com -U manager booktown</b></tt>
VACUUM</pre></div></div><div class="NAVHEADER"><h2 class="SECT"><a name="DOCUMENTINGADATABASE" class="calibre8">Documenting a Database</a></h2><div class="NAVHEADER"><h3 class="AUTHOR"><a name="AEN17748" class="calibre8">Using COMMENT</a></h3><p class="calibre9">PostgreSQL offers a non-standard SQL command called <tt class="REPLACEABLE">COMMENT</tt>, which allows for
        documentation of any database object. By using <tt class="REPLACEABLE">COMMENT</tt> on a table, function, operator, or
        other database object, you can provide description that is stored in the <tt class="REPLACEABLE">pg_description</tt> system
        table. Descriptions can be easily retrieved through a set of extended <span><i class="EMPHASIS">psql</i></span> slash commands.</p><p class="calibre9">Most standard objects in the database have a default description, which can be perused (along with any user-added
        descriptions) with the <tt class="REPLACEABLE">\dd</tt> slash command within <span><i class="EMPHASIS">psql</i></span>.</p><p class="calibre9">Here is the syntax for <tt class="REPLACEABLE">COMMENT</tt>:</p><pre class="SCREEN">  COMMENT ON [ [ DATABASE | INDEX | RULE | SEQUENCE | TABLE | TYPE | VIEW ]
    { <tt class="REPLACEABLE"><i class="EMPHASIS">object_name</i></tt> |
      COLUMN <tt class="REPLACEABLE"><i class="EMPHASIS">table_name.column_name</i></tt> |
      AGGREGATE <tt class="REPLACEABLE"><i class="EMPHASIS">aggregate_name aggregate_type</i></tt> |
      FUNCTION <tt class="REPLACEABLE"><i class="EMPHASIS">function_name</i></tt> ( <tt class="REPLACEABLE"><i class="EMPHASIS">argument_type</i></tt> [, ...] ) |
      OPERATOR <tt class="REPLACEABLE"><i class="EMPHASIS">operator_name</i></tt> ( <tt class="REPLACEABLE"><i class="EMPHASIS">leftoperand_type</i></tt> , <tt class="REPLACEABLE"><i class="EMPHASIS">rightoperand_type</i></tt> ) |
      TRIGGER <tt class="REPLACEABLE"><i class="EMPHASIS">trigger_name</i></tt> ON <tt class="REPLACEABLE"><i class="EMPHASIS">table_name</i></tt> }
  ] IS ' <tt class="REPLACEABLE"><i class="EMPHASIS">description</i></tt> '</pre><p class="calibre9">In this syntax, <tt class="REPLACEABLE"><i class="EMPHASIS">object_name</i></tt> is the name of the database object that you wish to add a comment of
        <tt class="REPLACEABLE"><i class="EMPHASIS">description</i></tt> to. The keywords for the major database objects are optional, but if you intend to place a
        comment on a column, function, aggregate function, operator, or trigger, you must specify the preceding keyword so that
        PostgreSQL knows what kind of syntax to expect, and where to look for the object name specified.</p><div class="NAVHEADER"><blockquote class="NOTE"><p class="calibre9"><b class="calibre10">Note: </b>Note that any comment added to a database is tied to both the database
          in which it is added, and the <span><i class="EMPHASIS">user</i></span> who added it. You can only see those comments that you create.</p></blockquote></div><p class="calibre9">The <tt class="REPLACEABLE"><i class="EMPHASIS">description</i></tt> string constant following the <tt class="REPLACEABLE">IS</tt> keyword is the
        literal comment to be placed in the database. <a href="x17549.htm#COMMENTINGTHEBOOKSTABLE">Example 9-18</a> demonstrates placing a simple
        description on the <tt class="REPLACEABLE">id</tt> column of the <tt class="REPLACEABLE">booktown</tt> database.
        </p><div class="NAVHEADER"><a name="COMMENTINGTHEBOOKSTABLE"></a><p class="calibre9"><b class="calibre10">Example 9-18. Commenting the books table</b></p><pre class="SCREEN">booktown=# <tt class="REPLACEABLE"><b class="calibre10">COMMENT ON COLUMN books.id</b></tt>
booktown-# <tt class="REPLACEABLE"><b class="calibre10">        IS 'An Internal Book Town Identifier';</b></tt>
COMMENT</pre></div><p class="calibre9">The <tt class="REPLACEABLE">COMMENT</tt> server message returned in <a href="x17549.htm#COMMENTINGTHEBOOKSTABLE">Example 9-18</a>
        indicates that the comment was successfully placed on the column.</p></div><div class="NAVHEADER"><h3 class="AUTHOR"><a name="AEN17792" class="calibre8">Retrieving comments</a></h3><p class="calibre9">You may retrieve comments from the database easily by using the <span><i class="EMPHASIS">psql</i></span> slash-plus commands.
        These are as follows:
          
          </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE">\d+</tt></dt><dd class="calibre16"><p class="calibre9">                Displays the same information as the standard <tt class="REPLACEABLE">\d</tt> command (displaying all tables,
                views, sequences, and indices in the currently connected database), but adds a column for the comments as well.
              </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\l+</tt></dt><dd class="calibre16"><p class="calibre9">                Displays comments on all databases.
              </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\df+ [ </tt><tt class="REPLACEABLE"><i class="EMPHASIS">pattern</i></tt> ]</dt><dd class="calibre16"><p class="calibre9">                Displays descriptions for each function in the currently connected database (as well as the language and source
                of the function). You may wish to view this slash command in expanded mode for readability by first initiating
                the <tt class="REPLACEABLE">\x</tt> slash command (see <a href="c12119.htm">Chapter 6</a> for more about this).
                You can optionally supply a regular expression <tt class="REPLACEABLE"><i class="EMPHASIS">pattern</i></tt> to compare against existing function
                names, allowing you to limit the number of functions displayed.
              </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\dt+</tt></dt><dd class="calibre16"><p class="calibre9">                Displays comments on all tables in the currently connected database.
              </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\di+</tt></dt><dd class="calibre16"><p class="calibre9">                Displays comments on all indices in the currently connected database.
              </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\ds+</tt></dt><dd class="calibre16"><p class="calibre9">                Displays comments on all sequences in the currently connected database.
              </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\dv+</tt></dt><dd class="calibre16"><p class="calibre9">                Displays comments on all views in the currently connected database.
              </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\dS+</tt></dt><dd class="calibre16"><p class="calibre9">                Displays comments on system tables. Note that comments placed on system tables are still tied to a particular database,
                even though they are accessible from all databases, and will therefore not be visible when performing a
                <tt class="REPLACEABLE">\dS+</tt> slash command from another database connection.
              </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">\dd</tt></dt><dd class="calibre16"><p class="calibre9">                Displays all descriptions for all database objects.
              </p></dd></dl></div>
<p class="calibre9"><a href="x17549.htm#RETRIEVINGACOMMENT">Example 9-19</a> demonstrates the retrieval of the comment that was placed on the
        <tt class="REPLACEABLE">books</tt> table in <a href="x17549.htm#COMMENTINGTHEBOOKSTABLE">Example 9-18</a> with the use of the
        <span><i class="EMPHASIS">psql</i></span> <tt class="REPLACEABLE">\d+</tt> command.</p><div class="NAVHEADER"><a name="RETRIEVINGACOMMENT"></a><p class="calibre9"><b class="calibre10">Example 9-19. Retrieving a comment</b></p><pre class="SCREEN">booktown=# <tt class="REPLACEABLE"><b class="calibre10">\d+ books</b></tt>
                           Table "books"
 Attribute  |  Type   | Modifier |           Description
------------+---------+----------+----------------------------------
 id         | integer | not null | An Internal Book Town Identifier
 title      | text    | not null |
 author_id  | integer |          |
 subject_id | integer |          |
Index: books_id_pkey</pre></div><p class="calibre9">The <tt class="REPLACEABLE">COMMENT</tt> SQL command provides a very simple way of internally
        documenting your objects, from tables to functions. This can be of great help when working with large or complicated
        database schema. Even the best of naming conventions do not always result in database objects whose applications are self-evident;
        this is especially the case when working with multiple developers.</p></div></div></div><div class="NAVHEADER"><hr width="100%" class="calibre6"/><table summary="Footer navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><td width="33%" valign="top" class="calibre3"><a href="x17149.htm" accesskey="P">Prev</a></td><td width="34%" valign="top" class="calibre4"><a href="book1.htm" accesskey="H">Home</a></td><td width="33%" valign="top" class="calibre5"><a href="x17860.htm" accesskey="N">Next</a></td></tr><tr class="calibre1"><td width="33%" valign="top" class="calibre3">Creating and Removing a Database</td><td width="34%" valign="top" class="calibre4"><a href="c16573.htm" accesskey="U">Up</a></td><td width="33%" valign="top" class="calibre5">Backing Up and Restoring Data</td></tr></table></div></div>

{% endraw %}

