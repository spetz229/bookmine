---
layout: page
title: "Unknown"
prev: a29525.htm
next: x337.htm
book_path: books/o-reilly-practical-postgresql_oeb/
---
{% include JB/setup %}
{% raw %}
<div>
<div class="NAVHEADER"><table summary="Header navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><th colspan="3" class="calibre2">Practical PostgreSQL</th></tr><tr class="calibre1"><td width="10%" valign="bottom" class="calibre3"><a href="x29593.htm" accesskey="P">Prev</a></td><td width="80%" valign="bottom" class="calibre4"/><td width="10%" valign="bottom" class="calibre5"> </td></tr></table><hr width="100%" class="calibre6"/></div><div class="NAVHEADER"><h1 class="calibre7"><a name="INTERNALPSQLVARIABLES" class="calibre8">Appendix D. Internal psql Variables</a></h1><p class="calibre9">The <span><i class="EMPHASIS">psql</i></span> client uses a variety of internal variables as special system variables to control aspects
  of the program. A few of the most notable variables are <tt class="REPLACEABLE">PROMPT1</tt>, <tt class="REPLACEABLE">PROMPT2</tt>, and
  <tt class="REPLACEABLE">PROMPT3</tt>, which store the prompts for the program. While running the program you can set and unset these
  variables at will using the <tt class="REPLACEABLE">\set</tt> and <tt class="REPLACEABLE">\unset</tt> commands. A list of all the special variables
  <span><i class="EMPHASIS">psql</i></span> uses follows:
  
    </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE">DBNAME</tt></dt><dd class="calibre16"><p class="calibre9">This variable holds the name of the database <span><i class="EMPHASIS">psql</i></span> is currently connected to.  This variable is set
          whenever <span><i class="EMPHASIS">psql</i></span> connects to a database, either when starting up or when instructed to connect during
          program operation.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">ECHO</tt></dt><dd class="calibre16"><p class="calibre9">This variable controls what gets displayed on the screen when executing commands from a file. To display all
          contents of a script file on the screen as it is parsed, set this variable to <span><i class="EMPHASIS">all</i></span>. To display all
          queries as they are sent to the backend process, set this variable to <span><i class="EMPHASIS">queries</i></span>.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">ECHO_HIDDEN</tt></dt><dd class="calibre16"><p class="calibre9">This variable, when set to <span><i class="EMPHASIS">true</i></span>, displays the queries used by slash commands from within
          <span><i class="EMPHASIS">psql</i></span>. Such queries will be displayed before they are sent to the backend.  To show the queries for
          slash commands without actually executing them, set <tt class="REPLACEABLE">ECHO_HIDDEN</tt> to <span><i class="EMPHASIS">noexec</i></span>.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">ENCODING</tt></dt><dd class="calibre16"><p class="calibre9">This variable holds the database's multibyte encoding scheme.  You must have compiled
          PostgreSQL to support multibyte encoding; if you did not, this variable will contain <span><i class="EMPHASIS">SQL_ASCII</i></span>.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">HISTCONTROL</tt></dt><dd class="calibre16"><p class="calibre9">This variable sets methods of controlling the <span><i class="EMPHASIS">psql</i></span> history buffer. Set this variable
          to <span><i class="EMPHASIS">ignorespace</i></span> if you wish for the history to ignore all lines entered that were preceded by
          spaces.  Set it to <span><i class="EMPHASIS">ignoredups</i></span> to ignore any entries that matched the previous line entered.  To
          ignore both lines beginning with spaces and lines that duplicate, use the value <span><i class="EMPHASIS">ignoreboth</i></span>.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">HISTSIZE</tt></dt><dd class="calibre16"><p class="calibre9">This variable sets the length of the history buffer; the default length is 500 lines.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">HOST</tt></dt><dd class="calibre16"><p class="calibre9">This variable holds the hostname of the database server you are currently connected to.  This value is set during
          startup and whenever a database connection occurs.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">IGNOREEOF</tt></dt><dd class="calibre16"><p class="calibre9">This variable controls how <span><i class="EMPHASIS">psql</i></span> handles EOF characters.
          Normally, when <span><i class="EMPHASIS">psql</i></span> receives an EOF character the application terminates.  This character is
          usually generated by pressing CTRL-D on the keyboard. Setting this option to any non-numeric value will inform
          <span><i class="EMPHASIS">psql</i></span> that you wish to have the EOF character ignored until it is repeated more than 10 times.
          You may alternatively set this variable to a specific number; if you do so, <span><i class="EMPHASIS">psql</i></span> will ignore that many
          EOF characters before terminating.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">LASTOID</tt></dt><dd class="calibre16"><p class="calibre9">This variable contains the last object identifier (OID) set from an <tt class="REPLACEABLE">INSERT</tt> command, or
          <tt class="REPLACEABLE">lo_import()</tt> function call.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">LO_TRANSACTION</tt></dt><dd class="calibre16"><p class="calibre9">This variable sets the action <span><i class="EMPHASIS">psql</i></span> will take during large object operations. It may
          be set to one of the following values:
          
          </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre17"><dt class="NAVHEADER">rollback</dt><dd class="calibre16"><p class="calibre9">                This causes any transaction you are currently working within to be rolled back if you attempt an operation on a
                large object (or a large object import).  For maximum efficiency, large object operations should usually be
                placed within their own transactions; for this reason, <tt class="REPLACEABLE">LO_TRANSACTION</tt> defaults to <span><i class="EMPHASIS">rollback</i></span>.
              </p></dd><dt class="NAVHEADER">commit</dt><dd class="calibre16"><p class="calibre9">                This causes <span><i class="EMPHASIS">psql</i></span> to commit any transaction you were in before you issued a large object operation.
              </p></dd><dt class="NAVHEADER">nothing</dt><dd class="calibre16"><p class="calibre9">                This causes <span><i class="EMPHASIS">psql</i></span> to execute the large object operation within the current transaction.
              </p></dd></dl></div>
</dd><dt class="NAVHEADER"><tt class="REPLACEABLE">ON_ERROR_STOP</tt></dt><dd class="calibre16"><p class="calibre9">This variable, when set (to any value), causes <span><i class="EMPHASIS">psql</i></span> to terminate the processing of a
          script that encounters an error (such as incorrect SQL syntax or misuse of a slash command), instead of continuing to
          process it. By default, scripts that have encountered errors continue to be processed by <span><i class="EMPHASIS">psql</i></span>.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">PORT</tt></dt><dd class="calibre16"><p class="calibre9">This variable holds the port number that you are currently connected to.  This value
          is set automatically both when you start the program and when you manually connect
          to a database from the <span><i class="EMPHASIS">psql</i></span> prompt.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">PROMPT1, PROMPT2, PROMPT3</tt></dt><dd class="calibre16"><p class="calibre9">These variables hold character strings that directly control the prompt's structure within <span><i class="EMPHASIS">psql</i></span>. 
          Setting these will change the way each prompt is displayed within the program. See <a href="c12119.htm">Chapter 6</a>, for 
          information on how to set these variables.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">SINGLELINE</tt></dt><dd class="calibre16"><p class="calibre9">This variable, when set (to any value), causes SQL input to <span><i class="EMPHASIS">psql</i></span> to be executed when a
          newline is reached, without the need for a semi-colon or <tt class="REPLACEABLE">\g</tt> terminator. This mode can also be set by the
          command line option <span><i class="EMPHASIS">-S</i></span>.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">SINGLESTEP</tt></dt><dd class="calibre16"><p class="calibre9">This variable, when set (to any value), causes each statement to require confirmation before being executed.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">USER</tt></dt><dd class="calibre16"><p class="calibre9">This variable holds the PostgreSQL username you are connected to the database with.</p></dd></dl></div>
</div><div class="NAVHEADER"><hr width="100%" class="calibre6"/><table summary="Footer navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><td width="33%" valign="top" class="calibre3"><a href="x29593.htm" accesskey="P">Prev</a></td><td width="34%" valign="top" class="calibre4"><a href="book1.htm" accesskey="H">Home</a></td><td width="33%" valign="top" class="calibre5"> </td></tr><tr class="calibre1"><td width="33%" valign="top" class="calibre3">Trailer</td><td width="34%" valign="top" class="calibre4"><a href="p29138.htm" accesskey="U">Up</a></td><td width="33%" valign="top" class="calibre5"> </td></tr></table></div></div>

{% endraw %}

