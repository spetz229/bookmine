---
layout: page
title: "Unknown"
prev: r25329.htm
next: r25486.htm
book_path: books/o-reilly-practical-postgresql_oeb/
---
{% include JB/setup %}
{% raw %}
<div>
<div class="NAVHEADER"><table summary="Header navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><th colspan="3" class="calibre2">Practical PostgreSQL</th></tr><tr class="calibre1"><td width="10%" valign="bottom" class="calibre3"><a href="r25329.htm" accesskey="P">Prev</a></td><td width="80%" valign="bottom" class="calibre4"/><td width="10%" valign="bottom" class="calibre5"><a href="r25486.htm" accesskey="N">Next</a></td></tr></table><hr width="100%" class="calibre6"/></div><h1 class="calibre7"><a name="SQL-CREATETRIGGER" class="calibre8">CREATE TRIGGER</a></h1><div class="NAVHEADER"><a name="AEN25401"></a><h2 class="SECT">Name</h2>CREATE TRIGGER -- Creates a new trigger.</div><div class="NAVHEADER"><a name="AEN25404"></a><h2 class="SECT">Synopsis</h2><pre class="SCREEN">CREATE TRIGGER <tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt> { BEFORE | AFTER } { <tt class="REPLACEABLE"><i class="EMPHASIS">event</i></tt> [ OR <tt class="REPLACEABLE"><i class="EMPHASIS">event</i></tt> ... ] }
       ON <tt class="REPLACEABLE"><i class="EMPHASIS">table</i></tt> FOR EACH { ROW | STATEMENT }
       EXECUTE PROCEDURE <tt class="REPLACEABLE"><i class="EMPHASIS">function</i></tt> ( <tt class="REPLACEABLE"><i class="EMPHASIS">arguments</i></tt> )</pre><div class="NAVHEADER"><a name="R2-SQL-CREATETRIGGER-1"></a><h3 class="AUTHOR">Parameters</h3><p class="calibre9">
</p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt></dt><dd class="calibre16"><p class="calibre9">The name of the new trigger.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">table</i></tt></dt><dd class="calibre16"><p class="calibre9">The name of the table with which the trigger will be associated.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">event</i></tt></dt><dd class="calibre16"><p class="calibre9">The event with which you wish to associate the trigger, that causes the trigger to fire. Valid events are: INSERT, DELETE, and UPDATE.  A trigger may be associated with more than one event.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">function</i></tt></dt><dd class="calibre16"><p class="calibre9">The name of the function you wish to link to the new trigger.  When the trigger fires, the function is invoked. The function must return a variable of type <tt class="REPLACEABLE"><i class="EMPHASIS">opaque</i></tt>; the <tt class="REPLACEABLE"><i class="EMPHASIS">opaque</i></tt> type is used only by internal functions and such functions cannot be invoked directly from SQL.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">arguments</i></tt></dt><dd class="calibre16"><p class="calibre9">The arguments to pass to the <tt class="REPLACEABLE"><i class="EMPHASIS">function</i></tt> when the trigger is called.</p></dd></dl></div>
</div><div class="NAVHEADER"><a name="R2-SQL-CREATETRIGGER-2"></a><h3 class="AUTHOR">Results</h3><p class="calibre9">
</p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE">CREATE</tt></dt><dd class="calibre16"><p class="calibre9">The message returned when a trigger is successfully created.</p></dd></dl></div>
</div></div><div class="NAVHEADER"><a name="R1-SQL-CREATETRIGGER-1"></a><h2 class="SECT">Description</h2><p class="calibre9">Use the <tt class="REPLACEABLE">CREATE TRIGGER</tt> command to add a trigger to a database. When a trigger is added
    to the database, it is associated with the <tt class="REPLACEABLE"><i class="EMPHASIS">table</i></tt> specified in the
    <tt class="REPLACEABLE">ON</tt> clause. When the specified <tt class="REPLACEABLE"><i class="EMPHASIS">event</i></tt> "fires" the trigger, the
    function you specified will be executed.</p><div class="NAVHEADER"><blockquote class="NOTE"><p class="calibre9"><b class="calibre10">Note: </b>A trigger may only be created on a table by the table's owner, or by a superuser.</p></blockquote></div><p class="calibre9">When you create a trigger, you must specify whether it is to be fired before or after the
    <tt class="REPLACEABLE"><i class="EMPHASIS">event</i></tt> is attempted (or completed). If the trigger is set to fire
    <tt class="REPLACEABLE">BEFORE</tt> one of those events, it may skip the operation for the current tuple, or change the
    tuple being inserted. If you have set the trigger to fire <tt class="REPLACEABLE">AFTER</tt> the event, it will be aware
    of all changes that were made during the event (including the last insertion, update, or deletion).
  
  </p></div><div class="NAVHEADER"><a name="R1-SQL-CREATETRIGGER-2"></a><h2 class="SECT">Examples</h2><p class="calibre9">The following example defines a trigger that is invoked when an existing row in the <tt class="REPLACEABLE">authors</tt> table is updated:</p><pre class="SCREEN">booktown=# <tt class="REPLACEABLE"><b class="calibre10">CREATE TRIGGER sync_authors_books</b></tt>
booktown-# <tt class="REPLACEABLE"><b class="calibre10">               BEFORE UPDATE</b></tt>
booktown-# <tt class="REPLACEABLE"><b class="calibre10">               ON authors</b></tt>
booktown-# <tt class="REPLACEABLE"><b class="calibre10">               FOR EACH ROW</b></tt>
booktown-# <tt class="REPLACEABLE"><b class="calibre10">               EXECUTE PROCEDURE sync_authors_and_books();</b></tt>
CREATE</pre><p class="calibre9">The <tt class="REPLACEABLE">sync_authors_and_books()</tt> function is a PL/pgSQL function defined to update the value of the <tt class="REPLACEABLE">author_id</tt> column in the <tt class="REPLACEABLE">books</tt> table if the <tt class="REPLACEABLE">id</tt> value in the <tt class="REPLACEABLE">authors</tt> table is updated. It therefore keeps the <tt class="REPLACEABLE">books</tt> table in sync with the <tt class="REPLACEABLE">authors</tt> table. A similar effect could be achieved with a <tt class="REPLACEABLE">FOREIGN KEY</tt> constraint (see <a href="c13329.htm">Chapter 7</a>).</p></div><div class="NAVHEADER"><hr width="100%" class="calibre6"/><table summary="Footer navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><td width="33%" valign="top" class="calibre3"><a href="r25329.htm" accesskey="P">Prev</a></td><td width="34%" valign="top" class="calibre4"><a href="book1.htm" accesskey="H">Home</a></td><td width="33%" valign="top" class="calibre5"><a href="r25486.htm" accesskey="N">Next</a></td></tr><tr class="calibre1"><td width="33%" valign="top" class="calibre3">CREATE TABLE AS</td><td width="34%" valign="top" class="calibre4"><a href="c22759.htm" accesskey="U">Up</a></td><td width="33%" valign="top" class="calibre5">CREATE TYPE</td></tr></table></div></div>

{% endraw %}

