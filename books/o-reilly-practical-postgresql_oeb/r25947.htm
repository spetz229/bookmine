---
layout: page
title: "Unknown"
prev: r25921.htm
next: r26052.htm
book_path: books/o-reilly-practical-postgresql_oeb/
---
{% include JB/setup %}
{% raw %}
<div>
<div class="NAVHEADER"><table summary="Header navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><th colspan="3" class="calibre2">Practical PostgreSQL</th></tr><tr class="calibre1"><td width="10%" valign="bottom" class="calibre3"><a href="r25921.htm" accesskey="P">Prev</a></td><td width="80%" valign="bottom" class="calibre4"/><td width="10%" valign="bottom" class="calibre5"><a href="r26052.htm" accesskey="N">Next</a></td></tr></table><hr width="100%" class="calibre6"/></div><h1 class="calibre7"><a name="SQL-DECLARE" class="calibre8">DECLARE</a></h1><div class="NAVHEADER"><a name="AEN25951"></a><h2 class="SECT">Name</h2>DECLARE -- Defines a new cursor.</div><div class="NAVHEADER"><a name="AEN25954"></a><h2 class="SECT">Synopsis</h2><pre class="SCREEN">DECLARE <tt class="REPLACEABLE"><i class="EMPHASIS">cursorname</i></tt>
    [ BINARY ] [ INSENSITIVE ] [ SCROLL ]
    CURSOR FOR <tt class="REPLACEABLE"><i class="EMPHASIS">query</i></tt>
    [ FOR { READ ONLY | UPDATE [ OF <tt class="REPLACEABLE"><i class="EMPHASIS">column</i></tt> [, ...] ] } ]</pre><div class="NAVHEADER"><a name="R2-SQL-DECLARE-1"></a><h3 class="AUTHOR">Parameters</h3><p class="calibre9"> </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">cursorname</i></tt></dt><dd class="calibre16"><p class="calibre9">The name of the new cursor.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">BINARY</tt></dt><dd class="calibre16"><p class="calibre9">The <tt class="REPLACEABLE">BINARY</tt> keyword causes the cursor to fetch data in binary format, rather than in the default text format.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">INSENSITIVE</tt></dt><dd class="calibre16"><p class="calibre9">The <tt class="REPLACEABLE">INSENSITIVE</tt> keyword specifies that all data retrieved from the cursor will be unchanged by updates from other processes (and other cursors).  This option is unneeded when using PostgreSQL, as the database already encapsulates all cursor operations within transactions. This option exists for compatibility with other database systems.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">SCROLL</tt></dt><dd class="calibre16"><p class="calibre9">The <tt class="REPLACEABLE">SCROLL</tt> keyword allows data to be retrieved in multiple rows per <tt class="REPLACEABLE">FETCH</tt> operation. However, specifying it will have no effect, as PostgreSQL already allows this functionality implicitly.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">query</i></tt></dt><dd class="calibre16"><p class="calibre9">The SQL query that will provide the new cursor with rows.  For information on how to construct this query, see <a href="r28031.htm">SELECT</a>."</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">READ ONLY</tt></dt><dd class="calibre16"><p class="calibre9">The <tt class="REPLACEABLE">READ ONLY</tt> clause indicates that the cursor will be used only to read data (read-only mode). Using this keyword has no effect, as PostgreSQL already only provides read-only access for use with cursors.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">UPDATE</tt></dt><dd class="calibre16"><p class="calibre9">The <tt class="REPLACEABLE">UPDATE</tt> clause specifies that the cursor will be used to update tables; however, updates from cursors are not supported as of PostgreSQL 7.1.x (the current version at the printing of this book).</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">column</i></tt></dt><dd class="calibre16"><p class="calibre9">The columns to be updated; however, cursor updates are not currently supported as of PostgreSQL 7.1.x (the current version at the printing of this book).</p></dd></dl></div>
</div><div class="NAVHEADER"><a name="R2-SQL-DECLARE-2"></a><h3 class="AUTHOR">Results</h3><p class="calibre9"> </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE">SELECT</tt></dt><dd class="calibre16"><p class="calibre9">The message returned when a <tt class="REPLACEABLE">SELECT</tt> statement executes successfully.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">NOTICE: Closing pre-existing portal "</tt><tt class="REPLACEABLE"><i class="EMPHASIS">cursorname</i></tt><tt class="REPLACEABLE">"</tt></dt><dd class="calibre16"><p class="calibre9">The notice returned when a cursor with the name you specified has already been declared within the current transaction block.  If this happens, the previously declared cursor is automatically discarded.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">ERROR: DECLARE CURSOR may only be used in begin/end transaction blocks</tt></dt><dd class="calibre16"><p class="calibre9">The error returned if you attempt to declare a cursor outside of a transaction block.   You must be within a transaction block to use cursors.</p></dd></dl></div>
</div></div><div class="NAVHEADER"><a name="R1-SQL-DECLARE-1"></a><h2 class="SECT">Description</h2><p class="calibre9">Use the <tt class="REPLACEABLE">DECLARE</tt> command to create a cursor within a transaction block, which can then be used to retrieve data from queries.  Returned data can be in either text or binary format.  The use of cursors is only supported within transaction blocks.  You will receive an error if you attempt to use them without starting a transaction block.</p><div class="NAVHEADER"><p class="calibre9"></p><table class="calibre" border="1" width="100%"><tr class="calibre1"><td class="calibre23"><b class="calibre10">Warning</b></td></tr><tr class="calibre1"><td class="calibre15"><p class="calibre9">Use binary cursors with caution, as not all clients support their use.</p><a name="AEN26038"></a><blockquote class="NOTE"><p class="calibre9"></p></blockquote></td></tr></table></div><p class="calibre9">PostgreSQL does not require you to explicitly open a cursor; the cursor is opened when you declare it.  However, the use of explicit <tt class="REPLACEABLE">OPEN</tt> commands is supported by the preprocessor, <span><i class="EMPHASIS">ecpg</i></span>, for use with embedded or interactive SQL applications.</p></div><div class="NAVHEADER"><a name="R1-SQL-DECLARESTATEMENT-2"></a><h2 class="SECT">Example</h2><p class="calibre9">The following example declares a cursor named <tt class="REPLACEABLE">cur_publisher</tt> and then uses that cursor to fetch 2 rows. Used directly within <span><i class="EMPHASIS">psql</i></span>, these results are immediately displayed:</p><pre class="SCREEN">booktown=# <tt class="REPLACEABLE"><b class="calibre10">BEGIN WORK;</b></tt>
BEGIN
booktown=# <tt class="REPLACEABLE"><b class="calibre10">DECLARE cur_publisher CURSOR FOR SELECT name FROM publishers;</b></tt>
SELECT
booktown=# <tt class="REPLACEABLE"><b class="calibre10">FETCH FORWARD 2 IN cur_publisher;</b></tt>
            name
----------------------------
 Kids Can Press
 Henry Holt &amp; Company, Inc.
(2 rows)</pre></div><div class="NAVHEADER"><hr width="100%" class="calibre6"/><table summary="Footer navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><td width="33%" valign="top" class="calibre3"><a href="r25921.htm" accesskey="P">Prev</a></td><td width="34%" valign="top" class="calibre4"><a href="book1.htm" accesskey="H">Home</a></td><td width="33%" valign="top" class="calibre5"><a href="r26052.htm" accesskey="N">Next</a></td></tr><tr class="calibre1"><td width="33%" valign="top" class="calibre3">CURRENT_USER</td><td width="34%" valign="top" class="calibre4"><a href="c22759.htm" accesskey="U">Up</a></td><td width="33%" valign="top" class="calibre5">DELETE</td></tr></table></div></div>

{% endraw %}

