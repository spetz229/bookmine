---
layout: page
title: "Unknown"
prev: x21718.htm
next: x22084.htm
book_path: books/o-reilly-practical-postgresql_oeb/
---
{% include JB/setup %}
{% raw %}
<div>
<div class="NAVHEADER"><table summary="Header navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><th colspan="3" class="calibre2">Practical PostgreSQL</th></tr><tr class="calibre1"><td width="10%" valign="bottom" class="calibre3"><a href="x21718.htm" accesskey="P">Prev</a></td><td width="80%" valign="bottom" class="calibre4">Chapter 13. LXP</td><td width="10%" valign="bottom" class="calibre5"><a href="x22084.htm" accesskey="N">Next</a></td></tr></table><hr width="100%" class="calibre6"/></div><div class="NAVHEADER"><h1 class="calibre7"><a name="USINGLOGIC" class="calibre8">Branching Logic</a></h1><p class="calibre9">A simple method of conditionally rendering content lies in LXP's native support for a small set of branching logic
    tags. These allow you to either display or hide regions of markup by performing equivalence checks on variables or cookies.
    LXP's basic branching logic tags include:</p><p class="calibre9"> </p><p class="calibre9"></p><ul class="calibre21"><li class="calibre22"><p class="calibre9"><tt class="REPLACEABLE">&lt;if&gt;</tt></p></li><li class="calibre22"><p class="calibre9"><tt class="REPLACEABLE">&lt;ifnot&gt;</tt></p></li><li class="calibre22"><p class="calibre9"><tt class="REPLACEABLE">&lt;ifcookie&gt;</tt></p></li><li class="calibre22"><p class="calibre9"><tt class="REPLACEABLE">&lt;ifnotcookie&gt;</tt></p></li><li class="calibre22"><p class="calibre9"><tt class="REPLACEABLE">&lt;else&gt;</tt></p></li><li class="calibre22"><p class="calibre9"><tt class="REPLACEABLE">&lt;elseif&gt;</tt></p></li><li class="calibre22"><p class="calibre9"><tt class="REPLACEABLE">&lt;elseifnot&gt;</tt></p></li></ul>
<p class="calibre9">The <tt class="REPLACEABLE">&lt;if&gt;</tt> and <tt class="REPLACEABLE">&lt;ifnot&gt;</tt> tags operate on LXP
    variables (or object variable values), whereas the &lt;ifcookie&gt; and &lt;ifnotcookie&gt; tags operate on stored cookies
    for the current domain. In other words, the logical functions of <tt class="REPLACEABLE">&lt;if&gt;</tt> and
    <tt class="REPLACEABLE">&lt;ifcookie&gt;</tt> are the same; only the sources for logical evaluation differ.</p><p class="calibre9">The <tt class="REPLACEABLE">&lt;else&gt;</tt> tag is more generalized, and implements subsequent, inverted logic
    evaluations on any of the previously mentioned tags. The <tt class="REPLACEABLE">&lt;elseif&gt;</tt> and
    <tt class="REPLACEABLE">&lt;elseifnot&gt;</tt> tags are actually just shortcut tags with the same result as nesting an
    <tt class="REPLACEABLE">&lt;if&gt;</tt> or <tt class="REPLACEABLE">&lt;ifnot&gt;</tt> tag within an
    <tt class="REPLACEABLE">&lt;else&gt;</tt> region.</p><div class="NAVHEADER"><h2 class="SECT"><a name="AEN21921" class="calibre8">The &lt;if&gt; and &lt;ifnot&gt; Tags</a></h2><p class="calibre9">When used without any accompanying attributes, the <tt class="REPLACEABLE">&lt;if&gt;</tt> and
      <tt class="REPLACEABLE">&lt;ifnot&gt;</tt> tags perform no useful function. However, with meaningful attributes, these
      tags can be used to quickly and simply flag regions of mark-up for display under specific circumstances.</p><div class="NAVHEADER"><h3 class="AUTHOR"><a name="AEN21926" class="calibre8">Using &lt;if&gt;</a></h3><p class="calibre9">The <tt class="REPLACEABLE">&lt;if&gt;</tt> tag examines its defined attributes through equivalence comparisons
        to variables whose names match the attribute names. If the specified attribute's value matches the variable's value
        exactly, the region of mark-up between that <tt class="REPLACEABLE">&lt;if&gt;</tt> and its associated
        <tt class="REPLACEABLE">&lt;/if&gt;</tt> closing tag will be processed by LXP. Otherwise, that region (between
        <tt class="REPLACEABLE">&lt;if&gt;</tt> and <tt class="REPLACEABLE">&lt;/if&gt;</tt>) will be completely ignored
        (including any LXP mark-up) up to its closing tag.</p><p class="calibre9">You may include in the <tt class="REPLACEABLE">&lt;if&gt;</tt> tag either an attribute name, a complete
        attribute pair, or a series of attribute pairs, depending on the intended logical assessment you wish to make.</p><p class="calibre9">Providing only an attribute name (e.g., <tt class="REPLACEABLE">&lt;if test&gt;</tt>) causes LXP to check only
        for the existence of <span><i class="EMPHASIS">any</i></span> characters assigned to the variable value with that name. In this case, if
        the variable is set to an empty value (or not set at all), the <tt class="REPLACEABLE">&lt;if&gt;</tt> match fails,
        and its defined region is <span><i class="EMPHASIS">muted</i></span> (not displayed). Otherwise, if a value is found, the region is
        processed as it would be normally.</p><p class="calibre9">Providing one or more attribute pairs results in each attribute value being compared to the variable with the
        specified attribute name. When more than one attribute is specified in the tag, <span><i class="EMPHASIS">each</i></span> condition must
        match exactly for the <tt class="REPLACEABLE">&lt;if&gt;</tt> conditions to be considered a match as a whole, and for
        the region to be processed.</p><p class="calibre9"><a href="x21880.htm#USINGTHEIFTAG">Example 13-13</a> uses the <tt class="REPLACEABLE">&lt;if&gt;</tt> tag to check for the existence
        of any variable value named <tt class="REPLACEABLE">name</tt>, and compares the variable named
        <tt class="REPLACEABLE">access</tt> to the value of 1.</p><div class="NAVHEADER"><a name="USINGTHEIFTAG"></a><p class="calibre9"><b class="calibre10">Example 13-13. Using the &lt;if&gt; tag</b></p><pre class="SCREEN">&lt;lxp&gt;
  &lt;if name access="1"&gt;
    &lt;strong&gt;Success!&lt;/strong&gt;&lt;br /&gt;
    A &lt;em&gt;name&lt;/em&gt; is set, and &lt;em&gt;access&lt;/em&gt; is set to 1.&lt;br /&gt;
  &lt;/if&gt;
&lt;/lxp&gt;</pre></div></div><div class="NAVHEADER"><h3 class="AUTHOR"><a name="AEN21956" class="calibre8">Using &lt;ifnot&gt;</a></h3><p class="calibre9">The <tt class="REPLACEABLE">&lt;ifnot&gt;</tt> tag logically performs the opposite of the
        <tt class="REPLACEABLE">&lt;if&gt;</tt> tag in every respect. For example, when multiple attributes are passed, each
        equivalence comparison must <span><i class="EMPHASIS">fail</i></span> for the <tt class="REPLACEABLE">&lt;ifnot&gt;</tt> region to be
        processed.</p><p class="calibre9"><a href="x21880.htm#USINGTHEIFNOTTAG">Example 13-14</a> uses the <tt class="REPLACEABLE">&lt;ifnot&gt;</tt> tag to test for the lack
        of a variable called <tt class="REPLACEABLE">error</tt>, as well as to check that a variable named
        <tt class="REPLACEABLE">access</tt> is not set to the value of <tt class="REPLACEABLE">0</tt>.</p><div class="NAVHEADER"><a name="USINGTHEIFNOTTAG"></a><p class="calibre9"><b class="calibre10">Example 13-14. Using the &lt;ifnot&gt; tag</b></p><pre class="SCREEN">&lt;lxp&gt;
  &lt;ifnot error access="0"&gt;
    &lt;strong&gt;Success!&lt;/strong&gt;&lt;br /&gt;
    An &lt;em&gt;error&lt;/em&gt; is not set, and &lt;em&gt;access&lt;/em&gt; is not set to 0.&lt;br /&gt;
  &lt;/ifnot&gt;
&lt;/lxp&gt;</pre></div><div class="NAVHEADER"><blockquote class="NOTE"><p class="calibre9"><b class="calibre10">Note: </b>You may not define two attributes with the same name in a single LXP tag (e.g., <tt class="REPLACEABLE">&lt;ifnot access="0" access="2"&gt;</tt>
          is not valid). Therefore, two logical assessments on one variable requires the use of two logic tags.</p></blockquote></div></div><div class="NAVHEADER"><h3 class="AUTHOR"><a name="AEN21979" class="calibre8">Nesting logic</a></h3><p class="calibre9">The term <span><i class="EMPHASIS">nesting</i></span> refers to placing tags within regions marked-up by other tags. You may safely
        nest logical tags as much as you like, provided you carefully keep track of where they open and close.</p><p class="calibre9">In some cases, you may have to nest logic tags in order to perform multiple checks on a single variable. This is
        because you can only place a variable's name inside of a logic tag once.</p><p class="calibre9"><a href="x21880.htm#USINGNESTEDLOGIC">Example 13-15</a> nests several logic tags within one top-level
        <tt class="REPLACEABLE">&lt;if&gt;</tt> tag.</p><div class="NAVHEADER"><a name="USINGNESTEDLOGIC"></a><p class="calibre9"><b class="calibre10">Example 13-15. Using nested logic</b></p><pre class="SCREEN">&lt;lxp&gt;
  &lt;if answer&gt;
    &lt;strong&gt;You have supplied an answer!&lt;/strong&gt;&lt;br /&gt;
    
    &lt;if answer="12"&gt;
      Your answer is correct!&lt;br /&gt;
    &lt;/if&gt;
    
    &lt;ifnot answer="12"&gt;
      Your answer of &lt;putvar name="answer"&gt;, though, is incorrect.&lt;br /&gt;
    &lt;/ifnot&gt;
    
    &lt;if answer="12" cheatcode&gt;
      You appear to be cheating, however.
    &lt;/if&gt;
  &lt;/if&gt;
&lt;/lxp&gt;</pre></div><p class="calibre9">In <a href="x21880.htm#USINGNESTEDLOGIC">Example 13-15</a>, the first <tt class="REPLACEABLE">&lt;if&gt;</tt> tag checks to see if an
        argument titled <tt class="REPLACEABLE">answer</tt> is set at all. If it is not, the entire region it
        encapsulates is muted. </p><p class="calibre9">The second <tt class="REPLACEABLE">&lt;if&gt;</tt> tag evaluates the passed
        <tt class="REPLACEABLE">answer</tt> argument to see if it is equal to 12. If it is,
        that <tt class="REPLACEABLE">&lt;if&gt;</tt> tag's region is processed. Otherwise, that region will be muted.</p><p class="calibre9">The <tt class="REPLACEABLE">&lt;ifnot&gt;</tt> tag then checks to see if the passed argument named
        <tt class="REPLACEABLE">answer</tt> is <span><i class="EMPHASIS">not</i></span> equal to 12. If it
        is not, the region that the <tt class="REPLACEABLE">&lt;ifnot&gt;</tt> encapsulates will be processed.</p><p class="calibre9">Lastly, the final <tt class="REPLACEABLE">&lt;if&gt;</tt> tag in <a href="x21880.htm#USINGNESTEDLOGIC">Example 13-15</a> checks to
        see if the passed value for <tt class="REPLACEABLE">answer</tt> is equal to 12, and
        for the existence of a passed argument called <tt class="REPLACEABLE">cheatcode</tt>. If the variable
        <tt class="REPLACEABLE">answer</tt> is found to equal 12, and the variable
        <tt class="REPLACEABLE">cheatcode</tt> is found at all, the region encapsulated by the last
        <tt class="REPLACEABLE">&lt;if&gt;</tt> tag will be processed (meaning, in this case, that it is merely
        displayed).</p></div></div><div class="NAVHEADER"><h2 class="SECT"><a name="AEN22011" class="calibre8">Using &lt;ifcookie&gt; and &lt;ifnotcookie&gt;</a></h2><p class="calibre9">The <tt class="REPLACEABLE">&lt;ifcookie&gt;</tt> and <tt class="REPLACEABLE">&lt;ifnotcookie&gt;</tt> tags
      behave identically to the <tt class="REPLACEABLE">&lt;if&gt;</tt> and <tt class="REPLACEABLE">&lt;ifnot&gt;</tt>
      tags, with the notable exception being that they derive the source of their logical evaluations from the cookies stored in
      the browser for the domain being accessed by the web browser, rather than from stored variables.</p><p class="calibre9"><a href="x21880.htm#USINGIFCOOKIEANDIFNOTCOOKIE">Example 13-16</a> welcomes a user with a personalized message if they have a cookie stored
      in their browser named <tt class="REPLACEABLE">username</tt>.</p><div class="NAVHEADER"><a name="USINGIFCOOKIEANDIFNOTCOOKIE"></a><p class="calibre9"><b class="calibre10">Example 13-16. Using ifcookie and ifnotcookie</b></p><pre class="SCREEN">&lt;lxp&gt;
  &lt;ifcookie username&gt;
    Welcome back, &lt;putcookie name="username"&gt;.&lt;br /&gt;
  &lt;/ifcookie&gt;
  &lt;ifnotcookie username&gt;
    &lt;include src="login.php" /&gt;
  &lt;/ifnotcookie&gt;
&lt;/lxp&gt;</pre></div><p class="calibre9">In <a href="x21880.htm#USINGIFCOOKIEANDIFNOTCOOKIE">Example 13-16</a>, if the <tt class="REPLACEABLE">username</tt> cookie doesn't
      exist, the user will see a login screen provided by a PHP document. This document is rendered through an Apache sub-request
      inclusion (see <a href="x22143.htm#INCLUDINGNONLXP">the Section called <i class="EMPHASIS">Including External Content Types</i></a>").</p></div><div class="NAVHEADER"><h2 class="SECT"><a name="AEN22036" class="calibre8">The &lt;else&gt;, &lt;elseif&gt;, and &lt;elseifnot&gt; Tags</a></h2><p class="calibre9">The <tt class="REPLACEABLE">&lt;else&gt;</tt>, <tt class="REPLACEABLE">&lt;elseif&gt;</tt>, and
       <tt class="REPLACEABLE">&lt;elseifnot&gt;</tt> tags aid in the creation of more involved conditional logic than a
       single <tt class="REPLACEABLE">&lt;if&gt;</tt> or <tt class="REPLACEABLE">&lt;ifnot&gt;</tt> statement.</p><p class="calibre9">The <tt class="REPLACEABLE">&lt;else&gt;</tt> tag marks a region to be displayed only if the last logical
       evaluation (at the same logical <span><i class="EMPHASIS">depth</i></span>, if working with nested logic tags) was
       <tt class="REPLACEABLE">false</tt>. If the last logical evaluation was <tt class="REPLACEABLE">true</tt>, the
       <tt class="REPLACEABLE">&lt;else&gt;</tt> region will be muted.</p><p class="calibre9"><a href="x21880.htm#USINGTHEELSETAG">Example 13-17</a> creates a simple <tt class="REPLACEABLE">&lt;if&gt;</tt> condition to check for
       the existence of a variable called <tt class="REPLACEABLE">answer</tt>. If it is not found, the region marked up by
       the <tt class="REPLACEABLE">&lt;else&gt;</tt> and <tt class="REPLACEABLE">&lt;/else&gt;</tt> tags will be
       displayed; otherwise, that region will be muted.</p><div class="NAVHEADER"><a name="USINGTHEELSETAG"></a><p class="calibre9"><b class="calibre10">Example 13-17. Using the &lt;else&gt; tag</b></p><pre class="SCREEN">&lt;lxp&gt;
  &lt;if answer&gt;
    Thank you for supplying an answer.
  &lt;/if&gt;
  &lt;else&gt;
    You have not yet supplied an answer.&lt;br /&gt;
    &lt;include src="forms/question.lxp" /&gt;
  &lt;/else&gt;
&lt;/lxp&gt;</pre></div><p class="calibre9">As mentioned earlier in this section, the <tt class="REPLACEABLE">&lt;elseif&gt;</tt> and
       <tt class="REPLACEABLE">&lt;elseifnot&gt;</tt> tags are just shortcuts. They behave exactly as the
       <tt class="REPLACEABLE">&lt;if&gt;</tt> and <tt class="REPLACEABLE">&lt;ifnot&gt;</tt> tags do, respectively, if
       they were nested within an <tt class="REPLACEABLE">&lt;else&gt;</tt> region. For example, the following two blocks of
       markup are functionally identical:</p><pre class="SCREEN">  &lt;if condition1="true"&gt;
    Condition 1 is True.
  &lt;/if&gt;
  &lt;else&gt;
    &lt;if condition2="true"&gt;
      Condition 2 is true.
    &lt;/if&gt;
  &lt;/else&gt;

...
  
  &lt;if condition1="true"&gt;
    Condition 1 is True.
  &lt;/if&gt;
  &lt;elseif condition2="true"&gt;
    Condition 2 is true.
  &lt;/elseif&gt;</pre><p class="calibre9">Using <tt class="REPLACEABLE">&lt;else&gt;</tt> tags streamlines both the maintainability and efficiency of the
       conditional logic. By using <tt class="REPLACEABLE">&lt;else&gt;</tt>, you can rely on LXP to keep track of whether or
       not the last condition was or was not met, and not have to re-evaluate the same conditions with the opposite logic
       tag.</p><p class="calibre9"><a href="x21880.htm#USINGNESTEDLOGICWITHELSETAGS">Example 13-18</a> re-implements the same logic that was used in <a href="x21880.htm#USINGNESTEDLOGIC">Example 13-15</a> earlier in this section, but improves it with the use of the
       <tt class="REPLACEABLE">&lt;else&gt;</tt> tag.</p><div class="NAVHEADER"><a name="USINGNESTEDLOGICWITHELSETAGS"></a><p class="calibre9"><b class="calibre10">Example 13-18. Using nested logic with &lt;else&gt; tags</b></p><pre class="SCREEN">&lt;lxp&gt;
  &lt;if answer&gt;
    &lt;strong&gt;You have supplied an answer!&lt;/strong&gt;&lt;br /&gt;
    
    &lt;if answer="12"&gt;
      Your answer is correct!&lt;br /&gt;
      &lt;if cheatcode&gt;
        You appear to be cheating, however.
      &lt;/if&gt;
      &lt;else&gt;
        Congratulations for not cheating!
      &lt;/else&gt;
    &lt;/if&gt;
    &lt;else&gt;
      Your answer of &lt;putvar name="answer"&gt;, though, is incorrect.&lt;br /&gt;
    &lt;/else&gt;
  
  &lt;/if&gt;
  &lt;else&gt;
    You have not yet supplied an answer.&lt;br /&gt;
    &lt;include src="forms/question.lxp" /&gt;
  &lt;/else&gt;
&lt;/lxp&gt;</pre></div></div></div><div class="NAVHEADER"><hr width="100%" class="calibre6"/><table summary="Footer navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><td width="33%" valign="top" class="calibre3"><a href="x21718.htm" accesskey="P">Prev</a></td><td width="34%" valign="top" class="calibre4"><a href="book1.htm" accesskey="H">Home</a></td><td width="33%" valign="top" class="calibre5"><a href="x22084.htm" accesskey="N">Next</a></td></tr><tr class="calibre1"><td width="33%" valign="top" class="calibre3">Tag Parsing</td><td width="34%" valign="top" class="calibre4"><a href="lxp.htm" accesskey="U">Up</a></td><td width="33%" valign="top" class="calibre5">Loop Iteration</td></tr></table></div></div>

{% endraw %}

