---
layout: page
title: "Unknown"
prev: x20921.htm
next: lxp.htm
book_path: books/o-reilly-practical-postgresql_oeb/
---
{% include JB/setup %}
{% raw %}
<div>
<div class="NAVHEADER"><table summary="Header navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><th colspan="3" class="calibre2">Practical PostgreSQL</th></tr><tr class="calibre1"><td width="10%" valign="bottom" class="calibre3"><a href="x20921.htm" accesskey="P">Prev</a></td><td width="80%" valign="bottom" class="calibre4">Chapter 12. JDBC</td><td width="10%" valign="bottom" class="calibre5"><a href="lxp.htm" accesskey="N">Next</a></td></tr></table><hr width="100%" class="calibre6"/></div><div class="NAVHEADER"><h1 class="calibre7"><a name="AEN21115" class="calibre8">Issues Specific to PostgreSQL and JDBC</a></h1><p class="calibre9">This section will detail three common issues with JDBC, just to save you the trouble of puzzling through them yourself.
    The first is fairly simple. <tt class="REPLACEABLE">ResultSets</tt> returned from an
    <tt class="REPLACEABLE">executeQuery</tt> call always start out with the row pointer set to to the point before the first
    row returned by the query. This means that you must advance to the first row returned before trying to fetch information from
    a <tt class="REPLACEABLE">ResultSet</tt> by calling the <tt class="REPLACEABLE">next</tt> method.  <a href="x21115.htm#JDBCFIRSTROWFETCH">Example 12-9</a> illustrates this. Notice that you'll get an exception from the first invocation of
    <tt class="REPLACEABLE">getString</tt>, because there is no current row. After a call to next, the
    <tt class="REPLACEABLE">getString</tt> function successfully returns a value from the first row in the set. </p><div class="NAVHEADER"><a name="JDBCFIRSTROWFETCH"></a><p class="calibre9"><b class="calibre10">Example 12-9. JDBC first row fetch</b></p><pre class="SCREEN">ResultSet newSet = null;

try {
  newSet = s.executeQuery("SELECT * FROM book");
} catch (SQLException se) {
  System.out.println("We got an exception while executing our query:" +
                     "This probably means that our SQL is invalid.");
  se.printStackTrace();
  System.exit(1);
}

try {
  String value = newSet.getString(1); // BAD: we haven't called next() yet
} catch (Exception e) {
  System.out.println("We'll get an exception here, because we haven't" +
                     " stepped to the first row of the ResultSet yet.");
  e.printStackTrace();
}

try {
  newSet.next();
  String value = newSet.getString(1);
} catch (SQLException se) {
  System.out.println("We'll only get an exception here if we've lost" +
                     "our connection, which isn't our fault.");
  se.printStackTrace();
  System.exit(1);
}</pre></div><p class="calibre9">The next issue is also related to <tt class="REPLACEABLE">ResultSets</tt>, but it's far simpler than the first. You
    cannot get the number of rows returned from an executed statement without first stepping through the
    <tt class="REPLACEABLE">ResultSet</tt> using <tt class="REPLACEABLE">next</tt>, and incrementing a counter.  In other
    words, there is no simple <tt class="REPLACEABLE">ResultSet</tt> method to return the number of rows retrieved. This is
    due to the fact that JDBC doesn't necessarily fetch any rows from PostgreSQL (or, for that matter, know whether or not there
    is a next row) until after you call the <tt class="REPLACEABLE">next</tt> method.</p><p class="calibre9">The last issue is more of a caveat. In a multithreaded environment, it's good to ensure that each thread uses its own
    <tt class="REPLACEABLE">Statement</tt> and <tt class="REPLACEABLE">ResultSet</tt> objects. That's because there is
    some state maintained in these objects, and using them from different threads will corrupt that state.</p></div><div class="NAVHEADER"><hr width="100%" class="calibre6"/><table summary="Footer navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><td width="33%" valign="top" class="calibre3"><a href="x20921.htm" accesskey="P">Prev</a></td><td width="34%" valign="top" class="calibre4"><a href="book1.htm" accesskey="H">Home</a></td><td width="33%" valign="top" class="calibre5"><a href="lxp.htm" accesskey="N">Next</a></td></tr><tr class="calibre1"><td width="33%" valign="top" class="calibre3">Using JDBC</td><td width="34%" valign="top" class="calibre4"><a href="c20820.htm" accesskey="U">Up</a></td><td width="33%" valign="top" class="calibre5">LXP</td></tr></table></div></div>

{% endraw %}

