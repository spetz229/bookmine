---
layout: page
title: "Unknown"
prev: r24858.htm
next: r25329.htm
book_path: books/o-reilly-practical-postgresql_oeb/
---
{% include JB/setup %}
{% raw %}
<div>
<div class="NAVHEADER"><table summary="Header navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><th colspan="3" class="calibre2">Practical PostgreSQL</th></tr><tr class="calibre1"><td width="10%" valign="bottom" class="calibre3"><a href="r24858.htm" accesskey="P">Prev</a></td><td width="80%" valign="bottom" class="calibre4"/><td width="10%" valign="bottom" class="calibre5"><a href="r25329.htm" accesskey="N">Next</a></td></tr></table><hr width="100%" class="calibre6"/></div><h1 class="calibre7"><a name="SQL-CREATETABLE" class="calibre8">CREATE TABLE</a></h1><div class="NAVHEADER"><a name="AEN24982"></a><h2 class="SECT">Name</h2>CREATE TABLE -- Creates a new table.</div><div class="NAVHEADER"><a name="AEN24985"></a><h2 class="SECT">Synopsis</h2><pre class="SCREEN">CREATE [ TEMPORARY | TEMP ] TABLE <tt class="REPLACEABLE"><i class="EMPHASIS">table_name</i></tt> (
            { <tt class="REPLACEABLE"><i class="EMPHASIS">column_name</i></tt> <tt class="REPLACEABLE"><i class="EMPHASIS">type</i></tt> [ <tt class="REPLACEABLE"><i class="EMPHASIS">column_constraint</i></tt> [...] ] |
              <tt class="REPLACEABLE"><i class="EMPHASIS">table_constraint</i></tt> }
            [, ...]
       )
       [ INHERITS ( <tt class="REPLACEABLE"><i class="EMPHASIS">inherited_table</i></tt> [,...] ) ]

<tt class="REPLACEABLE"><i class="EMPHASIS">column_constraint</i></tt> ::=
  [ CONSTRAINT <tt class="REPLACEABLE"><i class="EMPHASIS">column_constraint_name</i></tt> ]
  { NOT NULL | NULL | UNIQUE | PRIMARY KEY |
    DEFAULT <tt class="REPLACEABLE"><i class="EMPHASIS">default_value</i></tt> |
    CHECK (<tt class="REPLACEABLE"><i class="EMPHASIS">condition</i></tt> |
    REFERENCES <tt class="REPLACEABLE"><i class="EMPHASIS">foreign_table</i></tt> [ ( <tt class="REPLACEABLE"><i class="EMPHASIS">foreign_column</i></tt> ) ]
      [ MATCH FULL | MATCH PARTIAL ]
      [ ON DELETE <tt class="REPLACEABLE"><i class="EMPHASIS">action</i></tt> ]
      [ ON UPDATE <tt class="REPLACEABLE"><i class="EMPHASIS">action</i></tt> ]
      [ DEFERRABLE | NOT DEFERRABLE ]
      [ INITIALLY DEFERRED | INITIALLY IMMEDIATE ]
  }

<tt class="REPLACEABLE"><i class="EMPHASIS">table constraint</i></tt> ::=
  [ CONSTRAINT <tt class="REPLACEABLE"><i class="EMPHASIS">table_constraint_name</i></tt> ]
  { UNIQUE ( <tt class="REPLACEABLE"><i class="EMPHASIS">column_name</i></tt> [, ... ] ) |
    PRIMARY KEY ( <tt class="REPLACEABLE"><i class="EMPHASIS">column_name</i></tt> [, ... ] ) |
    CHECK ( <tt class="REPLACEABLE"><i class="EMPHASIS">condition</i></tt> ) |
    FOREIGN KEY ( <tt class="REPLACEABLE"><i class="EMPHASIS">column_name</i></tt> [, ... ] )
      REFERENCES <tt class="REPLACEABLE"><i class="EMPHASIS">foreign_table</i></tt>
      [ ( <tt class="REPLACEABLE"><i class="EMPHASIS">foreign_column</i></tt> [, ... ] ) ]
      [ MATCH FULL | MATCH PARTIAL ]
      [ ON DELETE <tt class="REPLACEABLE"><i class="EMPHASIS">action</i></tt> ]
      [ ON UPDATE <tt class="REPLACEABLE"><i class="EMPHASIS">action</i></tt> ]
      [ DEFERRABLE | NOT DEFERRABLE ]
      [ INITIALLY DEFERRED | INITIALLY IMMEDIATE ]
  }

<tt class="REPLACEABLE"><i class="EMPHASIS">action</i></tt> ::= { NO ACTION | RESTRICT | CASCADE | SET NULL | SET DEFAULT }
</pre><div class="NAVHEADER"><a name="R2-SQL-CREATETABLE-1"></a><h3 class="AUTHOR">Parameters</h3><p class="calibre9"> </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE">TEMPORARY | TEMP</tt></dt><dd class="calibre16"><p class="calibre9">The keyword which defines a table as having a temporary lifespan. Such a table will be destroyed after the user's session has ended.  Any table-related constructions (such as indices and constraints) will also be destroyed with the table at the end of the session.</p><p class="calibre9">If a temporary table is given the same name as an existing permanent table, only the temporary table will be accessible by the session which created it. This will cause problems, since it will implicitly take precedence over the permanent table within the current session until it is destroyed.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">table_name</i></tt></dt><dd class="calibre16"><p class="calibre9">The name of the table you are creating.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">column_name</i></tt></dt><dd class="calibre16"><p class="calibre9">The name of a column within the new table. Multiple column definitions are specified within parentheses, separated by commas.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">type</i></tt></dt><dd class="calibre16"><p class="calibre9">The type of a specified column, immediately following a column name. This can be a standard type or an array of a standard type.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">column_constraint</i></tt></dt><dd class="calibre16"><p class="calibre9">A complete constraint definition for a column. Here are the parameters available for a column constraint:
              
              </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre17"><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">column_constraint_name</i></tt></dt><dd class="calibre16"><p class="calibre9">The optional name for a constraint clause.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">NULL</tt></dt><dd class="calibre16"><p class="calibre9">The clause used to explicitly allow the column to contain <tt class="REPLACEABLE">NULL</tt> values. This option is set by default.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">NOT NULL</tt></dt><dd class="calibre16"><p class="calibre9">The clause used to forbid the use of a <tt class="REPLACEABLE">NULL</tt> value for this column. You can accomplish this by using the <tt class="REPLACEABLE">CHECK (</tt><tt class="REPLACEABLE"><i class="EMPHASIS">column</i></tt> <tt class="REPLACEABLE">NOT NULL</tt>) column constraint.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">UNIQUE</tt></dt><dd class="calibre16"><p class="calibre9">The clause used to force all rows within a column to have unique values (unique within the table).  This is enforced by the creation of a unique index on the column.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">PRIMARY KEY</tt></dt><dd class="calibre16"><p class="calibre9">The clause used to set a column as a primary key for the table. Other tables rely on primary keys to act as the identifying column for each row. A primary key is effectively the same as a column created with the <tt class="REPLACEABLE">UNIQUE</tt> and <tt class="REPLACEABLE">NOT NULL</tt> clauses.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">DEFAULT</tt></dt><dd class="calibre16"><p class="calibre9">The clause used to set a default value for a column. Such a value is used if an input value is not provided for the column by an <tt class="REPLACEABLE">INSERT</tt> statement. Without an explicit <tt class="REPLACEABLE"><i class="EMPHASIS">default_value</i></tt>, a column defaults to contain <tt class="REPLACEABLE">NULL</tt>.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">CHECK</tt></dt><dd class="calibre16"><p class="calibre9">The clause used to have values checked against a specified <tt class="REPLACEABLE"><i class="EMPHASIS">condition</i></tt>. If the condition yields <tt class="REPLACEABLE"><i class="EMPHASIS">false</i></tt> on an <tt class="REPLACEABLE">INSERT</tt> or <tt class="REPLACEABLE">UPDATE</tt>, the statement will fail.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">condition</i></tt></dt><dd class="calibre16"><p class="calibre9">An arbitrary conditional expression yielding a Boolean value, following the <tt class="REPLACEABLE">CHECK</tt> clause.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">REFERENCES</tt></dt><dd class="calibre16"><p class="calibre9">The clause used to verify column values against the values of a column in another table. (See <a href="c13329.htm">Chapter 7</a> for more on this creating and using this constraint.)</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">foreign_table</i></tt></dt><dd class="calibre16"><p class="calibre9">The name of a table you wish to be referenced by a foreign key constraint.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">foreign_column</i></tt></dt><dd class="calibre16"><p class="calibre9">The name of a column in another table which you are referencing in a foreign key constraint.  The column must reside within an existing table.  If no column name is given, the database will use the referenced table's primary key is used.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">MATCH FULL | MATCH PARTIAL</tt></dt><dd class="calibre16"><p class="calibre9">The <tt class="REPLACEABLE">MATCH</tt> clause affects what kind of <tt class="REPLACEABLE">NULL</tt> and non-<tt class="REPLACEABLE">NULL</tt> values are allowed to be mixed on insertion into a table whose foreign key references <span><i class="EMPHASIS">multiple columns</i></span>. The <tt class="REPLACEABLE">MATCH</tt> clause is therefore only practically applicable to table constraints, though the syntax is technically valid in a column constraint as well.</p><p class="calibre9"><tt class="REPLACEABLE">MATCH FULL</tt> disallows insertion of row data whose columns contain <tt class="REPLACEABLE">NULL</tt> values unless all referenced columns are <tt class="REPLACEABLE">NULL</tt>. <tt class="REPLACEABLE">MATCH PARTIAL</tt> is not supported as of PostgreSQL 7.1.x. Not specifying either clause allows <tt class="REPLACEABLE">NULL</tt> columns to satisfy the constraint.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">ON DELETE</tt></dt><dd class="calibre16"><p class="calibre9">                    The <tt class="REPLACEABLE">ON DELETE</tt> clause indicates that when a <tt class="REPLACEABLE">DELETE</tt> is executed on a referenced row in the referenced table, one of the following actions will be executed upon the constrained column, as specified by <tt class="REPLACEABLE"><i class="EMPHASIS">action</i></tt>:
                      
                      </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre17"><dt class="NAVHEADER"><tt class="REPLACEABLE">NO ACTION</tt></dt><dd class="calibre16"><p class="calibre9">                            The <tt class="REPLACEABLE">NO ACTION</tt> clause produces an error if the reference is violated. This is the default if <tt class="REPLACEABLE"><i class="EMPHASIS">action</i></tt> is not specified.
                          </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">RESTRICT</tt></dt><dd class="calibre16"><p class="calibre9">                            The <tt class="REPLACEABLE">RESTRICT</tt> keyword is identical to <tt class="REPLACEABLE">NO ACTION</tt>.
                          </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">CASCADE</tt></dt><dd class="calibre16"><p class="calibre9">                            The <tt class="REPLACEABLE">CASCADE</tt> keyword removes all rows which reference the deleted row. Exercise caution with this action.
                          </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">SET NULL</tt></dt><dd class="calibre16"><p class="calibre9">                            The <tt class="REPLACEABLE">SET NULL</tt> clause assigns a <tt class="REPLACEABLE">NULL</tt> value to all referenced column values.
                          </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">SET DEFAULT</tt></dt><dd class="calibre16"><p class="calibre9">                            The <tt class="REPLACEABLE">SET DEFAULT</tt> clause sets all referenced columns to their default values.
                          </p></dd></dl></div>
<p class="calibre9">Note that specifying <tt class="REPLACEABLE">CASCADE</tt> as the <tt class="REPLACEABLE">ON UPDATE</tt> action updates all of the rows which reference the updated row with the new value (rather than deleting them, as would be the case with <tt class="REPLACEABLE">ON DELETE CASCADE</tt>).
                  </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">ON UPDATE</tt></dt><dd class="calibre16"><p class="calibre9">                    The <tt class="REPLACEABLE">ON DELETE</tt> clause indicates that when an <tt class="REPLACEABLE">UPDATE</tt> statement is performed on a referenced row in the referenced table, the same actions are available as with the <tt class="REPLACEABLE">ON DELETE</tt> clause. The default                action is also <tt class="REPLACEABLE">NO ACTION</tt>.
                    </p><p class="calibre9">                    Specifying <tt class="REPLACEABLE">CASCADE</tt> as the <tt class="REPLACEABLE">ON UPDATE</tt> action updates all of the rows which reference the updated row with the new value (rather than deleting them, as would be the case with <tt class="REPLACEABLE">ON DELETE CASCADE</tt>).
                  </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">DEFERRABLE | NOT DEFERRABLE</tt></dt><dd class="calibre16"><p class="calibre9">                    The <tt class="REPLACEABLE">DEFERRABLE</tt> clause gives you the option of postponing enforcement of the constraint to        the end of a transaction rather than having it enforced at the end of each statement. Use the <tt class="REPLACEABLE">INITIALLY</tt> clause to specify the initial point at which the constraint will be enforced.
                  </p><p class="calibre9">                    The <tt class="REPLACEABLE">NOT DEFERRABLE</tt> clause indicates the enforcement of the constraint must always be done immediately as each statement is executed. This is the default.                </p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">INITIALLY DEFERRED | INITIALLY IMMEDIATE</tt></dt><dd class="calibre16"><p class="calibre9">The <tt class="REPLACEABLE">INITIALLY DEFERRED</tt> clause postpones constraint enforcement until the end of the transaction, whereas <tt class="REPLACEABLE">INITIALLY IMMEDIATE</tt> causes constraint checking to be performed after each statement. The <tt class="REPLACEABLE">INITIALLY IMMEDIATE</tt> clause is the default.</p></dd></dl></div>
</dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">table_constraint</i></tt></dt><dd class="calibre16"><p class="calibre9">A complete table constraint definition for the table being created.  A table constraint can affect multiple columns, whereas a column constraint only creates a constraint for a single column. Here are the parameters available for a table constraint:
              </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre17"><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">table_constraint_name</i></tt></dt><dd class="calibre16"><p class="calibre9">The optional name for the constraint to be created.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">column_name</i></tt> <tt class="REPLACEABLE">[, ...]</tt></dt><dd class="calibre16"><p class="calibre9">The name of the column (or comma-delimited list of columns) to which  the table constraint applies.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">PRIMARY KEY | UNIQUE</tt></dt><dd class="calibre16"><p class="calibre9">The table constraint keywords that apply an implicit index. Use the <tt class="REPLACEABLE">UNIQUE</tt> keyword to have the specified column's value checked for duplicate values. Any attempt to insert new rows that do not contain a unique value for the specified column (or columns) will fail if this constraint is used.</p><p class="calibre9">Use the <tt class="REPLACEABLE">PRIMARY KEY</tt> keywords to both check for duplicate values, <span><i class="EMPHASIS">and</i></span> to disallow <tt class="REPLACEABLE">NULL</tt> values on the specified column, or columns.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">CHECK (</tt> <tt class="REPLACEABLE"><i class="EMPHASIS">condition</i></tt><tt class="REPLACEABLE"> )</tt></dt><dd class="calibre16"><p class="calibre9">The conditional <tt class="REPLACEABLE">CHECK</tt> constraint keyword. Use this keyword to check a value against the evaluated boolean <tt class="REPLACEABLE"><i class="EMPHASIS">condition</i></tt> before a new row is inserted; if the check fails (i.e., <tt class="REPLACEABLE"><i class="EMPHASIS">condition</i></tt> returned false), the row is not added.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">FOREIGN KEY</tt></dt><dd class="calibre16"><p class="calibre9">The <tt class="REPLACEABLE">FOREIGN KEY</tt> constraint keyword. Use this keyword to identify a column in another table that will be referenced as a foreign key relation (see <a href="c13329.htm">Chapter 7</a> for more on this constraint). The remainder of this clause is identical to the <tt class="REPLACEABLE">REFERENCES</tt> clause of a column constraint.</p></dd></dl></div>
</dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">inherited_table</i></tt></dt><dd class="calibre16"><p class="calibre9">The name of a table from which the new table should inherit columns.  If there are any column names inherited that match column names you've already specified as columns for the new table, PostgreSQL will display an error and terminate execution of the command.</p></dd></dl></div>
</div><div class="NAVHEADER"><a name="R2-SQL-CREATETABLE-2"></a><h3 class="AUTHOR">Results</h3><p class="calibre9"> </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE">CREATE</tt></dt><dd class="calibre16"><p class="calibre9">The message returned when a table is successfully created.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">ERROR:  Relation '</tt><tt class="REPLACEABLE"><i class="EMPHASIS">table_name</i></tt><tt class="REPLACEABLE">' already exists</tt></dt><dd class="calibre16"><p class="calibre9">The error returned if a table named <tt class="REPLACEABLE"><i class="EMPHASIS">table_name</i></tt> already exists.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">ERROR:  CREATE TABLE: attribute "</tt><tt class="REPLACEABLE"><i class="EMPHASIS">b</i></tt><tt class="REPLACEABLE">" duplicated</tt></dt><dd class="calibre16"><p class="calibre9">The error returned a column name is listed twice.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">ERROR:  Unable to locate type name '</tt><tt class="REPLACEABLE"><i class="EMPHASIS">type</i></tt><tt class="REPLACEABLE">' in catalog</tt></dt><dd class="calibre16"><p class="calibre9">The error returned if a specified column <tt class="REPLACEABLE"><i class="EMPHASIS">type</i></tt> does not exist.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">ERROR:  Illegal class name '</tt><tt class="REPLACEABLE"><i class="EMPHASIS">table_name</i></tt><tt class="REPLACEABLE">'</tt></dt><dd class="calibre16"><p class="calibre9">The error returned if <tt class="REPLACEABLE"><i class="EMPHASIS">table_name</i></tt> begins with <tt class="REPLACEABLE"><i class="EMPHASIS">pg_</i></tt>.</p></dd></dl></div>
</div></div><div class="NAVHEADER"><a name="R1-SQL-CREATETABLE-1"></a><h2 class="SECT">Description</h2><p class="calibre9">Use the <tt class="REPLACEABLE">CREATE TABLE</tt> command to add a new table to the database to which you are connected. After it is created, the new table will be completely empty, and its ownership will be set to the user who issued the <tt class="REPLACEABLE">CREATE TABLE</tt> command.</p><p class="calibre9">You must supply a name and data type for each column of which the new table will be comprised (except for inherited columns, for which this data will be derived from the parent table). The name supplied may be up to 31 characters in length, and will be folded to lowercase unless placed within double quotes. The data type can be a standard type (e.g., <tt class="REPLACEABLE">int4</tt>, <tt class="REPLACEABLE">char</tt>), or an array type (a standard type, followed by square brackets, such as <tt class="REPLACEABLE">float4[]</tt>).</p><p class="calibre9">You may set a variety of constraints on a column, such as the <tt class="REPLACEABLE">NOT NULL</tt> clause, which disallows <tt class="REPLACEABLE">NULL</tt> values from being inserted into the column. </p><div class="NAVHEADER"><p class="calibre9"></p><table class="calibre" border="1" width="100%"><tr class="calibre1"><td class="calibre23"><b class="calibre10">Warning</b></td></tr><tr class="calibre1"><td class="calibre15"><p class="calibre9">Tables cannot have the same name as existing data types; nor can they have the same names as system catalog tables, or even be prefixed with <tt class="REPLACEABLE">pg_</tt>, which is the reserved system table prefix.</p></td></tr></table></div><p class="calibre9">A table can have a maximum of about 1,600 columns. Due to tuple-length issues, this number is lower in practice.</p><p class="calibre9">For more information about creating tables, see <a href="c4890.htm">Chapter 4</a>. For more information about column and table constraints in general, see <a href="c13329.htm">Chapter 7</a>.</p></div><div class="NAVHEADER"><a name="R1-SQL-CREATETABLE-2"></a><h2 class="SECT">Examples</h2><p class="calibre9">The following example creates a table called <tt class="REPLACEABLE">shipments</tt>. It places the <tt class="REPLACEABLE">NOT NULL</tt> constraint and <tt class="REPLACEABLE">DEFAULT</tt> constraints on its <tt class="REPLACEABLE">id</tt> column:</p><pre class="SCREEN">booktown=# <tt class="REPLACEABLE"><b class="calibre10">CREATE TABLE shipments (</b></tt>
booktown(# <tt class="REPLACEABLE"><b class="calibre10">       id integer NOT NULL DEFAULT nextval('shipments_ship_id_seq'),</b></tt>
booktown(# <tt class="REPLACEABLE"><b class="calibre10">       customer_id integer,</b></tt>
booktown(# <tt class="REPLACEABLE"><b class="calibre10">       isbn text,</b></tt>
booktown(# <tt class="REPLACEABLE"><b class="calibre10">       ship_date timestamp);</b></tt>
CREATE</pre></div><div class="NAVHEADER"><hr width="100%" class="calibre6"/><table summary="Footer navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><td width="33%" valign="top" class="calibre3"><a href="r24858.htm" accesskey="P">Prev</a></td><td width="34%" valign="top" class="calibre4"><a href="book1.htm" accesskey="H">Home</a></td><td width="33%" valign="top" class="calibre5"><a href="r25329.htm" accesskey="N">Next</a></td></tr><tr class="calibre1"><td width="33%" valign="top" class="calibre3">CREATE SEQUENCE</td><td width="34%" valign="top" class="calibre4"><a href="c22759.htm" accesskey="U">Up</a></td><td width="33%" valign="top" class="calibre5">CREATE TABLE AS</td></tr></table></div></div>

{% endraw %}

