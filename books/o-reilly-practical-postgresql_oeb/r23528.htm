---
layout: page
title: "Unknown"
prev: r23479.htm
next: r23733.htm
book_path: books/o-reilly-practical-postgresql_oeb/
---
{% include JB/setup %}
{% raw %}
<div>
<div class="NAVHEADER"><table summary="Header navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><th colspan="3" class="calibre2">Practical PostgreSQL</th></tr><tr class="calibre1"><td width="10%" valign="bottom" class="calibre3"><a href="r23479.htm" accesskey="P">Prev</a></td><td width="80%" valign="bottom" class="calibre4"/><td width="10%" valign="bottom" class="calibre5"><a href="r23733.htm" accesskey="N">Next</a></td></tr></table><hr width="100%" class="calibre6"/></div><h1 class="calibre7"><a name="SQL-COPY" class="calibre8">COPY</a></h1><div class="NAVHEADER"><a name="AEN23532"></a><h2 class="SECT">Name</h2>COPY -- Copies data between files and tables.</div><div class="NAVHEADER"><a name="AEN23535"></a><h2 class="SECT">Synopsis</h2><pre class="SCREEN">COPY [ BINARY ] <tt class="REPLACEABLE"><i class="EMPHASIS">table</i></tt> [ WITH OIDS ]
     FROM { '<tt class="REPLACEABLE"><i class="EMPHASIS">filename</i></tt>' | <tt class="REPLACEABLE"><i class="EMPHASIS">stdin</i></tt> }
     [ [ USING ] DELIMITERS '<tt class="REPLACEABLE"><i class="EMPHASIS">delimiter</i></tt>' ]
     [ WITH NULL AS '<tt class="REPLACEABLE"><i class="EMPHASIS">null_string</i></tt>' ]
COPY [ BINARY ] <tt class="REPLACEABLE"><i class="EMPHASIS">table</i></tt> [ WITH OIDS ]
     TO { '<tt class="REPLACEABLE"><i class="EMPHASIS">filename</i></tt>' | <tt class="REPLACEABLE"><i class="EMPHASIS">stdout</i></tt> }
     [ [ USING ] DELIMITERS '<tt class="REPLACEABLE"><i class="EMPHASIS">delimiter</i></tt>' ]
     [ WITH NULL AS '<tt class="REPLACEABLE"><i class="EMPHASIS">null_string</i></tt>' ]</pre><div class="NAVHEADER"><a name="R2-SQL-COPY-1"></a><h3 class="AUTHOR">Parameters</h3><p class="calibre9"> </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE">BINARY</tt></dt><dd class="calibre16"><p class="calibre9">The <tt class="REPLACEABLE">BINARY</tt> mode keyword. This specifies that you wish for <tt class="REPLACEABLE">COPY</tt> to store and read data in PostgreSQL's own binary format (rather than text). When using binary format, the <tt class="REPLACEABLE">WITH NULL</tt> and <tt class="REPLACEABLE">DELIMITERS</tt> keywords are not applicable.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">table</i></tt></dt><dd class="calibre16"><p class="calibre9">The name of an existing table to either copy data from, or to.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">FROM</tt></dt><dd class="calibre16"><p class="calibre9">The <tt class="REPLACEABLE">FROM</tt> keyword, which indicates that the <tt class="REPLACEABLE">COPY</tt> operation will copy data <span><i class="EMPHASIS">from</i></span> either a file or <tt class="REPLACEABLE"><i class="EMPHASIS">stdin</i></tt> into <tt class="REPLACEABLE"><i class="EMPHASIS">table</i></tt>.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">TO</tt></dt><dd class="calibre16"><p class="calibre9">The <tt class="REPLACEABLE">TO</tt> keyword, which indicates that the <tt class="REPLACEABLE">COPY</tt> operation will copy data <span><i class="EMPHASIS">to</i></span> either a file or <tt class="REPLACEABLE">stdout</tt>, from the data in <tt class="REPLACEABLE"><i class="EMPHASIS">table</i></tt>.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">WITH OIDS</tt></dt><dd class="calibre16"><p class="calibre9">The optional <tt class="REPLACEABLE">oid</tt> specifier. This indicates that the copy operation is to either select or insert the unique object ID (<tt class="REPLACEABLE">oid</tt>) of each row, depending on whether or not it is a <tt class="REPLACEABLE">COPY FROM</tt> or <tt class="REPLACEABLE">COPY TO</tt>.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">filename</i></tt></dt><dd class="calibre16"><p class="calibre9">The <span><i class="EMPHASIS">absolute</i></span> path to the file chosen for input or output (i.e., <span><i class="EMPHASIS">/usr/local/pgsql/data/employeetable</i></span>). You must specify an absolute path.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">stdin</tt></dt><dd class="calibre16"><p class="calibre9">The <span><i class="EMPHASIS">standard input</i></span> option. When used in place of a filename, this indicates that data will be accepted from the client application, rather than a file. If you are using <span><i class="EMPHASIS">psql</i></span> to enter data, you will be prompted to type in text if you initiate a <tt class="REPLACEABLE">COPY FROM</tt> on <tt class="REPLACEABLE">stdin</tt>.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">stdout</tt></dt><dd class="calibre16"><p class="calibre9">The <span><i class="EMPHASIS">standard output</i></span> option. When used in place of a filename, this indicates that output will be sent directly to the client, rather than to a file (e.g., to <span><i class="EMPHASIS">psql</i></span>).</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">delimiter</i></tt></dt><dd class="calibre16"><p class="calibre9">The character symbol that separates column values in a row. On a <tt class="REPLACEABLE">COPY FROM</tt>, PostgreSQL will
          expect this character to delimit columns. On a <tt class="REPLACEABLE">COPY TO</tt>, PostgreSQL will delimit each column value by
          this character in its output. If omitted, the default delimiter used, which is a tab (<tt class="REPLACEABLE">\t</tt>).</p><p class="calibre9">The delimiter you choose must only be one character; if you enter something longer than one character, only the
          first character of what you enter will be used as the delimiter.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">null_string</i></tt></dt><dd class="calibre16"><p class="calibre9">The character sequence used to identify a <tt class="REPLACEABLE">NULL</tt> value. By default, <tt class="REPLACEABLE">\N</tt> is used, but you can change it to something more suited to your needs. Recognize that when data is copied into the database, any strings that match your specified <tt class="REPLACEABLE">NULL</tt> string will be interpreted as <tt class="REPLACEABLE">NULL</tt> values, so make sure to use the same string when you copy data in to the database as you used when you copied the data out to begin with, and try to choose a sequence that should never have a valid, non-<tt class="REPLACEABLE">NULL</tt> counterpart.</p></dd></dl></div>
</div><div class="NAVHEADER"><a name="R2-SQL-COPY-2"></a><h3 class="AUTHOR">Results</h3><p class="calibre9"> </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE">COPY</tt></dt><dd class="calibre16"><p class="calibre9">The message returned when a <tt class="REPLACEABLE">COPY</tt> procedure finishes successfully.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">ERROR</tt></dt><dd class="calibre16"><p class="calibre9">The error returned if a <tt class="REPLACEABLE">COPY</tt> procedure fails, accompanied by a reason for failure.</p></dd></dl></div>
</div></div><div class="NAVHEADER"><a name="R1-SQL-COPY-1"></a><h2 class="SECT">Description</h2><p class="calibre9">Use the <tt class="REPLACEABLE">COPY</tt> command to transfer data between tables in a PostgreSQL database and files within a filesystem.  There are two ways to use <tt class="REPLACEABLE">COPY</tt>: <tt class="REPLACEABLE">COPY TO</tt> and <tt class="REPLACEABLE">COPY FROM</tt>.</p><p class="calibre9">Use <tt class="REPLACEABLE">COPY TO</tt> when you want to output the entire contents of a table in your database to a file, or to standard output (<span><i class="EMPHASIS">stdout</i></span>, i.e., the client connected to the database). Use <tt class="REPLACEABLE">COPY FROM</tt> when you wish to import data from a standard file, or standard input (<span><i class="EMPHASIS">stdin</i></span>, from the client).</p><div class="NAVHEADER"><blockquote class="NOTE"><p class="calibre9"><b class="calibre10">Note: </b>The SQL <tt class="REPLACEABLE">COPY</tt> command should not be confused with the <span><i class="EMPHASIS">psql</i></span> <tt class="REPLACEABLE">\copy</tt> command.  <tt class="REPLACEABLE">\copy</tt> performs a <tt class="REPLACEABLE">COPY FROM stdin</tt> or <tt class="REPLACEABLE">COPY TO stdout</tt>, storing the acquired data in a <span><i class="EMPHASIS">psql</i></span>-accessible file. This means the file access rights are controlled by the client (frontend), instead of the <span><i class="EMPHASIS">postmaster</i></span> (backend).</p></blockquote></div><p class="calibre9">See <a href="x5504.htm">the Section called <i class="EMPHASIS">Adding Data with INSERT and COPY</i> in Chapter 4</a>" in <a href="c4890.htm">Chapter 4</a>, for more on the nuances of this command.</p><p class="calibre9">You can either use normal text for transferring data, or you can use binary format (when specified with the <tt class="REPLACEABLE">BINARY</tt> keyword).  Using binary format will speed up <tt class="REPLACEABLE">COPY</tt> commands significantly; however, binary formatting decreases the portability of your application due to low-level byte ordering differences.</p><div class="NAVHEADER"><a name="AEN23680"></a><h3 class="AUTHOR">Restrictions and limitations</h3><p class="calibre9">There are a few restrictions to the <tt class="REPLACEABLE">COPY</tt> command.  In order for  <tt class="REPLACEABLE">COPY</tt> to read from the tables specified, your PostgreSQL user must have <tt class="REPLACEABLE">SELECT</tt> access granted on them. If you are directing <tt class="REPLACEABLE">COPY</tt> to insert values into a table, your PostgreSQL user must also have <tt class="REPLACEABLE">INSERT</tt> or <tt class="REPLACEABLE">UPDATE</tt> access.</p><p class="calibre9">Likewise, if you are copying files to or from a system file, the user running the PostgreSQL backend (the <span><i class="EMPHASIS">postmaster</i></span>) must have the necessary filesystem permissions on the specified file. To sidestep this restriction, the <tt class="REPLACEABLE">\copy</tt> command exists within <span><i class="EMPHASIS">psql</i></span> (see <a href="c12119.htm">Chapter 6</a> for more on this).</p><p class="calibre9">Using the <tt class="REPLACEABLE">COPY TO</tt> command will check constraints, and any triggers you may have set up, but it will not invoke rules or act on column defaults.</p><p class="calibre9"><tt class="REPLACEABLE">COPY</tt> will stop operation upon reaching the first error.  This should not lead to problems in the
      event of a <tt class="REPLACEABLE">COPY FROM</tt>, but the target relation will be partially modified in a <tt class="REPLACEABLE">COPY TO</tt>.
      The <tt class="REPLACEABLE">VACUUM</tt> command should be used to clean up after a failed <tt class="REPLACEABLE">COPY</tt> command.</p></div><div class="NAVHEADER"><a name="R3-SQL-COPY-2"></a><h3 class="AUTHOR">File formatting</h3><p class="calibre9">If you are a developer interested in the technical format of PostgreSQL's binary output, see <a href="a29525.htm">Appendix C</a>. If you choose to use normal text formatting instead of binary, the file <tt class="REPLACEABLE">COPY</tt> creates will be formatted as such: each row will appear on a single line, with column values separated by the <tt class="REPLACEABLE"><i class="EMPHASIS">delimiter</i></tt> character.  Any embedded characters located in the file have a preceding backslash (<tt class="REPLACEABLE">\</tt>), and column values are output as plain text strings.</p><p class="calibre9">If <tt class="REPLACEABLE">WITH OIDS</tt> is specified, the oid will be placed at the beginning of the line. If you create an output file using the <tt class="REPLACEABLE">WITH OIDS</tt> clause, and wish to import that data back into PostgreSQL (or on another PostgreSQL machine), remember to again specify the <tt class="REPLACEABLE">WITH OIDS</tt> clause. Otherwise, it will be interpreted as a normal column.</p><p class="calibre9">When <tt class="REPLACEABLE">COPY</tt> sends its results to standard output (<span><i class="EMPHASIS">stdout</i></span>), it will end the transfer with the following format: a backslash (<tt class="REPLACEABLE">\</tt>), a period (<tt class="REPLACEABLE">.</tt>), and a newline to mark the end of the file.  If an EOF (end of file) is reached before the normal end-format, it will automatically terminate.</p><p class="calibre9">Due to the backslash character having multiple definitions, you'll need to use an escape sequence to represent an actual backslash character. Do this by typing two consecutive backslashes (<tt class="REPLACEABLE">\\</tt>).  The other characters that require this method to display correctly are as follow: the tab character is represented as a backslash and a tab, and a newline is represented by a backslash and a newline.</p><p class="calibre9">Remember to pre-format any non-PostgreSQL text data that you are loading into the database by changing backslashes to double-backslashes.</p></div></div><div class="NAVHEADER"><a name="R1-SQL-COPY-3"></a><h2 class="SECT">Examples</h2><p class="calibre9">The example below copies the <tt class="REPLACEABLE">employees</tt> table to the <tt class="REPLACEABLE">emp_table</tt> file, using a pipe (<tt class="REPLACEABLE">|</tt>) as the field delimiter:</p><pre class="SCREEN">booktown=# <tt class="REPLACEABLE"><b class="calibre10">COPY employees TO '/tmp/employee_data' USING DELIMITERS '|';</b></tt>
COPY</pre><p class="calibre9">The following example copies data from a system file into the <tt class="REPLACEABLE">publishers</tt> table:</p><pre class="SCREEN">booktown=# <tt class="REPLACEABLE"><b class="calibre10">COPY publishers FROM '/tmp/publisher_data'</b></tt>;
COPY</pre></div><div class="NAVHEADER"><hr width="100%" class="calibre6"/><table summary="Footer navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><td width="33%" valign="top" class="calibre3"><a href="r23479.htm" accesskey="P">Prev</a></td><td width="34%" valign="top" class="calibre4"><a href="book1.htm" accesskey="H">Home</a></td><td width="33%" valign="top" class="calibre5"><a href="r23733.htm" accesskey="N">Next</a></td></tr><tr class="calibre1"><td width="33%" valign="top" class="calibre3">COMMIT</td><td width="34%" valign="top" class="calibre4"><a href="c22759.htm" accesskey="U">Up</a></td><td width="33%" valign="top" class="calibre5">CREATE AGGREGATE</td></tr></table></div></div>

{% endraw %}

