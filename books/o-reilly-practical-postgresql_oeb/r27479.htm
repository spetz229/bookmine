---
layout: page
title: "Unknown"
prev: r27431.htm
next: r27668.htm
book_path: books/o-reilly-practical-postgresql_oeb/
---
{% include JB/setup %}
{% raw %}
<div>
<div class="NAVHEADER"><table summary="Header navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><th colspan="3" class="calibre2">Practical PostgreSQL</th></tr><tr class="calibre1"><td width="10%" valign="bottom" class="calibre3"><a href="r27431.htm" accesskey="P">Prev</a></td><td width="80%" valign="bottom" class="calibre4"/><td width="10%" valign="bottom" class="calibre5"><a href="r27668.htm" accesskey="N">Next</a></td></tr></table><hr width="100%" class="calibre6"/></div><h1 class="calibre7"><a name="SQL-LOCK" class="calibre8">LOCK</a></h1><div class="NAVHEADER"><a name="AEN27483"></a><h2 class="SECT">Name</h2>LOCK -- Locks a table within a transaction.</div><div class="NAVHEADER"><a name="AEN27486"></a><h2 class="SECT">Synopsis</h2><pre class="SCREEN">LOCK [ TABLE ] <tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt>
LOCK [ TABLE ] <tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt> IN <tt class="REPLACEABLE"><i class="EMPHASIS">lock_mode</i></tt>
<tt class="REPLACEABLE"><i class="EMPHASIS">lock_mode</i></tt> ::= { [ ROW | ACCESS ] { SHARE | EXCLUSIVE } |
                SHARE ROW EXCLUSIVE } MODE</pre><div class="NAVHEADER"><a name="R2-SQL-LOCK-1"></a><h3 class="AUTHOR">Parameters</h3><p class="calibre9"> </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt></dt><dd class="calibre16"><p class="calibre9">The name of the table you intend to lock.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">lock_mode</i></tt></dt><dd class="calibre16"><p class="calibre9">There are seven valid lock modes that may be combined from the available keywords. Here they are, in order from least restrictive to most restrictive, along with the commands and modes they block:
        </p><a name="AEN27506"></a><blockquote class="NOTE"><p class="calibre9"></p></blockquote><p class="calibre9"> </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre17"><dt class="NAVHEADER"><tt class="REPLACEABLE">ACCESS SHARE MODE</tt></dt><dd class="calibre16"><p class="calibre9">The <tt class="REPLACEABLE">ACCESS SHARE MODE</tt> lock is acquired automatically by a <tt class="REPLACEABLE">SELECT</tt> statement on the table or tables it retrieves from. This mode blocks <tt class="REPLACEABLE">ALTER TABLE</tt>, <tt class="REPLACEABLE">DROP TABLE</tt>, and <tt class="REPLACEABLE">VACUUM</tt> commands on the table on which it is placed.</p><p class="calibre9">This mode also blocks concurrent <tt class="REPLACEABLE">ACCESS EXCLUSIVE MODE</tt> locks from being acquired on the same table.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">ROW SHARE MODE</tt></dt><dd class="calibre16"><p class="calibre9">The <tt class="REPLACEABLE">ROW SHARE MODE</tt> lock is acquired automatically by a <tt class="REPLACEABLE">SELECT</tt> statement that has a <tt class="REPLACEABLE">FOR UPDATE</tt> clause. It blocks <tt class="REPLACEABLE">ALTER TABLE</tt>, <tt class="REPLACEABLE">DROP TABLE</tt>, and <tt class="REPLACEABLE">VACUUM</tt> commands on the table on which it is acquired.</p><p class="calibre9">This mode also blocks concurrent <tt class="REPLACEABLE">EXCLUSIVE MODE</tt> and <tt class="REPLACEABLE">ACCESS EXCLUSIVE MODE</tt> locks from being acquired on the same table.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">ROW EXCLUSIVE MODE</tt></dt><dd class="calibre16"><p class="calibre9">The <tt class="REPLACEABLE">ROW EXCLUSIVE MODE</tt> lock is acquired automatically by an <tt class="REPLACEABLE">UPDATE</tt>, <tt class="REPLACEABLE">INSERT</tt>, or <tt class="REPLACEABLE">DELETE</tt> command. This mode blocks <tt class="REPLACEABLE">ALTER TABLE</tt>, <tt class="REPLACEABLE">DROP TABLE</tt>, <tt class="REPLACEABLE">VACUUM</tt>, and <tt class="REPLACEABLE">CREATE INDEX</tt> commands.</p><p class="calibre9">This mode also blocks concurrent <tt class="REPLACEABLE">SHARE MODE</tt>, <tt class="REPLACEABLE">SHARE ROW EXCLUSIVE MODE</tt>, <tt class="REPLACEABLE">EXCLUSIVE MODE</tt>, and <tt class="REPLACEABLE">ACCESS EXCLUSIVE MODE</tt> locks from being acquired on the same table.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">SHARE MODE</tt></dt><dd class="calibre16"><p class="calibre9">The <tt class="REPLACEABLE">SHARE MODE</tt> lock is acquired automatically by a <tt class="REPLACEABLE">CREATE INDEX</tt> command. It blocks <tt class="REPLACEABLE">INSERT</tt>, <tt class="REPLACEABLE">UPDATE</tt>, <tt class="REPLACEABLE">DELETE</tt>, <tt class="REPLACEABLE">ALTER TABLE</tt>, <tt class="REPLACEABLE">DROP TABLE</tt>, and <tt class="REPLACEABLE">VACUUM</tt> commands.</p><p class="calibre9">This mode also blocks concurrent <tt class="REPLACEABLE">ROW EXCLUSIVE MODE</tt>, <tt class="REPLACEABLE">SHARE ROW EXCLUSIVE MODE</tt>, <tt class="REPLACEABLE">EXCLUSIVE MODE</tt>, and <tt class="REPLACEABLE">ACCESS EXCLUSIVE MODE</tt> locks from being acquired on the same table.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">SHARE ROW EXCLUSIVE MODE</tt></dt><dd class="calibre16"><p class="calibre9">The <tt class="REPLACEABLE">SHARE ROW EXCLUSIVE MODE</tt> lock is a special lock mode nearly identical to the <tt class="REPLACEABLE">EXCLUSIVE MODE</tt> lock, but which allows concurrent <tt class="REPLACEABLE">ROW SHARE MODE</tt> locks to be acquired.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">EXCLUSIVE MODE</tt></dt><dd class="calibre16"><p class="calibre9">The <tt class="REPLACEABLE">EXCLUSIVE MODE</tt> lock blocks <tt class="REPLACEABLE">INSERT</tt>, <tt class="REPLACEABLE">UPDATE</tt>, <tt class="REPLACEABLE">DELETE</tt>, <tt class="REPLACEABLE">CREATE INDEX</tt>, <tt class="REPLACEABLE">ALTER TABLE</tt>, <tt class="REPLACEABLE">DROP TABLE</tt>, and <tt class="REPLACEABLE">VACUUM</tt> commands on the table on which it is acquired, as well as <tt class="REPLACEABLE">SELECT</tt> commands with a <tt class="REPLACEABLE">FOR UPDATE</tt> clause.</p><p class="calibre9">This mode also blocks concurrent <tt class="REPLACEABLE">ROW SHARE MODE</tt>, <tt class="REPLACEABLE">ROW EXCLUSIVE MODE</tt>, <tt class="REPLACEABLE">SHARE MODE</tt>, <tt class="REPLACEABLE">SHARE ROW EXCLUSIVE MODE</tt>, <tt class="REPLACEABLE">EXCLUSIVE MODE</tt>, and <tt class="REPLACEABLE">ACCESS EXCLUSIVE MODE</tt> locks.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">ACCESS EXCLUSIVE MODE</tt></dt><dd class="calibre16"><p class="calibre9">The <tt class="REPLACEABLE">ACCESS EXCLUSIVE MODE</tt> lock is acquired automatically by a <tt class="REPLACEABLE">ALTER TABLE</tt>, <tt class="REPLACEABLE">DROP TABLE</tt>, or <tt class="REPLACEABLE">VACUUM</tt> command on the table it modifies.</p><p class="calibre9">This mode blocks <span><i class="EMPHASIS">any</i></span> concurrent command or other <tt class="REPLACEABLE"><i class="EMPHASIS">lock_mode</i></tt> from being acquired on the locked table.</p></dd></dl></div>
</dd></dl></div>
</div><div class="NAVHEADER"><a name="R2-SQL-LOCK-2"></a><h3 class="AUTHOR">Results</h3><p class="calibre9"> </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE">LOCK TABLE</tt></dt><dd class="calibre16"><p class="calibre9">The message returned when a lock is successfully applied to a table.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">ERROR:  Relation '</tt><tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt><tt class="REPLACEABLE">' does not exist</tt></dt><dd class="calibre16"><p class="calibre9">The error returned if the table <tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt> does not exist in the connected database.</p></dd><dt class="NAVHEADER"><tt class="REPLACEABLE">ERROR:  Deadlock detected</tt></dt><dd class="calibre16"><p class="calibre9">The error returned if two <tt class="REPLACEABLE">LOCK TABLE</tt> commands result in a deadlock between two concurrent transactions.</p></dd></dl></div>
</div></div><div class="NAVHEADER"><a name="R1-SQL-LOCK-1"></a><h2 class="SECT">Description</h2><p class="calibre9">Use the <tt class="REPLACEABLE">LOCK TABLE</tt> command to manually <span><i class="EMPHASIS">lock</i></span> tables during a transaction. Locking is a function of an RDBMS that temporarily blocks various kinds of access to a table (depending on the <tt class="REPLACEABLE"><i class="EMPHASIS">lock_mode</i></tt>). The session that locks the table retains normal access; the effect is only felt by concurrently connected users attempting to access the locked table.</p><p class="calibre9">Note that, in this context, <span><i class="EMPHASIS">blocking</i></span> access is not the same as <span><i class="EMPHASIS">denying</i></span> access. Any concurrently connected user attempting access which is blocked by a SQL lock will pause, but not fail, and wait until either the blocked command is terminated by the user, or until the table lock is released.</p><p class="calibre9">Several SQL commands implicitly acquire locks before they perform their work; in these cases, PostgreSQL will always choose the least restrictive lock necessary. A table lock immediately releases when a transaction is committed.</p><p class="calibre9">Using <tt class="REPLACEABLE">LOCK TABLE</tt> without an explicit locking mode causes the most restrictive mode (<tt class="REPLACEABLE">ACCESS EXCLUSIVE</tt>) to be used. You can specify less restrictive locking procedures by providing an explicit <tt class="REPLACEABLE"><i class="EMPHASIS">lock_mode</i></tt>.</p><div class="NAVHEADER"><p class="calibre9"></p><table class="calibre" border="1" width="100%"><tr class="calibre1"><td class="calibre23"><b class="calibre10">Warning</b></td></tr><tr class="calibre1"><td class="calibre15"><p class="calibre9">You can only lock tables when working within a transaction. Using <tt class="REPLACEABLE">LOCK TABLE</tt> outside of a transaction will not display an error, but it will immediately autocommit, and release the lock, which serves no purpose. Use the <tt class="REPLACEABLE">BEGIN</tt> command to start a transaction, and the <tt class="REPLACEABLE">COMMIT</tt> command to commit your changes, and release the lock.</p></td></tr></table></div><p class="calibre9"><span><i class="EMPHASIS">Deadlocks</i></span> can occur when two transactions are waiting for each other to finish their operations. While PostgreSQL can detect them and end them with a <tt class="REPLACEABLE">ROLLBACK</tt>, deadlocks can still be inconvenient. To prevent your applications from running into this problem, make sure to design them in such a way that they will lock objects in the same order.</p></div><div class="NAVHEADER"><a name="R1-SQL-LOCK-2"></a><h2 class="SECT">Examples</h2><p class="calibre9">The following example locks the <tt class="REPLACEABLE">books</tt> table within the <tt class="REPLACEABLE">booktown</tt> database in <tt class="REPLACEABLE">ACCESS EXCLUSIVE</tt> mode:</p><pre class="SCREEN">booktown=# <tt class="REPLACEABLE"><b class="calibre10">BEGIN;</b></tt>
BEGIN
booktown=# <tt class="REPLACEABLE"><b class="calibre10">LOCK TABLE books IN ACCESS EXCLUSIVE MODE;</b></tt>
LOCK TABLE</pre></div><div class="NAVHEADER"><hr width="100%" class="calibre6"/><table summary="Footer navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><td width="33%" valign="top" class="calibre3"><a href="r27431.htm" accesskey="P">Prev</a></td><td width="34%" valign="top" class="calibre4"><a href="book1.htm" accesskey="H">Home</a></td><td width="33%" valign="top" class="calibre5"><a href="r27668.htm" accesskey="N">Next</a></td></tr><tr class="calibre1"><td width="33%" valign="top" class="calibre3">LOAD</td><td width="34%" valign="top" class="calibre4"><a href="c22759.htm" accesskey="U">Up</a></td><td width="33%" valign="top" class="calibre5">MOVE</td></tr></table></div></div>

{% endraw %}

