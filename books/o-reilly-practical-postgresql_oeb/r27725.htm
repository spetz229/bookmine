---
layout: page
title: "Unknown"
prev: r27668.htm
next: r27795.htm
book_path: books/o-reilly-practical-postgresql_oeb/
---
{% include JB/setup %}
{% raw %}
<div>
<div class="NAVHEADER"><table summary="Header navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><th colspan="3" class="calibre2">Practical PostgreSQL</th></tr><tr class="calibre1"><td width="10%" valign="bottom" class="calibre3"><a href="r27668.htm" accesskey="P">Prev</a></td><td width="80%" valign="bottom" class="calibre4"/><td width="10%" valign="bottom" class="calibre5"><a href="r27795.htm" accesskey="N">Next</a></td></tr></table><hr width="100%" class="calibre6"/></div><h1 class="calibre7"><a name="SQL-NOTIFY" class="calibre8">NOTIFY</a></h1><div class="NAVHEADER"><a name="AEN27729"></a><h2 class="SECT">Name</h2>NOTIFY -- Signals all backends that are listening for the specified notify event.</div><div class="NAVHEADER"><a name="AEN27732"></a><h2 class="SECT">Synopsis</h2><pre class="SCREEN">NOTIFY <tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt></pre><div class="NAVHEADER"><a name="R2-SQL-NOTIFY-1"></a><h3 class="AUTHOR">Parameters</h3><p class="calibre9"> </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE"><i class="EMPHASIS">name</i></tt></dt><dd class="calibre16"><p class="calibre9">The condition to be signaled.</p></dd></dl></div>
</div><div class="NAVHEADER"><a name="R2-SQL-NOTIFY-2"></a><h3 class="AUTHOR">Results</h3><p class="calibre9"> </p><p class="calibre9"></p><div class="NAVHEADER"><dl class="calibre9"><dt class="NAVHEADER"><tt class="REPLACEABLE">NOTIFY</tt></dt><dd class="calibre16"><p class="calibre9">The message returned when a notification is sent out correctly.</p></dd></dl></div>
</div></div><div class="NAVHEADER"><a name="R1-SQL-NOTIFY-1"></a><h2 class="SECT">Description</h2><p class="calibre9">The <tt class="REPLACEABLE">NOTIFY</tt> command is the counterpart of the <tt class="REPLACEABLE">LISTEN</tt> command, which we covered earlier in this chapter.  The two commands provide a simple interprocess communication (IPC) implementation that can often prove useful if used correctly.</p><p class="calibre9">Use <tt class="REPLACEABLE">NOTIFY</tt> to send out a notification with the specified name; if any frontends have issued a <tt class="REPLACEABLE">LISTEN</tt> command with the same notification name, they will be informed of the notification.</p><div class="NAVHEADER"><blockquote class="NOTE"><p class="calibre9"><b class="calibre10">Note: </b>The behavior of a frontend process after receiving a notification sent by the <tt class="REPLACEABLE">NOTIFY</tt> command is dependent upon its implementation of the feature, so it may not respond immediately (or at all).</p></blockquote></div><p class="calibre9">A notification is comprised of the notification's name and the issuing backend's process ID (PID).  The original designer of the database specifies what notify condition names exist and how they function within the database.</p><p class="calibre9">The <tt class="REPLACEABLE">NOTIFY</tt> and <tt class="REPLACEABLE">LISTEN</tt> commands are most often used to provide a way to notify frontend processes that tables have been modified; as such, notification names are often set to the names of tables. This is the <span><i class="EMPHASIS">common</i></span> use of this feature, but it is not required that notification names be table names.</p><div class="NAVHEADER"><blockquote class="NOTE"><p class="calibre9"><b class="calibre10">Note: </b>Automatic notification of table modifications can be achieved by placing the <tt class="REPLACEABLE">NOTIFY</tt> command in a rule that gets triggered by table updates.</p></blockquote></div><div class="NAVHEADER"><a name="AEN27772"></a><h3 class="AUTHOR">Transactions</h3><p class="calibre9">It is important to note how <tt class="REPLACEABLE">NOTIFY</tt> behaves when used with transactions.  Most importantly, any <tt class="REPLACEABLE">NOTIFY</tt> commands executed within a transaction will not be delivered until after the transaction is committed. This behavior prevents notifications from being sent out from aborted transactions.</p><p class="calibre9">Also important is that a backend will not deliver a notification to its connected frontend if a transaction is in progress.  If a frontend process is currently within a transaction, the backend will wait to send a notification until that transaction has been terminated with either a <tt class="REPLACEABLE">COMMIT</tt> or <tt class="REPLACEABLE">ROLLBACK</tt>. </p></div><div class="NAVHEADER"><a name="AEN27780"></a><h3 class="AUTHOR">Multiple signals</h3><p class="calibre9">The <tt class="REPLACEABLE">NOTIFY</tt>/<tt class="REPLACEABLE">LISTEN</tt> system works in a way that is very similar to that of UNIX signals. Even if the same notification is signaled multiple times using multiple <tt class="REPLACEABLE">NOTIFY</tt> commands, that notification may only be sent to listening processes only <span><i class="EMPHASIS">once</i></span>, instead of however many times it was signaled.</p><p class="calibre9">Because of this design feature, you cannot use the number of received notifications as a counter or to track anything important within your database.  The correct way to achieve tracking or counting would be to use <tt class="REPLACEABLE">NOTIFY</tt> with a sequence object (or something similar) to wake applications and track or count actions and events.</p></div></div><div class="NAVHEADER"><a name="R1-SQL-NOTIFY-2"></a><h2 class="SECT">Example</h2><p class="calibre9">The following example defines a notify event to listen for, and then notifies the backend process that the event was reached:</p><pre class="SCREEN">booktown=# <tt class="REPLACEABLE"><b class="calibre10">LISTEN publisher_deletion;</b></tt>
LISTEN
booktown=# <tt class="REPLACEABLE"><b class="calibre10">NOTIFY publisher_deletion;</b></tt>
Asynchronous NOTIFY 'publisher_deletion' from backend with pid '16864' received.</pre></div><div class="NAVHEADER"><hr width="100%" class="calibre6"/><table summary="Footer navigation table" width="100%" border="0" cellpadding="0" cellspacing="0" class="calibre"><tr class="calibre1"><td width="33%" valign="top" class="calibre3"><a href="r27668.htm" accesskey="P">Prev</a></td><td width="34%" valign="top" class="calibre4"><a href="book1.htm" accesskey="H">Home</a></td><td width="33%" valign="top" class="calibre5"><a href="r27795.htm" accesskey="N">Next</a></td></tr><tr class="calibre1"><td width="33%" valign="top" class="calibre3">MOVE</td><td width="34%" valign="top" class="calibre4"><a href="c22759.htm" accesskey="U">Up</a></td><td width="33%" valign="top" class="calibre5">REINDEX</td></tr></table></div></div>

{% endraw %}

